---
title: "Tutorial: Getting Started with a Quarto Webpage "
subtitle: "Basic set-up"
description: ""
title-block-banner: "#9e043d"
toc: true
---

## Why a Quarto webpage?

This tutorial provides an introduction to creating a basic webpage using **Quarto** within **RStudio**. Quarto, the next-generation version of R Markdown, allows you to author dynamic content and can render to various formats, including websites.

## Your workbook

While learning *stats* and coding, you'll also learn how to build and publish **simple websites** using R and RStudio. This website is vital for you learning during this module. This is going to be your live coursebook. 

See some examples how NTU students used this for the summative last year:

- [Example 1](https://rpubs.com/katieprange/1265088)

- [Example 2](https://rpubs.com/Tbowne911/1226661)

::: {.callout-tip}
## Invest on your worbook

Your workbook is going to be your "best friend" during this module. There you can experiment, create personal notes and gather bibliography. It works like a paper notebook, but it is a website. 
:::


## Prerequisites

Before you begin, ensure you have the following:

*   **R** installed on your computer.
*   **RStudio** installed on your computer.
*   The **`quarto` package** may need to be installed if you intend to render from the R console:

```{r}
#| warning: false
install.packages("quarto")

```


## Creating a Quarto Project (Recommended for Websites)

While not explicitly detailed in these short excerpts, for creating a webpage (which often involves multiple pages and assets), it is generally recommended to start with a **Quarto project**. This helps organise your website files.

1.  In RStudio, go to **File > New Project...**.
2.  Choose **New Directory**.
3.  Select **Quarto Project**.
4.  Choose a name for your project and a location to save it.
5.  Click **Create Project**.

This will create a basic Quarto project structure.

<iframe width="611" height="343" src="https://www.youtube.com/embed/_f3latmOhew" title="Get started with Quarto | Mine Çetinkaya-Rundel" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

## Creating Your Webpage Content

Webpages in a Quarto website are typically created as **`.qmd` files**, similar to standard Quarto documents.

1.  Within your Quarto project, go to **File > New File > Quarto Document...**.
2.  Choose your desired default format (this might be less critical for individual content pages within a website structure, as the website configuration will largely dictate the final output). Click **Create**.
3.  This will open a new `.qmd` file where you can write your webpage content using a combination of:
    *   **YAML Header**: Each page can have an optional YAML header (demarcated by `---` at the start and end) to specify metadata like the title.

        ```yaml
        ---
        title: "My Webpage"
        ---
        ```
    *   **Markdown Text**: Use standard Markdown syntax to format your text, headings, lists, links, images, etc.. RStudio's **Visual editor** can be helpful for this, offering a WYSIWYM experience [1]. You can switch between **Visual** and **Source** modes using the toolbar or the shortcut **⌘⇧ F4** (macOS) or **Ctrl+Shift+F4** (Windows/Linux) [1].
    *   **Code Chunks**: You can embed and execute code (primarily R in this context, indicated by ````{r}`) within your webpage to create dynamic content [2, 3]. You can **run individual code chunks interactively** in RStudio by clicking the **Run** icon or using the keyboard shortcut (**⇧⌘⏎** on macOS or **Ctrl+Shift+Enter** on Windows/Linux).

## Configuring Your Quarto Website

Creating a multi-page website with Quarto involves a configuration file, typically named `_quarto.yml`, in the root of your project. This file defines the navigation, theme, and other website-level settings.

**Note:** The provided sources do not contain specific details on the structure and content of the `_quarto.yml` file. However, based on Quarto's nature as a next-generation version of R Markdown [4], it leverages YAML for configuration. You would typically define your website's navigation links to your different `.qmd` content pages within this file.

## Rendering Your Quarto Webpage(s)

Once you have your content pages (`.qmd` files`) and your website configuration (`_quarto.yml`), you can render your website.

1.  In RStudio, with your Quarto project open, you can typically use the **Build** pane. Look for a **Render Website** option. Clicking this will process your project files according to your `_quarto.yml` configuration and generate your website.
2.  Alternatively, you might be able to render the entire website from the R console within your project directory using the `quarto` package, though the specific command for a website render isn't detailed in the excerpts. It would likely be related to the `quarto::quarto_render()` function but applied at the project level.

## Previewing Your Webpage

After rendering, Quarto will generate the necessary HTML and other files for your website. You can usually preview your webpage by looking a the **Viewer** tab in bottom-right panel of your Rstudio window.

## Further Steps

This tutorial provides a basic introduction. Creating a full-fledged website with Quarto involves learning more about:

*   The **`_quarto.yml` configuration file** to control navigation, theme, and other website settings.
*   Organising your content into multiple `.qmd` pages.
*   Using **themes** to style your website.
*   Including **assets** like images and CSS files.

This is a starting point to introduce Quarto as a tool capable of creating websites and its reliance on `.qmd` files and YAML. You would need to consult further Quarto documentation for detailed instructions on website creation.

By following these initial steps, you can begin to explore the possibilities of creating webpages with Quarto in RStudio. 

## Publish your workbook

There are many ways to publish your workbook and you might chose simple or more advanced ways.

### Simple Rpubs page



