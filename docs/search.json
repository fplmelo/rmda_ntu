[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Research Methods & Data Analyses",
    "section": "",
    "text": "We hope this module will be an opportunity to enhance your critical and analytical skills, required for your future careers. This module is the only core module across all PG provision at ARES, reflecting its underpinning importance for your courses. It also gives you a great opportunity to meet colleagues with different interests and to broaden your own horizons.\nWe have tried to make this module as accessible as possible, knowing that some of the content is challenging. We have based all materials in our own research expertise, we are not statisticians, rather we are statistic users, just like you!\nWe are looking forward to meeting you all",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Research Methods & Data Analyses",
    "section": "",
    "text": "We hope this module will be an opportunity to enhance your critical and analytical skills, required for your future careers. This module is the only core module across all PG provision at ARES, reflecting its underpinning importance for your courses. It also gives you a great opportunity to meet colleagues with different interests and to broaden your own horizons.\nWe have tried to make this module as accessible as possible, knowing that some of the content is challenging. We have based all materials in our own research expertise, we are not statisticians, rather we are statistic users, just like you!\nWe are looking forward to meeting you all",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#who-am-i",
    "href": "index.html#who-am-i",
    "title": "Research Methods & Data Analyses",
    "section": "Who am I?",
    "text": "Who am I?\nFelipe Melo (Module Leader): felipe.melo@ntu.ac.uk\nAbout me: I am interested in all kinds of interactions between biodiversity and human activities that take place in working landscapes in the tropical regions of the world. My research products are shared between basic and applied sciences with a strong interdisciplinary integration.\nVisit my personal website at www.ecoaplic.org",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "sessions.html",
    "href": "sessions.html",
    "title": "Sessions",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "sessions.html#weeks",
    "href": "sessions.html#weeks",
    "title": "Sessions",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "pages/intro.html",
    "href": "pages/intro.html",
    "title": "Intro do RM&DA",
    "section": "",
    "text": "why R is a valuable tool? for your studies and how to begin using it effectively, particularly with the RStudio IDE.\n\n\nR was developed by statisticians as an interactive environment for data analysis, unlike programming languages like C or Java. This interactivity is crucial for the quick exploration of data, a necessity in data science. Although interactive, your work can be saved as reproducible scripts. While expert programmers may find its conventions different, R offers significant power in data analysis and data visualization.\nOther attractive features of R include:\n\nIt is free and open source.\nIt runs on all major platforms: Windows, Mac OS, UNIX/Linux.\nScripts and data objects can be shared seamlessly across platforms.\nIt has a large, growing, and active community providing numerous learning resources.\nIt is easy for others to contribute add-ons (packages), giving users access to the latest methodologies and tools for various disciplines.\n\nR’s primary design purpose was to serve as an interactive environment for data analysis, having been developed by statisticians rather than software engineers for software development. This interactivity is highlighted as an indispensable feature in data science because it allows for the ability to quickly explore data, which is crucial for success in the field.\nA key benefit of R, stemming directly from its design, is this interactivity, which enables data scientists to rapidly examine and understand their data. Furthermore, the ability to save interactive work as scripts that can be easily executed at any time provides a record of the analysis, making work reproducible. Beyond interactivity and reproducibility, the text also notes the “unequal power of R when it comes to data analysis and, specifically, data visualization” as a significant benefit that users will come to appreciate with patience.\n\n\n\nInteractive data analysis usually takes place in the R console, which executes commands as you type them. You can access it by starting R on your computer. The chapter provides an example of calculating a tip using the console and explains the book’s convention of using grey boxes for R code and #&gt; to denote console output.\n\n\n\nA major advantage of R is the ability to save your work as scripts, which can be edited and saved using a text editor. The material in the book was developed using the RStudio integrated development environment (IDE). RStudio offers an editor with R-specific features, a console, and other useful panes, including one for displaying figures. While some web-based R consoles offer script editing, not all allow saving. The R scripts used to generate the book are available on GitHub.\n\n\n\nRStudio is presented as the primary tool for data science projects. It provides an editor for creating and editing scripts and other useful tools.\n\n\nWhen you first open RStudio, you typically see three panes: * The left pane is the R console. * On the right, the top pane includes tabs like Environment and History. * The bottom pane shows tabs such as Files, Plots, Packages, Help, and Viewer.\n\n\n\nRStudio allows you to use key bindings (keyboard shortcuts) for many tasks instead of using the mouse. The chapter recommends memorising key bindings for frequently used operations and notes that RStudio provides a cheat sheet with common commands.\n\n\n\nRStudio is specifically designed for R and offers advantages over other editors, such as the ability to easily test code as you edit scripts. To start a new script, you can go to File &gt; New File &gt; R Script or use the key binding Ctrl+Shift+N (Windows) or command+shift+N (Mac). The chapter explains how to save a script (Ctrl+S or command+S) and recommends using a descriptive name with lowercase letters, hyphens, and the .R suffix (e.g., my-first-script.R).\nRStudio offers features like auto-completion when typing code, such as the library() function. To execute code from the script, you can click the Run button or use the key binding Ctrl+Shift+Enter (Windows) or command+shift+return (Mac), which will show the output in the R console and plots in the plots pane. You can also run one line at a time using Control-Enter (Windows) or command-return (Mac). The plots console allows you to navigate between plots, zoom, and save them.\n\n\n\nRStudio’s look and functionality can be customised via Tools &gt; Global Options…. The chapter highly recommends changing the default setting for “Save workspace to .RData on exit” to “Never” and unchecking “Restore .RData into workspace at start”. This is advised to prevent confusion, especially when sharing code, as it avoids the assumption that colleagues have the .RData file.\n\n\n\n\nThe functionality of a fresh R installation (referred to as base R) is limited. Additional functionality comes from packages, which are add-ons contributed by developers and available from repositories like CRAN and GitHub. To install a package, such as dslabs, you can use the install.packages() function in the R console:\ninstall.packages ( \"dslabs\" )\nAlternatively, you can use the Tools &gt; Install Packages option in RStudio. Once installed, a package can be loaded into your R session using the library() function:\nlibrary (dslabs)\nYou only need to install a package once unless you install a fresh version of R. You can install multiple packages at once by providing a character vector to install.packages():\ninstall.packages ( c ( \"tidyverse\" ,  \"dslabs\" ))\nInstalling some packages, like tidyverse, may also install other dependency packages. When you load a package with library(), its dependencies are also loaded. It is useful to keep a list of needed packages in a script for easy re-installation if required. You can see all installed packages using the installed.packages() function. Importantly, packages are installed in R, not RStudio.",
    "crumbs": [
      "Content",
      "Week 1 - Introduction"
    ]
  },
  {
    "objectID": "pages/intro.html#anticipated-deliverables",
    "href": "pages/intro.html#anticipated-deliverables",
    "title": "Customizing Quarto websites",
    "section": " Anticipated deliverable(s)",
    "text": "Anticipated deliverable(s)\nBy the end of today’s class, you should have:\n\nyour personal branding guide (to be completed ahead of class)\na stylesheet (.scss file) for customizing your website’s appearance",
    "crumbs": [
      "Content",
      "Week 1 - Introduction"
    ]
  },
  {
    "objectID": "pages/intro.html#pre-class-prep",
    "href": "pages/intro.html#pre-class-prep",
    "title": "Customizing Quarto websites",
    "section": " Pre-class Prep",
    "text": "Pre-class Prep\n\nA. Create your own personal branding guide\nThis week’s pre-class prep is to create your own personal branding guide – a collection of visual and messaging resources (e.g. colors, fonts, logos, key words) used to create a uniform image of a brand. Here, that brand is you!\nWhy is it important that you consider your brand identity? Bren Teaching Faculty and science communication professional, Alex Phillips, summarizes this nicely in her talk Establishing Your Online Presence. She explains that establishing your brand identity:\n\ngives you more control over your online presence \ncreates consistency, which builds trustworthiness and credibility \nfilters decision-making about your online content \n\n\n\n\n\n\n\nInterested in reading more about the benefits of developing a personal brand? Check out these resources:\n\n\n\n\n\nMany thanks to Miya Scheble (MEDS career Development Program Manager) for sharing these resources!\n\nHow to build your personal brand as a newbie data analyst., by Bright\nBuilding a Personal Brand in Data Science: Your Key to Career Advancement, by Kannan Kasi\nUsing data science to build a personal brand, by Abigail (Abby) Shockley\nHow To Build a Personal Brand: 10 Tips, by Shayna Joubert\nHow to Build a Personal Brand Website: 5 Essentials to Include, by Kathryn Lang\nBuilding a Data Science Brand, by Kate Strachnyi\n\n\n\n\nFill out this personal branding guide template ahead of class. Read through sections I - VI, below, for guidance. Here is my personal branding guide, as an example.\n\nI. Write down your personal branding adjectives and key messages\n\n\n\n\n\n\n Expand for information on branding adjectives and key messages\n\n\n\n\n\nYour personal branding adjectives are words that guide how you present yourself and your brand. While you don’t need to explicitly state these words on your website (though you certainly can!), they serve to:\n\ndefine your brand’s personality\nconnect with your target audience(s)\nshape your tone (in both your writing, visual, and overall aesthetic styles)\n\nWrite down 3-5 adjectives to describe your personal brand.\nConsider:\n\nHow do you want people to perceive you?\nWhat do you want to communicate about yourself?\nWhat are your qualities, motivations, values, strengths? Your personal branding adjectives do not need to describe everything you already are – they can be descriptors of your long-term goals, values, and motivations.\nYou can check out some curated lists as a starting point – see lists by Lead Through Strengths and Branding by Juls, or explore the many others online\n\nOnce you’ve determined your personal branding adjectives, jot down a few key messages that capture the core ideas you want to convey about your brand.\nConsider:\n\nHow do these key messages incorporate / add context to your personal branding adjectives?\nAim for ~2-3 sentences (can be bullet points)\nSimilar to your adjectives, these key messages do not need to be explicitly stated somewhere on your website. However, you may find that they work well as taglines on your landing page (or even your LinkedIn profile), or help you (re)frame your website bio.\n\n\n\n\n\n\nII. Define your target audience(s)\n\n\n\n\n\n\n Expand for information on defining your target audience(s)\n\n\n\n\n\nYour brand does not need to speak to or reach everyone – instead, you should have a target audience(s) in mind. Knowing your audience helps you make decisions on:\n\nwhat types of content you publish\nhow you arrange content\nwhat level or types of details you need to include\nyour tone\n\nWrite down your target audience(s).\nSome examples include:\n\npotential employers (feel free to be more specific here as well, e.g. potential employers in the environmental data science sector)\nearly career data scientists or environmental scientists\nenvironmental data scientists who are also passionate about &lt; fill in the blank &gt; (Jadey Ryan is a great example of this!)\n\n\n\n\n\n\nIII. Select your typefaces / fonts\n\n\n\n\n\n\n Expand for information on selecting typefaces / fonts\n\n\n\n\n\nFirst, a few important definitions:\n\ntypeface (aka font family): the underlying visual design (e.g. Times New Roman, Helvetica, Roboto)\nfont: an implementation / variation of a typeface (e.g. Times New Roman in bold, Times New Roman in italic)\n\nDuring class, we’ll learn how to import font families from Google Fonts for use across our website. Explore the vast selection, and choose 1-2 font families. Add their names and hyperlinks to your personal branding guide.\n\nTips on choosing your font family(ies):\n\nStick to 1-2 font families. Using too many typefaces can overwhelm a reader. You can use one typeface across your entire website, or alternatively, choose one typeface for things like header text and another for body text.\nWhen in doubt, use a sans-serif font family. Sans-serif fonts work great everywhere, but are especially ideal for body text since they’re cleaner and easier to read. If you do want to use a serif font, it’s best to reserve those for any header text.\nMake sure your font family choice(s) have a variety of styles. If your font family doesn’t include bold or italicized styles, you won’t actually be able to apply those styles to your website. For example, Nunito comes in a variety of weights (boldness levels) and italic, where Sen comes in a variety of weights, but not italic.\nCheck out some visually-pleasing font pairings. fontpair has hundreds of Google Font pairings to browse!\n\n\n\n\n\n\n\nIV. Build your color palette\n\n\n\n\n\n\n Expand for information on building color palettes\n\n\n\n\n\nOne of the most exciting parts of building a website is deciding on which colors you’ll use. This can take some time and tweaking, so it’s helpful to think a bit about your palette beforehand. We’ll consider updating colors for the following website elements:\n\nNavigation Bar: navbar background color, foreground (text) color, hover highlight color\nMain Body: body background color, body text color, hyperlink color, in-line code color, inline-code background color\nPage Footer: footer background color\n\nWe’ll be using a language called Sass to create variables for each of the colors we plan to use throughout our websites (more on that soon!).\nIt’s helpful to draft up your color variables ahead of time (and save them to your personal branding guide) so that you easily copy them into your stylesheet during class. Define your color variables using the syntax, $variable-name: value;, where you decide on your variable-name, and value is a HEX color code (htmlcolorcodes.com is my favorite site for grabbing HEX codes).\nFor example, here are the color variables I’ll use for my website during the workshop:\n\n$dark-green: #858E79;\n$light-green: #D1D9CE;\n$cream: #FDFBF7;\n$gray: #64605f;\n$purple: #9158A2;\n$orange: #ad7237;\n\n\nTips on choosing your color palette:\n\nStick to about 3-4 main colors. Choosing too many colors can overwhelm readers. Consider using different shades of the primary color throughout your site, with a couple complementing / contrasting colors for important highlighted text and / or features. A good general rule of thumb is the 60-30-10 rule – your primary color should be used in ~60% of your design, the secondary color should take up ~30%, and your accent color ~10%.\nConsider what emotions your color choices evoke: Colors influence perceptions, emotions, and even behavior. Consider which colors best reflect your branding adjectives and key messages. See this post on color psychology, by HubSpot for guidance.\nUse a random color generator. My favorite is https://coolors.co/ – press the space bar to generate new colors. When you see one (or more) that you like, “lock” them in place by clicking on the lock icon. Continue pressing the space bar to generate new colors in the “unlocked” positions.\nGenerate a color palette from a photo / image. Have an interesting background in your headshot? Consider generating a palette off of it! Check out Color Thief for all your color stealing needs. Alternatively, explore pre-made palettes generated from trending Adobe Stock photos.\nConsider contrast and colorblindness-friendly palettes. I love the Let’s get color blind Google Chrome extension for simulating color deficiencies in the web browser, and the coolers color contrast checker for calculating the contrast ratio of text and background colors (it’ll even suggest modified colors to improve your contrast, if needed).\nGet inspired by other websites. And you don’t need to take inspiration only from Quarto websites. Just a small handful of examples sites with color schemes that I really love:\n\nAngelina Miller\nMeghan Hall\nNicola Rennie\nSylvia Canelón\nEmil Hvitfeldt\nElla Kaye\nRobert Mitchell\nMaya Gans\n\n\n\n\n\n\n\n\nV. (Optional) Create a personal logo and / or favicon\n\n\n\n\n\n\n Expand for information on creating a personal logo\n\n\n\n\n\nQuarto supports adding a personal logo to the top left corner of your website’s navbar (e.g. see my website). While completely optional, logos can be attention-grabbing and memorable, offering a way to distinguish yourself. If you’d like to start workshopping your own logo, consider the following tips and try out some free logo makers:\n\nTips & resources for creating a personal logo:\n\nKeep it simple\nConsider incorporating your name or initials (though not necessarily required)\nColors and fonts should match / complement the rest of your branding guide\nConsider creating a favicon (image displayed in a web browser’s address bar) that matches / complements your logo\nTry out one of these free logo makers:\n\nAdobe Express (this is what I used for my personal logo)\nCanva\nWix\n\n\n\n\n\n\n\n\nVI. Curate potential image assets\n\n\n\n\n\n\n Expand for information on image assets\n\n\n\n\n\nBranding image assets are visual elements that help to define a brand’s identity.\nThese include your logo, headshot, and any other photos / images you plan to use across your website. You might also include images that influence the overall aesthetic of your brand, but that might not necessarily be used as content on your site.\nBegin gathering your image assets and add them to your personal branding guide. You may consider checking out the following image collections for additional or supplementary images:\n\nUC Santa Barbara’s Digital Asset Library\nFree Ocean Landscapes, by Alex Phillips\nUnsplash (though many images do require a paid subscription to access){target=“_blank”}",
    "crumbs": [
      "Content",
      "Week 1 - Introduction"
    ]
  },
  {
    "objectID": "pages/intro.html#lecture-materials",
    "href": "pages/intro.html#lecture-materials",
    "title": "Customizing Quarto websites",
    "section": " Lecture Materials",
    "text": "Lecture Materials\nWe’ll spend our class time learning how to style our Quarto websites using a variety of approaches – from modifying our _quarto.yml file, to creating a stylesheet with Sass variables and CSS rules. Have your personal branding guide ready to reference throughout! All code and examples that we’ll cover can be found in these slides:\n\n Customizing Quarto websites",
    "crumbs": [
      "Content",
      "Week 1 - Introduction"
    ]
  },
  {
    "objectID": "pages/intro.html#continue-working",
    "href": "pages/intro.html#continue-working",
    "title": "Customizing Quarto websites",
    "section": " What should I continue working on?",
    "text": "What should I continue working on?\n\nSeek feedback on your personal brand from those who know you well. Would they use the same adjectives to describe you? What strengths and characteristics do they perceive that you hadn’t identified yourself? What emotions do your colors, fonts, imagery, and tone evoke? It’s important to remember that your personal brand can (and should) evolve with you! This week is just a starting point.\nRevisit and revise your landing page content / bio, as needed. Does your landing page bio fit your personal brand? Consider what information you include and your tone – does it make sense to revise your bio to better fit your brand? Consider if your chosen template suits your needs, or if a different layout might work better.\nAdd pages to your website. Has thinking deeply about your personal brand inspired ideas for different web pages? Go ahead and add them! Recall that you can add / remove pages by modifying your _quarto.yml file (see last class’ materials if you need a reminder of how to do so). It’s sufficient to include placeholder text to those pages (e.g. Coming soon!) if you’re not quite ready to complete them. You may also remove pages (e.g. about.qmd and resources.qmd) if you don’t plan to use them (though note that you must keep index.qmd).\nFinish applying your colors to different website elements using Quarto’s Sass variables. And test out different color combos and / or fonts, if you’re not totally satisfied with your original choices. This is arguably the most fun part of building your website and where you can really let your personality and brand shine through. It can take a while to settle on something that you feel really represents you, and that’s okay (I’ve changed my entire color scheme and font styles multiple times over the years).\nConsider writing / borrowing / adapting CSS rules to refine your website styling. You can take your website styling far just by defining Quarto’s Sass variables. However, if you’re looking to fine-tune the appearance of certain web page elements, you may consider turning to more CSS. Review the workshop slides for suggested approaches and tools for guiding your CSS-writing journeys.",
    "crumbs": [
      "Content",
      "Week 1 - Introduction"
    ]
  },
  {
    "objectID": "pages/intro.html#optional-lunch-with-an-nceas-data-scientist",
    "href": "pages/intro.html#optional-lunch-with-an-nceas-data-scientist",
    "title": "Customizing Quarto websites",
    "section": " (Optional) Lunch with an NCEAS Data Scientist",
    "text": "(Optional) Lunch with an NCEAS Data Scientist\nPlease see the fall lunch schedule for details on today’s NCEAS guests!",
    "crumbs": [
      "Content",
      "Week 1 - Introduction"
    ]
  },
  {
    "objectID": "pages/overview.html",
    "href": "pages/overview.html",
    "title": "Module Overview",
    "section": "",
    "text": "Artwork by @allison_horst",
    "crumbs": [
      "Module Overview"
    ]
  },
  {
    "objectID": "pages/overview.html#module-aims",
    "href": "pages/overview.html#module-aims",
    "title": "Module Overview",
    "section": "Module Aims",
    "text": "Module Aims\nThis module aims to provide you with advanced skills in interpretation of quantitative and qualitative research data relevant to whole-organism biology, and to develop critical understanding of the ethical considerations involved in the collection of data. The module also aims to underpin the other modules in the Masters Framework by investigating experimental design, ethics, project management and funding.\nYou will be able to present findings of scientific research in a variety of appropriate ways, as well as critically evaluating, interpreting and relaying knowledge gained from secondary sources to peers.",
    "crumbs": [
      "Module Overview"
    ]
  },
  {
    "objectID": "pages/overview.html#delivery-mode",
    "href": "pages/overview.html#delivery-mode",
    "title": "Module Overview",
    "section": "Delivery Mode",
    "text": "Delivery Mode\nThe RMDA module takes a blended approach to learning, as such many of the sessions provided, including drop-in sessions, will be via TEAMS. This will allow you to use R in real time, in class, inputting commands and analysing data as we go. The idea behind this is that you will be able to highlight and rectify any issues using R at the point of learning so that you can then continue confidently with tasks in your own time.\nIssues will arise especially if this is your first opportunity to use R, that’s ok, we have a great team to support you so don’t be afraid to speak up and get the help you need right away. We will discuss how to do this and general guidelines on how you can contribute to the online sessions during our module introduction session (Face to Face classroom session)",
    "crumbs": [
      "Module Overview"
    ]
  },
  {
    "objectID": "pages/overview.html#attendance-and-engagement",
    "href": "pages/overview.html#attendance-and-engagement",
    "title": "Module Overview",
    "section": "Attendance and engagement",
    "text": "Attendance and engagement\nPlease bear in mind that attendance and engagement with module content is vital for successful completion of the module. Please notify your year tutor immediately if you have any concerns regarding an inability to do this over an extended period. The demonstrator team and I will be monitoring engagement and I will contact you and your tutor to “check in” if I believe there are issues. If I do check in with you, remember I am doing this out of concern for your learning experience and not to chastise so please engage with these opportunities. The sooner we know there is a problem, the sooner we can help.",
    "crumbs": [
      "Module Overview"
    ]
  },
  {
    "objectID": "pages/overview.html#knowledge-and-understanding",
    "href": "pages/overview.html#knowledge-and-understanding",
    "title": "Module Overview",
    "section": "Knowledge and Understanding",
    "text": "Knowledge and Understanding\nBy the end of this module, you should be able to:\n\nEvaluate ethical considerations of scientific research.\nEvaluate original research projects using an in-depth understanding of the scientific process.\nDemonstrate a level of expertise in highly specialised and advanced research and analytical tools, technical communication and professional skills.",
    "crumbs": [
      "Module Overview"
    ]
  },
  {
    "objectID": "pages/overview.html#skills-qualities-and-attributes",
    "href": "pages/overview.html#skills-qualities-and-attributes",
    "title": "Module Overview",
    "section": "Skills, Qualities and Attributes",
    "text": "Skills, Qualities and Attributes\nBy the end of this module, you should be able to:\n\nSynthesise and critically analyse scientific data and current literature both generally and specifically and, where appropriate, propose new hypotheses.\nCommunicate current knowledge and latest research in a specific area of interest to a variety of audiences or specialist levels.\nDemonstrate independent or self-directed learning and initiative at a professional or equivalent level.",
    "crumbs": [
      "Module Overview"
    ]
  },
  {
    "objectID": "pages/overview.html#requesting-support-with-inaccessible-files-or-features",
    "href": "pages/overview.html#requesting-support-with-inaccessible-files-or-features",
    "title": "Module Overview",
    "section": "Requesting support with inaccessible files or features",
    "text": "Requesting support with inaccessible files or features\nIf you locate any resource within this Learning Room that you cannot access for any reason, please contact Felipe Melo via email felipe.melo@ntu.ac.uk",
    "crumbs": [
      "Module Overview"
    ]
  },
  {
    "objectID": "pages/intro.html#getting-started-with-r-and-rstudio",
    "href": "pages/intro.html#getting-started-with-r-and-rstudio",
    "title": "Intro do RM&DA",
    "section": "",
    "text": "why R is a valuable tool? for your studies and how to begin using it effectively, particularly with the RStudio IDE.\n\n\nR was developed by statisticians as an interactive environment for data analysis, unlike programming languages like C or Java. This interactivity is crucial for the quick exploration of data, a necessity in data science. Although interactive, your work can be saved as reproducible scripts. While expert programmers may find its conventions different, R offers significant power in data analysis and data visualization.\nOther attractive features of R include:\n\nIt is free and open source.\nIt runs on all major platforms: Windows, Mac OS, UNIX/Linux.\nScripts and data objects can be shared seamlessly across platforms.\nIt has a large, growing, and active community providing numerous learning resources.\nIt is easy for others to contribute add-ons (packages), giving users access to the latest methodologies and tools for various disciplines.\n\nR’s primary design purpose was to serve as an interactive environment for data analysis, having been developed by statisticians rather than software engineers for software development. This interactivity is highlighted as an indispensable feature in data science because it allows for the ability to quickly explore data, which is crucial for success in the field.\nA key benefit of R, stemming directly from its design, is this interactivity, which enables data scientists to rapidly examine and understand their data. Furthermore, the ability to save interactive work as scripts that can be easily executed at any time provides a record of the analysis, making work reproducible. Beyond interactivity and reproducibility, the text also notes the “unequal power of R when it comes to data analysis and, specifically, data visualization” as a significant benefit that users will come to appreciate with patience.\n\n\n\nInteractive data analysis usually takes place in the R console, which executes commands as you type them. You can access it by starting R on your computer. The chapter provides an example of calculating a tip using the console and explains the book’s convention of using grey boxes for R code and #&gt; to denote console output.\n\n\n\nA major advantage of R is the ability to save your work as scripts, which can be edited and saved using a text editor. The material in the book was developed using the RStudio integrated development environment (IDE). RStudio offers an editor with R-specific features, a console, and other useful panes, including one for displaying figures. While some web-based R consoles offer script editing, not all allow saving. The R scripts used to generate the book are available on GitHub.\n\n\n\nRStudio is presented as the primary tool for data science projects. It provides an editor for creating and editing scripts and other useful tools.\n\n\nWhen you first open RStudio, you typically see three panes: * The left pane is the R console. * On the right, the top pane includes tabs like Environment and History. * The bottom pane shows tabs such as Files, Plots, Packages, Help, and Viewer.\n\n\n\nRStudio allows you to use key bindings (keyboard shortcuts) for many tasks instead of using the mouse. The chapter recommends memorising key bindings for frequently used operations and notes that RStudio provides a cheat sheet with common commands.\n\n\n\nRStudio is specifically designed for R and offers advantages over other editors, such as the ability to easily test code as you edit scripts. To start a new script, you can go to File &gt; New File &gt; R Script or use the key binding Ctrl+Shift+N (Windows) or command+shift+N (Mac). The chapter explains how to save a script (Ctrl+S or command+S) and recommends using a descriptive name with lowercase letters, hyphens, and the .R suffix (e.g., my-first-script.R).\nRStudio offers features like auto-completion when typing code, such as the library() function. To execute code from the script, you can click the Run button or use the key binding Ctrl+Shift+Enter (Windows) or command+shift+return (Mac), which will show the output in the R console and plots in the plots pane. You can also run one line at a time using Control-Enter (Windows) or command-return (Mac). The plots console allows you to navigate between plots, zoom, and save them.\n\n\n\nRStudio’s look and functionality can be customised via Tools &gt; Global Options…. The chapter highly recommends changing the default setting for “Save workspace to .RData on exit” to “Never” and unchecking “Restore .RData into workspace at start”. This is advised to prevent confusion, especially when sharing code, as it avoids the assumption that colleagues have the .RData file.\n\n\n\n\nThe functionality of a fresh R installation (referred to as base R) is limited. Additional functionality comes from packages, which are add-ons contributed by developers and available from repositories like CRAN and GitHub. To install a package, such as dslabs, you can use the install.packages() function in the R console:\ninstall.packages ( \"dslabs\" )\nAlternatively, you can use the Tools &gt; Install Packages option in RStudio. Once installed, a package can be loaded into your R session using the library() function:\nlibrary (dslabs)\nYou only need to install a package once unless you install a fresh version of R. You can install multiple packages at once by providing a character vector to install.packages():\ninstall.packages ( c ( \"tidyverse\" ,  \"dslabs\" ))\nInstalling some packages, like tidyverse, may also install other dependency packages. When you load a package with library(), its dependencies are also loaded. It is useful to keep a list of needed packages in a script for easy re-installation if required. You can see all installed packages using the installed.packages() function. Importantly, packages are installed in R, not RStudio.",
    "crumbs": [
      "Content",
      "Week 1 - Introduction"
    ]
  },
  {
    "objectID": "setup.html",
    "href": "setup.html",
    "title": "Installing R and RStudio",
    "section": "",
    "text": "Artwork by @allison_horst",
    "crumbs": [
      "Begin here"
    ]
  },
  {
    "objectID": "setup.html#video-tutorials",
    "href": "setup.html#video-tutorials",
    "title": "Installing R and RStudio",
    "section": "Video Tutorials",
    "text": "Video Tutorials",
    "crumbs": [
      "Begin here"
    ]
  },
  {
    "objectID": "pages/workbook.html",
    "href": "pages/workbook.html",
    "title": "Tutorial: Getting Started with a Quarto Webpage",
    "section": "",
    "text": "This tutorial provides an introduction to creating a basic webpage using Quarto within RStudio. Quarto, the next-generation version of R Markdown, allows you to author dynamic content and can render to various formats, including websites."
  },
  {
    "objectID": "pages/workbook.html#prerequisites",
    "href": "pages/workbook.html#prerequisites",
    "title": "Tutorial: Getting Started with a Quarto Webpage",
    "section": "Prerequisites",
    "text": "Prerequisites\nBefore you begin, ensure you have the following:\n\nR installed on your computer.\nRStudio installed on your computer.\nThe quarto package may need to be installed if you intend to render from the R console:\n\n\ninstall.packages(\"quarto\")"
  },
  {
    "objectID": "pages/workbook.html#creating-a-quarto-project-recommended-for-websites",
    "href": "pages/workbook.html#creating-a-quarto-project-recommended-for-websites",
    "title": "Tutorial: Getting Started with a Quarto Webpage",
    "section": "Creating a Quarto Project (Recommended for Websites)",
    "text": "Creating a Quarto Project (Recommended for Websites)\nWhile not explicitly detailed in these short excerpts, for creating a webpage (which often involves multiple pages and assets), it is generally recommended to start with a Quarto project. This helps organise your website files.\n\nIn RStudio, go to File &gt; New Project….\nChoose New Directory.\nSelect Quarto Project.\nChoose a name for your project and a location to save it.\nClick Create Project.\n\nThis will create a basic Quarto project structure."
  },
  {
    "objectID": "pages/workbook.html#creating-your-webpage-content",
    "href": "pages/workbook.html#creating-your-webpage-content",
    "title": "Tutorial: Getting Started with a Quarto Webpage",
    "section": "Creating Your Webpage Content",
    "text": "Creating Your Webpage Content\nWebpages in a Quarto website are typically created as .qmd files, similar to standard Quarto documents.\n\nWithin your Quarto project, go to File &gt; New File &gt; Quarto Document….\nChoose your desired default format (this might be less critical for individual content pages within a website structure, as the website configuration will largely dictate the final output). Click Create.\nThis will open a new .qmd file where you can write your webpage content using a combination of:\n\nYAML Header: Each page can have an optional YAML header (demarcated by --- at the start and end) to specify metadata like the title.\n---\ntitle: \"My Webpage\"\n---\nMarkdown Text: Use standard Markdown syntax to format your text, headings, lists, links, images, etc.. RStudio’s Visual editor can be helpful for this, offering a WYSIWYM experience [1]. You can switch between Visual and Source modes using the toolbar or the shortcut ⌘⇧ F4 (macOS) or Ctrl+Shift+F4 (Windows/Linux) [1].\nCode Chunks: You can embed and execute code (primarily R in this context, indicated by ```{r}) within your webpage to create dynamic content [2, 3]. You can run individual code chunks interactively in RStudio by clicking the Run icon or using the keyboard shortcut (⇧⌘⏎ on macOS or Ctrl+Shift+Enter on Windows/Linux)."
  },
  {
    "objectID": "pages/workbook.html#configuring-your-quarto-website",
    "href": "pages/workbook.html#configuring-your-quarto-website",
    "title": "Tutorial: Getting Started with a Quarto Webpage",
    "section": "Configuring Your Quarto Website",
    "text": "Configuring Your Quarto Website\nCreating a multi-page website with Quarto involves a configuration file, typically named _quarto.yml, in the root of your project. This file defines the navigation, theme, and other website-level settings.\nNote: The provided sources do not contain specific details on the structure and content of the _quarto.yml file. However, based on Quarto’s nature as a next-generation version of R Markdown [4], it leverages YAML for configuration. You would typically define your website’s navigation links to your different .qmd content pages within this file."
  },
  {
    "objectID": "pages/workbook.html#rendering-your-quarto-webpages",
    "href": "pages/workbook.html#rendering-your-quarto-webpages",
    "title": "Tutorial: Getting Started with a Quarto Webpage",
    "section": "Rendering Your Quarto Webpage(s)",
    "text": "Rendering Your Quarto Webpage(s)\nOnce you have your content pages (.qmd files) and your website configuration (_quarto.yml`), you can render your website.\n\nIn RStudio, with your Quarto project open, you can typically use the Build pane. Look for a Build Website option. Clicking this will process your project files according to your _quarto.yml configuration and generate your website.\nAlternatively, you might be able to render the entire website from the R console within your project directory using the quarto package, though the specific command for a website render isn’t detailed in the excerpts. It would likely be related to the quarto::quarto_render() function but applied at the project level."
  },
  {
    "objectID": "pages/workbook.html#previewing-your-webpage",
    "href": "pages/workbook.html#previewing-your-webpage",
    "title": "Tutorial: Getting Started with a Quarto Webpage",
    "section": "Previewing Your Webpage",
    "text": "Previewing Your Webpage\nAfter rendering, Quarto will generate the necessary HTML and other files for your website. You can usually preview your webpage by navigating to the output directory specified in your project (often _site) and opening the index.html file (or the HTML file corresponding to your content page)."
  },
  {
    "objectID": "pages/workbook.html#further-steps",
    "href": "pages/workbook.html#further-steps",
    "title": "Tutorial: Getting Started with a Quarto Webpage",
    "section": "Further Steps",
    "text": "Further Steps\nThis tutorial provides a basic introduction. Creating a full-fledged website with Quarto involves learning more about:\n\nThe _quarto.yml configuration file to control navigation, theme, and other website settings.\nOrganising your content into multiple .qmd pages.\nUsing themes to style your website.\nIncluding assets like images and CSS files.\n\nWhile the provided sources give a starting point by introducing Quarto as a tool capable of creating websites and its reliance on .qmd files and YAML [2, 5], you would need to consult further Quarto documentation for detailed instructions on website creation.\nBy following these initial steps, you can begin to explore the possibilities of creating webpages with Quarto in RStudio. Remember to consult the official Quarto documentation for comprehensive guidance on website features and configuration."
  }
]