---
title: "2-Data Wrangling"
subtitle: " "
author: "Felipe Melo"
institute: "Nottingham Trent University - UK"
from: markdown+emoji
format:
  revealjs:
    theme: [default, custom.scss]
    incremental: false
    chalkboard: true
    logo: img/ntu_logo.png
    #footer: "Research Methods & Data Analysis"
    slide-number: true
    transition: slide
    background-transition: fade
    #auto-stretch: true
    title-block-banner: true
    embed-resources: false

---

## You should know today

- Why data wrangling?
- How to plan data wrangling
- Basic skills
- Application with an example


## Before we begin

::::{.columns}
:::{.column width="50%"}

![](img/attention.png)

:::

:::{.column width="50%"}
- R and Rstudio installed
- Don't panic
- Everything is reproducible
- You'll have to train to fix the content


:::
::::

## [Tibbles](https://tibble.tidyverse.org/) <- click on the title

```{r}
#| echo: true
#| warning: false
#| code-line-numbers: "|,4,5"
#| output-location: default

library(tidyverse)
library(palmerpenguins)

data("penguins")
penguins %>% 
  select(1:5)

```
![](https://tibble.tidyverse.org/logo.svg){.absolute top=10 right=10 width="10%"}

## Your turn

```{r}
#| echo: false

library(countdown)
countdown(minutes = 2, seconds = 15)

```


1- Load tidyverse

2- load "palmerpenguins" dataset

3- call the data

  - type penguins


## The PIPE

::::{.columns}
:::{.column width="30%"}

![](https://magrittr.tidyverse.org/logo.png)

more about the package [magrittr](https://magrittr.tidyverse.org/reference/pipe.html)

:::

:::{.column width="70%" .fragment}

- "Take what is on the left and use it as the first argument on what comes next

```{r}
#| echo: true
penguins %>% # take the opbject penguins
  select(1:3) # then, select the columns 1 to 3
```

:::
::::

## Why data wrangling

- your data is NEVER ready to analyse
- you need to get to know your data
- do some inspections
- ask some questions

## {background-image="https://media.licdn.com/dms/image/v2/C5612AQFIS6Q8CBEWHQ/article-cover_image-shrink_720_1280/article-cover_image-shrink_720_1280/0/1520242783151?e=1732147200&v=beta&t=zkmPqo85HLNtJJuEHZG4nHmnVHQM_ezLxAchuKxc3wI"}

## {background-image="https://preview.redd.it/8ruxxxe7d9d31.jpg?auto=webp&s=8aea753b10e0c1346031283090c9d589ae953c14"}

## 
<div class="tenor-gif-embed" data-postid="7671930" data-share-method="host" data-aspect-ratio="1.35135" data-width="100%"><a href="https://tenor.com/view/lady-and-the-tramp-dog-eat-spaghetti-kiss-gif-7671930">Lady And The Tramp Dog GIF</a>from <a href="https://tenor.com/search/lady+and+the+tramp-gifs">Lady And The Tramp GIFs</a></div> <script type="text/javascript" async src="https://tenor.com/embed.js"></script>"

## Data exploration

```{r}
#| echo: true
penguins %>% # take the opbject penguins
  write.csv(., "penguins.csv") # then, save as .csv
```
:::{.fragment}
```{r}
#| echo: true
penguins %>% 
  summary()

```
:::

## Types of variable
```{r}
#| echo: true
#| output-location: default

penguins %>% 
  str()

```


## Types of variables

::::{.columns}
:::{.column .fragment}
**Categorical**

![](https://static-assets.codecademy.com/Courses/Hypothesis-Testing/Intro_to_variable_types_3.png)

:::

:::{.column .fragment}
**Numerical**

![](https://static-assets.codecademy.com/Courses/Hypothesis-Testing/Intro_to_variable_types_4.png)

:::
::::

## Summarising data

```{r}
#| echo: true
#| output-location: slide
#| 

library(vtable)
library(gt)

penguins %>% 
  vtable(., lush = TRUE)
```

## Summarising data

```{r}
#| echo: true
#| output-location: column
#| 

library(vtable)
library(gt)

penguins %>% 
  group_by(species) %>% 
  na.omit() %>% 
  summarise(mean = mean(bill_length_mm), sd=sd(bill_length_mm), n = n())
```

![](https://dplyr.tidyverse.org/logo.png){.absolute bottom=15 right=10 fig-size=6}

More codes [here](https://dplyr.tidyverse.org/reference/summarise.html)

## Your turn

- Try to reproduce
- Create any summary for "penguins"

```{r}
#| echo: false

library(countdown)
countdown(minutes = 2, seconds = 15)

```

## This goes on and on...

- Data exploration goes as far and deep as you need
- There is no minimum nor maximum
- The key point is


**This needs to make your data make sense to you**

## Subset data

```{r}
#| echo: true
#| output-location: column

penguins %>% 
  select(body_mass_g)

```

## Subset data

```{r}
#| echo: true
#| output-location: column

penguins %>% 
  filter(species=="Gentoo", 
         bill_length_mm > 50, 
         sex=="male") %>% 
  select(bill_length_mm, 
         bill_depth_mm) %>% 
  arrange(bill_depth_mm)


```

## Add new columns

```{r}
#| echo: true
#| output-location: default
#| code-line-numbers: "6"

penguins %>% 
  select(bill_length_mm, 
         bill_depth_mm) %>% 
  mutate(bill_volume=bill_length_mm+bill_depth_mm) %>% 
  mutate(log_bill_volume=log(bill_volume)) %>% 
  mutate(bill_categ=ifelse(bill_volume<60, "small", "big"))

```

## Reshape data [Tidyr](https://github.com/rstudio/cheatsheets/blob/main/tidyr.pdf)
Long format

```{r}
#| echo: true
#| output-location: default
#| code-line-numbers: "6"

penguins %>% 
  select(bill_length_mm, 
         bill_depth_mm,
         year) %>% 
  pivot_longer(col=c(bill_length_mm:bill_depth_mm), 
               names_to = "bill_feature", values_to = "value")
  

```

![](https://tidyr.tidyverse.org/logo.png){.absolute bottom=10 right=10}

## Reshape data [Tidyr](https://github.com/rstudio/cheatsheets/blob/main/tidyr.pdf)
Wide format

```{r}
#| echo: true
#| output-location: default
#| code-line-numbers: "6"

penguins %>% 
  mutate(row = row_number()) %>% # needed to add a rwoo number to identify each row as separate case
  select(row, species, island, body_mass_g) %>% 
  pivot_wider(names_from = island, values_from = body_mass_g)
  
```



## Your turn

- Try to reproduce
- Create any wide and long formats for "penguins"

```{r}
#| echo: false

library(countdown)
countdown(minutes = 3, seconds = 15)

```

## The correct data format

![](https://ohi-science.org/data-science-training/img/tidy_data.png)


## End of session on DA {.center}

