[
  {
    "objectID": "sessions/week3/3-data_expl.html",
    "href": "sessions/week3/3-data_expl.html",
    "title": "Week 3 - Data Visualisation & Scientific Hypotheses",
    "section": "",
    "text": "Artwork by @allison_horst"
  },
  {
    "objectID": "sessions/week3/3-data_expl.html#learning-objectives",
    "href": "sessions/week3/3-data_expl.html#learning-objectives",
    "title": "Week 3 - Data Visualisation & Scientific Hypotheses",
    "section": "Learning objectives",
    "text": "Learning objectives\n\n\n\n\n\n\n\nResearch Methods\nData Analyses\n\n\n\n\nDistinguish between scientific and statistical hypotheses\nProduce informative summaries of data\n\n\nElaborate sounding scientific hypotheses\nUnderstand moments of distribution\n\n\n\nBasics of data visualization"
  },
  {
    "objectID": "sessions/week3/3-data_expl.html#readings",
    "href": "sessions/week3/3-data_expl.html#readings",
    "title": "Week 3 - Data Visualisation & Scientific Hypotheses",
    "section": "Readings",
    "text": "Readings\nFor Data Analyses\n\n Check chapter 4 of the e-book Tidyverse Skills for Data Science\n Data visualization with ggplot2 :: Cheat Sheet\n Data summaries with dplyr\n\nFor Research Methods\n\n The hypotheses in science writing\n Formulating Hypotheses for Different Study Designs"
  },
  {
    "objectID": "sessions/week3/3-data_expl.html#part-1",
    "href": "sessions/week3/3-data_expl.html#part-1",
    "title": "Week 3 - Data Visualisation & Scientific Hypotheses",
    "section": "Part 1",
    "text": "Part 1"
  },
  {
    "objectID": "sessions/week3/3-data_expl.html#what-is-a-scientific-hypothesis",
    "href": "sessions/week3/3-data_expl.html#what-is-a-scientific-hypothesis",
    "title": "Week 3 - Data Visualisation & Scientific Hypotheses",
    "section": "What is a scientific hypothesis?",
    "text": "What is a scientific hypothesis?\n    View slides in full screen\n       \n      \n    \n  \nAccording to the Britannica, a scientific hypothesis is: “… an idea that proposes a tentative explanation about a phenomenon or a narrow set of phenomena observed in the natural world.”\n\nDeductive reasoning and inductive reasoning are two inseparable but distinct processes within scientific research. They reasonate with each other in a cyclical manner to advance scientific knowledge.\nHere’s how they connect:\nInductive reasoning often initiates the scientific process. It begins with empirical observations of the real world. By noticing patterns in these observations, scientists use inductive reasoning to construct broad generalisations or theories. For example, observing that apples, bananas, and oranges grow on trees might lead to the inductive generalisation that all fruit grows on trees.\nOnce a theory is formulated through inductive reasoning, it then serves as a basis for deductive reasoning. Deductive reasoning starts with a generalisation or hypothesis (derived from the theory) and uses it to reach logical conclusions about the real world. If the hypothesis is correct, then the logical conclusions reached through deductive reasoning should also be correct.\nFor instance, if the theory is that all living things require energy to survive, then deductive reasoning would lead to the conclusion that ducks, being living things, require energy to survive.\nScientists use deductive reasoning to empirically test the hypotheses that are generated from their inductively developed theories. They design studies and experiments to see if their logical conclusions hold true in the real world.\nThe results of these deductive tests then feed back into the scientific process. If the results are consistent with the theory (and thus the hypothesis), the theory is supported. However, if the results are not consistent, the theory may need to be modified and refined, leading to the generation of new hypotheses that will again be tested deductively. This creates a circular process where observations lead to theories (induction), theories lead to testable predictions (hypotheses), and those predictions are tested against further observations (deduction), which in turn can refine the theories. In essence, induction is often about building up from specific observations to broader ideas, while deduction is about breaking down broader ideas into specific, testable predictions. They work together, with inductive reasoning often paving the way for deductive testing, and the outcomes of deductive testing influencing the further development of theories arrived at through induction. Some research approaches, like case studies, lean more heavily on inductive processes, while experimental research often emphasises deductive reasoning.\n\n\n\n\n\n\nTip\n\n\n\nScientists use inductive reasoning to formulate theories, which then lead to hypotheses that are tested using deductive reasoning. In essence, science involves both inductive and deductive processes. Research approaches like case studies, which heavily rely on empirical observations and gathering large amounts of data to find interesting patterns and new ideas, are closely associated with inductive processes."
  },
  {
    "objectID": "sessions/week3/3-data_expl.html#research-vs-statistical-hypotheses",
    "href": "sessions/week3/3-data_expl.html#research-vs-statistical-hypotheses",
    "title": "Week 3 - Data Visualisation & Scientific Hypotheses",
    "section": "Research vs Statistical Hypotheses",
    "text": "Research vs Statistical Hypotheses\n\nA scientific hypothesis is a proposed explanation for an observation, phenomenon, or scientific problem. It must be based on observations and make a testable and reproducible prediction about reality. A scientific hypothesis is a provisional idea whose merit requires evaluation and requires further work to either confirm or disprove it. If repeatedly demonstrated to be true by experiment, a scientific hypothesis may become part of a scientific theory. In its essence, a scientific hypothesis aims to be true, adequate, accurate or useful in explaining some natural phenomenon. It guides the types of data we collect and the analyses we conduct.\nA statistical hypothesis, on the other hand, is specifically used when investigating a possible correlation or similar relation between phenomena. In such cases, the hypothesis that a relation exists is not examined in the same way as a proposed new law of nature. Instead, statistical tests are employed to determine how likely it is that the observed overall effect would occur if the hypothesised relation does not actually exist.\nSome key distinctions are:\n\nScope and Generality: A scientific hypothesis is often a broader proposed explanation, while a statistical hypothesis is a more specific statement about the relationship between variables that is subjected to statistical testing. For instance, a scientific hypothesis might be that “sunlight is necessary for seeds to grow”. A related statistical hypothesis could be that “seeds grown in bags wrapped in aluminium foil will produce shorter plants on average compared to seeds grown in bags not wrapped in foil”.\nMethod of Evaluation: Scientific hypotheses are evaluated through the broader scientific process, which involves observation, experimentation, and analysis. This can include various research approaches. Statistical hypotheses are specifically evaluated using statistical tests. These tests involve comparing a null hypothesis (typically stating no relation) with an alternative hypothesis (stating a relation exists) and determining the likelihood of the observed data under the null hypothesis. A decision is then made based on a pre-determined significance level.\nLevel of Abstraction: Scientific hypotheses often deal with underlying mechanisms or causes of phenomena. Statistical hypotheses are more directly concerned with patterns and relationships within data. The PMC source discusses the TASI model, where statistical assumptions are considered necessary to test an empirical hypothesis which is derived from a theoretical hypothesis using auxiliary assumptions. This highlights that statistical hypotheses are often a step in testing broader scientific ideas.\nForm of Statement: While scientific hypotheses can be verbal or formal (e.g., mathematical models), statistical hypotheses are often formulated in terms of population parameters and distributions, making them amenable to statistical analysis.\n\n\n\n\n\n\n\nNote\n\n\n\nIn summary, a scientific hypothesis proposes an explanation for a phenomenon and guides the research process, while a statistical hypothesis is a specific, testable statement about data relationships derived from a scientific hypothesis, which is evaluated using statistical methods. The statistical hypothesis provides a way to quantitatively assess some aspect of the broader scientific hypothesis."
  },
  {
    "objectID": "sessions/week3/3-data_expl.html#part-2",
    "href": "sessions/week3/3-data_expl.html#part-2",
    "title": "Week 3 - Data Visualisation & Scientific Hypotheses",
    "section": "Part 2",
    "text": "Part 2\n    View slides in full screen"
  },
  {
    "objectID": "sessions/week3/3-data_expl.html#data-summarisation-with-dplyr",
    "href": "sessions/week3/3-data_expl.html#data-summarisation-with-dplyr",
    "title": "Week 3 - Data Visualisation & Scientific Hypotheses",
    "section": "Data summarisation with dplyr",
    "text": "Data summarisation with dplyr\nData summarisation is a crucial step in understanding your data. It involves calculating descriptive statistics and creating summary tables to get an overview of the dataset, identify patterns, and spot potential issues. The dplyr package within the tidyverse provides a set of intuitive functions for efficient data manipulation, including powerful tools for summarisation. The tidyverse expands the vocabulary of R.\nTo begin, we first need to load the tidyverse package, which includes dplyr:\n\n# Load the tidyverse package [5, 6]\nlibrary(tidyverse)"
  },
  {
    "objectID": "sessions/week3/3-data_expl.html#summary-statistics-for-ungrouped-data",
    "href": "sessions/week3/3-data_expl.html#summary-statistics-for-ungrouped-data",
    "title": "Week 3 - Data Visualisation & Scientific Hypotheses",
    "section": "Summary Statistics for Ungrouped Data",
    "text": "Summary Statistics for Ungrouped Data\nThe summarise() function in dplyr is used to compute summary statistics for your data1 …. When applied to an ungrouped data frame, it calculates the specified summaries across all rows1 .\nLet’s use the built-in iris dataset as an example :\n\n# Convert the iris dataset to a tibble\nmy_data &lt;- as_tibble(iris)\nmy_data\n\n# A tibble: 150 × 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n          &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  \n 1          5.1         3.5          1.4         0.2 setosa \n 2          4.9         3            1.4         0.2 setosa \n 3          4.7         3.2          1.3         0.2 setosa \n 4          4.6         3.1          1.5         0.2 setosa \n 5          5           3.6          1.4         0.2 setosa \n 6          5.4         3.9          1.7         0.4 setosa \n 7          4.6         3.4          1.4         0.3 setosa \n 8          5           3.4          1.5         0.2 setosa \n 9          4.4         2.9          1.4         0.2 setosa \n10          4.9         3.1          1.5         0.1 setosa \n# ℹ 140 more rows\n\n\nWe can compute the mean of Sepal.Length and Petal.Length, as well as the total number of observations using summarise() and the n() function1:\n\n# Calculate summary statistics for the entire dataset\nmy_data %&gt;%\n  summarise(\n    count = n(), # Count the number of rows [7, 8]\n    mean_sep_length = mean(Sepal.Length, na.rm = TRUE), # Calculate the mean of Sepal.Length, removing NA values [6]\n    mean_pet_length = mean(Petal.Length, na.rm = TRUE)  # Calculate the mean of Petal.Length, removing NA values [6]\n  )\n\n# A tibble: 1 × 3\n  count mean_sep_length mean_pet_length\n  &lt;int&gt;           &lt;dbl&gt;           &lt;dbl&gt;\n1   150            5.84            3.76\n\n\nThe na.rm = TRUE argument is used to handle missing values by removing them before computing the mean5 . R is clear about trying to do calculations when there is an NA5 . If there is an NA, it cannot create a correct calculation, so it will return NA again5 . This is a nice way of quickly seeing that you have missing values in your data5 ## Summary Statistics for Grouped Data\nOften, we want to compute summary statistics for different groups within our data. This is This is achieved by using the group_by() function before summarise() group_by() takes one or more column names as arguments and groups the data based on the unique values in those columns. Subsequent summarise() operations will then be performed within each group.\nLet’s group the iris data by Species and calculate the same summary statistics as before:\n\n# Group the data by Species and then summarise [1, 9]\nmy_data %&gt;%\n  group_by(Species) %&gt;%\n  summarise(\n    count = n(), # Count the number of rows in each group [7, 8]\n    mean_sep_length = mean(Sepal.Length), # Calculate the mean of Sepal.Length for each species [1]\n    mean_pet_length = mean(Petal.Length)  # Calculate the mean of Petal.Length for each species [1]\n  )\n\n# A tibble: 3 × 4\n  Species    count mean_sep_length mean_pet_length\n  &lt;fct&gt;      &lt;int&gt;           &lt;dbl&gt;           &lt;dbl&gt;\n1 setosa        50            5.01            1.46\n2 versicolor    50            5.94            4.26\n3 virginica     50            6.59            5.55\n\n\nWe can also group by multiple variables: Let’s use the ToothGrowth dataset:\n\n# Display the head of the ToothGrowth dataset\nhead(ToothGrowth)\n\n   len supp dose\n1  4.2   VC  0.5\n2 11.5   VC  0.5\n3  7.3   VC  0.5\n4  5.8   VC  0.5\n5  6.4   VC  0.5\n6 10.0   VC  0.5\n\n\nNow, let’s group by supp and dose and calculate the number of observations, mean, and standard deviation of len:\n\n# Group by two variables and calculate summaries [1]\nToothGrowth %&gt;%\n  group_by(supp, dose) %&gt;%\n  summarise(\n    n = n(), # Count observations in each group [7]\n    mean_length = mean(len), # Calculate the mean of len [10]\n    sd_length = sd(len)      # Calculate the standard deviation of len [10]\n  )\n\n`summarise()` has grouped output by 'supp'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 6 × 5\n# Groups:   supp [2]\n  supp   dose     n mean_length sd_length\n  &lt;fct&gt; &lt;dbl&gt; &lt;int&gt;       &lt;dbl&gt;     &lt;dbl&gt;\n1 OJ      0.5    10       13.2       4.46\n2 OJ      1      10       22.7       3.91\n3 OJ      2      10       26.1       2.66\n4 VC      0.5    10        7.98      2.75\n5 VC      1      10       16.8       2.52\n6 VC      2      10       26.1       4.80"
  },
  {
    "objectID": "sessions/week3/3-data_expl.html#summarising-multiple-variables",
    "href": "sessions/week3/3-data_expl.html#summarising-multiple-variables",
    "title": "Week 3 - Data Visualisation & Scientific Hypotheses",
    "section": "Summarising Multiple Variables",
    "text": "Summarising Multiple Variables\ndplyr provides several functions to summarise multiple variables efficiently:\n• summarise_all(): Applies a summary function to every column in the data frame.\n• summarise_at(): Applies summary functions to specific columns selected using a character vector.\n• summarise_if(): Applies summary functions to columns selected with a predicate function that returns TRUE. For example, we can summarise only numeric columns:\nThe simplified formats for these functions are:\n• summarise_all(.tbl, .funs, ...)\n• summarise_if(.tbl, .predicate, .funs, ...)\n• summarise_at(.tbl, .vars, .funs, ...)\nWhere .funs can be a function name or a list of function calls, and … allows for additional arguments to the functions (e.g., na.rm = TRUE)."
  },
  {
    "objectID": "sessions/week3/3-data_expl.html#useful-statistical-summary-functions",
    "href": "sessions/week3/3-data_expl.html#useful-statistical-summary-functions",
    "title": "Week 3 - Data Visualisation & Scientific Hypotheses",
    "section": "Useful Statistical Summary Functions",
    "text": "Useful Statistical Summary Functions\ndplyr works well with various R functions that compute statistical summaries:\n• Measures of centrality: mean(),median();\n• Measures of variation: sd() (standard deviation), IQR() (interquartile range) , range()(range of the data);\n• Measures of rank: min() (minimum value), max() (maximum value), quantile();\n• Counts: n() (the number of elements), sum(!is.na(x)) (count non-missing values), n_distinct() (count the number of unique values).\n• Counts and proportions of logical values: sum(x &gt; 10) (count the number of elements where x &gt; 10), mean(y == 0) (proportion of elements where y = 0)."
  },
  {
    "objectID": "sessions/week3/3-data_expl.html#frequency-tables",
    "href": "sessions/week3/3-data_expl.html#frequency-tables",
    "title": "Week 3 - Data Visualisation & Scientific Hypotheses",
    "section": "Frequency Tables",
    "text": "Frequency Tables\nFor quickly obtaining frequency tables, dplyr provides the count() and tally() functions, which are synonymous.\nUsing the penguins dataset:\n\n# Load the penguins dataset [6]\nlibrary(palmerpenguins)\npenguins &lt;- as_tibble(palmerpenguins::penguins)\npenguins\n\n# A tibble: 344 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 334 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\n\nWe can get a frequency table of the species column:\n\n# Get a frequency table using tally\npenguins %&gt;%\n  group_by(species) %&gt;%\n  tally()\n\n# A tibble: 3 × 2\n  species       n\n  &lt;fct&gt;     &lt;int&gt;\n1 Adelie      152\n2 Chinstrap    68\n3 Gentoo      124\n\n\nOr equivalently:\n\n# Get a frequency table using count\npenguins %&gt;%\n  count(species)\n\n# A tibble: 3 × 2\n  species       n\n  &lt;fct&gt;     &lt;int&gt;\n1 Adelie      152\n2 Chinstrap    68\n3 Gentoo      124\n\n\nWe can also group by multiple columns to get more detailed frequency tables:\n\n# Get a frequency table with multiple grouping variables\npenguins %&gt;%\n  count(species, island)\n\n# A tibble: 5 × 3\n  species   island        n\n  &lt;fct&gt;     &lt;fct&gt;     &lt;int&gt;\n1 Adelie    Biscoe       44\n2 Adelie    Dream        56\n3 Adelie    Torgersen    52\n4 Chinstrap Dream        68\n5 Gentoo    Biscoe      124"
  },
  {
    "objectID": "sessions/week3/3-data_expl.html#adding-summary-statistics-as-new-columns",
    "href": "sessions/week3/3-data_expl.html#adding-summary-statistics-as-new-columns",
    "title": "Week 3 - Data Visualisation & Scientific Hypotheses",
    "section": "Adding Summary Statistics as New Columns",
    "text": "Adding Summary Statistics as New Columns\nWhile summarise() collapses the data frame to summary rows, mutate() can be used in conjunction with group_by() to add summary statistics as new columns to the original data frame.\nFor example, to add the mean bill_length_mm for each island16 :\n\n# Group by island and add the mean bill length as a new column [19]\npenguins %&gt;%\n  drop_na(bill_length_mm) %&gt;% # Remove rows with NA in bill_length_mm\n  group_by(island) %&gt;%\n  mutate(mean_bill_length_island = mean(bill_length_mm)) %&gt;%\n  head()\n\n# A tibble: 6 × 9\n# Groups:   island [1]\n  species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n1 Adelie  Torgersen           39.1          18.7               181        3750\n2 Adelie  Torgersen           39.5          17.4               186        3800\n3 Adelie  Torgersen           40.3          18                 195        3250\n4 Adelie  Torgersen           36.7          19.3               193        3450\n5 Adelie  Torgersen           39.3          20.6               190        3650\n6 Adelie  Torgersen           38.9          17.8               181        3625\n# ℹ 3 more variables: sex &lt;fct&gt;, year &lt;int&gt;, mean_bill_length_island &lt;dbl&gt;\n\n\nRemember to ungroup() the data frame if you want subsequent operations to be performed on the entire dataset rather than by groups."
  },
  {
    "objectID": "sessions/week3/3-data_expl.html#conclusion",
    "href": "sessions/week3/3-data_expl.html#conclusion",
    "title": "Week 3 - Data Visualisation & Scientific Hypotheses",
    "section": "Conclusion",
    "text": "Conclusion\nThe dplyr package in the tidyverse offers a powerful and flexible set of tools for data summarisation in R. By combining functions like group_by() and summarise() (along with its variants summarise_all(), summarise_at(), summarise_if()) with various statistical summary functions, you can efficiently generate insightful summaries of your data, both for entire datasets and for specific groups. Functions like count() and tally() provide convenient ways to create frequency tables. These capabilities make dplyr an essential package for data analysis and exploration in R."
  },
  {
    "objectID": "sessions/week3/3-data_expl.html#exploring-penguin-data-with-dplyr-summaries",
    "href": "sessions/week3/3-data_expl.html#exploring-penguin-data-with-dplyr-summaries",
    "title": "Week 3 - Data Visualisation & Scientific Hypotheses",
    "section": "Exploring Penguin Data with dplyr Summaries",
    "text": "Exploring Penguin Data with dplyr Summaries\nObjective: To practice using the dplyr package in R to calculate and explore summary statistics of the penguins dataset, both for the entire dataset and for specific groups.\nRequired Packages: dplyr and palmerpenguins.\n\n\n\n\n\n\nWarning\n\n\n\nRemember that you must use install.package() fucntion to intall R packages\n\n\nSteps:\n\nLoad the necessary packages and the penguins dataset:\nCalculate basic summary statistics for the entire dataset:\n\n\nFind the average bill length (in mm) for all penguins, handling missing values.\nCalculate the minimum and maximum flipper length (in mm) for all penguins.\nFind the number of observations in the entire dataset using n().\n\n\nCalculate summary statistics grouped by a single variable (e.g., species):\n\n\nFind the average body mass (in kg) for each penguin species. Remember to convert grams to kilograms by dividing by 1000.\nFor each species, calculate the average and standard deviation of bill depth (in mm).\n\n\nCalculate summary statistics grouped by multiple variables (e.g., species and island):\n\n\nDetermine the number of penguins of each species found on each island using count() or tally().\nCalculate the average flipper length for each combination of species and sex.\n\n\nUse summarise_at() and summarise_if() to summarise multiple columns:\n\n\nCalculate the mean of bill_length_mm and bill_depth_mm for each island using summarise_at().\nCalculate the mean of all numeric columns for each species using summarise_if().\n\n\nExplore frequency tables:\n\n\nCreate a frequency table showing the number of penguins for each species.\nCreate a frequency table showing the number of penguins for each combination of island and sex.\n\n\nAdd summary statistics as a new column using mutate():\n\n\nGroup the data by species and then add a new column showing the average bill length for that species to each row. Remember to ungroup() if needed for subsequent operations on the entire dataset.\n\n\nFurther Exploration (Challenges):\n• Calculate the range (maximum - minimum) of body mass for each species.\n• Find the median flipper length for each island.\n• Determine the proportion of male and female penguins within each species. (Hint: You might need to combine group_by(), count(), and mutate() to calculate proportions).\n• Group the data by island and then find the species with the longest average bill length on each island. (This might involve multiple steps).\nThis exercise will provide practical experience in using dplyr’s powerful functions for data summarisation with the penguins dataset. Remember to refer to the help documentation (e.g., ?summarise) if you need more information on specific functions."
  },
  {
    "objectID": "sessions/week2/2-datawragling.html",
    "href": "sessions/week2/2-datawragling.html",
    "title": "Week 2 - Data Wrangling & Research Questions",
    "section": "",
    "text": "Artwork by @allison_horst"
  },
  {
    "objectID": "sessions/week2/2-datawragling.html#learning-objectives",
    "href": "sessions/week2/2-datawragling.html#learning-objectives",
    "title": "Week 2 - Data Wrangling & Research Questions",
    "section": "Learning objectives",
    "text": "Learning objectives\n\n\n\n\n\n\n\nResearch Methods\nData Analyses\n\n\n\n\nReflect on how to make good research questions\nManipulate datasets as needed\n\n\n\nUse Tidyverse R package\n\n\n\nProduce simple tables and summaries"
  },
  {
    "objectID": "sessions/week2/2-datawragling.html#prerequisites",
    "href": "sessions/week2/2-datawragling.html#prerequisites",
    "title": "Week 2 - Data Wrangling & Research Questions",
    "section": "Prerequisites",
    "text": "Prerequisites\nBefore you begin, ensure you have the following installed:\n\nR: You can download the latest version from the official R website. Instructions for different operating systems (Windows, Mac OS, UNIX/Linux) are available [8]. R must be installed before installing RStudio [9].\nRStudio: Download and install RStudio Desktop from https://www.rstudio.com/ [10]. To open RStudio, locate it in your applications and launch it [11].\ntidyverse package: Install the tidyverse package within R. Open RStudio and in the Console pane, type and run the following command [12]:\n\n\ninstall.packages(\"tidyverse\")\n\nInstalando pacote em '/home/felipe/R/x86_64-pc-linux-gnu-library/4.4'\n(como 'lib' não foi especificado)\n\n\nThis command needs to be run only the first time you want to use the tidyverse. You can also install packages by navigating to Tools -&gt; Install Packages in RStudio."
  },
  {
    "objectID": "sessions/week2/2-datawragling.html#readings",
    "href": "sessions/week2/2-datawragling.html#readings",
    "title": "Week 2 - Data Wrangling & Research Questions",
    "section": "Readings",
    "text": "Readings\n\n Check chapters 1 to 3 of the e-book Tidyverse Skills for Data Science\n Data tidying with tidyr :: Cheatsheet\n Data transformation with dplyr :: Cheatsheet"
  },
  {
    "objectID": "sessions/week2/2-datawragling.html#part-1",
    "href": "sessions/week2/2-datawragling.html#part-1",
    "title": "Week 2 - Data Wrangling & Research Questions",
    "section": "Part 1",
    "text": "Part 1\n    View slides in full screen"
  },
  {
    "objectID": "sessions/week2/2-datawragling.html#learning-objectives-1",
    "href": "sessions/week2/2-datawragling.html#learning-objectives-1",
    "title": "Week 2 - Data Wrangling & Research Questions",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nDemonstrate how to subset, merge, and create new datasets from existing data structures in R.\nPerform basic data wrangling with functions in the Tidyverse package."
  },
  {
    "objectID": "sessions/week2/2-datawragling.html#data-wrangling-with-tidyverse",
    "href": "sessions/week2/2-datawragling.html#data-wrangling-with-tidyverse",
    "title": "Week 2 - Data Wrangling & Research Questions",
    "section": "Data Wrangling with Tidyverse",
    "text": "Data Wrangling with Tidyverse\nThe Tidyverse suite of integrated packages are designed to work together to make common data science operations more user friendly. The packages have functions for data wrangling, tidying, reading/writing, parsing, and visualizing, among others. There is a freely available book, R for Data Science, with detailed descriptions and practical examples of the tools available and how they work together. We will explore the basic syntax for working with these packages, as well as, specific functions for data wrangling with the ‘dplyr’ package and data visualization with the ‘ggplot2’ package."
  },
  {
    "objectID": "sessions/week2/2-datawragling.html#tidyverse-basics",
    "href": "sessions/week2/2-datawragling.html#tidyverse-basics",
    "title": "Week 2 - Data Wrangling & Research Questions",
    "section": "Tidyverse basics",
    "text": "Tidyverse basics\nThe Tidyverse suite of packages introduces users to a set of data structures, functions and operators to make working with data more intuitive, but is slightly different from the way we do things in base R. Two important new concepts we will focus on are pipes and tibbles.\nBefore we get started with pipes or tibbles, let’s load the library:\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nPipes\nStringing together commands in R can be quite daunting. Also, trying to understand code that has many nested functions can be confusing.\nTo make R code more human readable, the Tidyverse tools use the pipe, %&gt;%, which was acquired from the magrittr package and is now part of the dplyr package that is installed automatically with Tidyverse. The pipe allows the output of a previous command to be used as input to another command instead of using nested functions.\n\nNOTE: Shortcut to write the pipe is shift + command/ctrl + M\n\nAn example of using the pipe to run multiple commands:\n\n## A single command\nsqrt(83)\n\n[1] 9.110434\n\n## Base R method of running more than one command\nround(sqrt(83), digits = 2)\n\n[1] 9.11\n\n## Running more than one command with piping\nsqrt(83) %&gt;% round(digits = 2)\n\n[1] 9.11\n\n\nThe pipe represents a much easier way of writing and deciphering R code, and so we will be taking advantage of it, when possible, as we work through the remaining lesson.\n\nExercises\n\nCreate a vector of random numbers using the code below:\n\nrandom_numbers &lt;- c(81, 90, 65, 43, 71, 29)\n\nUse the pipe (%&gt;%) to perform two steps in a single line:\n\nTake the mean of random_numbers using the mean() function.\nRound the output to three digits using the round() function.\n\n\n\n\n\nTibbles\nA core component of the tidyverse is the tibble. Tibbles are a modern rework of the standard data.frame, with some internal improvements to make code more reliable. They are data frames, but do not follow all of the same rules. For example, tibbles can have numbers/symbols for column names, which is not normally allowed in base R.\nImportant: tidyverse is very opininated about row names. These packages insist that all column data (e.g. data.frame) be treated equally, and that special designation of a column as rownames should be deprecated. Tibble provides simple utility functions to handle rownames: rownames_to_column() and column_to_rownames().\nTibbles can be created directly using the tibble() function or data frames can be converted into tibbles using as_tibble(name_of_df).\n\nNOTE: The function as_tibble() will ignore row names, so if a column representing the row names is needed, then the function rownames_to_column(name_of_df) should be run prior to turning the data.frame into a tibble. Also, as_tibble() will not coerce character vectors to factors by default."
  },
  {
    "objectID": "sessions/week2/2-datawragling.html#part-2",
    "href": "sessions/week2/2-datawragling.html#part-2",
    "title": "Week 2 - Data Wrangling & Research Questions",
    "section": "Part 2",
    "text": "Part 2\n    View slides in full screen"
  },
  {
    "objectID": "sessions/week2/2-datawragling.html#introduction-the-logic-of-scientific-inquiry",
    "href": "sessions/week2/2-datawragling.html#introduction-the-logic-of-scientific-inquiry",
    "title": "Week 2 - Data Wrangling & Research Questions",
    "section": "Introduction: The Logic of Scientific Inquiry",
    "text": "Introduction: The Logic of Scientific Inquiry\nIn science, the pursuit of knowledge often begins with a question about the world around us [1-3]. A well-defined research question acts as the cornerstone of the scientific process, guiding investigation and shaping findings [4-6]. The logic underpinning scientific inquiry frequently involves hypothetico-deductive reasoning. This approach involves formulating a hypothesis (a testable explanation), and then deducing specific, observable predictions from that hypothesis. The research question, therefore, needs to be framed in a way that allows for the development of such testable hypotheses [7]. It should pinpoint exactly what you want to find out and give your work a clear purpose and focus [6]."
  },
  {
    "objectID": "sessions/week2/2-datawragling.html#what-makes-a-sounding-research-question",
    "href": "sessions/week2/2-datawragling.html#what-makes-a-sounding-research-question",
    "title": "Week 2 - Data Wrangling & Research Questions",
    "section": "What Makes a “Sounding” Research Question?",
    "text": "What Makes a “Sounding” Research Question?\nA “sounding” or strong research question is one that is carefully constructed to be effective and answerable through systematic investigation [4]. Key characteristics include:\n\nFocused: It should address a single problem or issue, ensuring that your research remains within a feasible scope [8-10].\nClear: The question should be unambiguous and easily understood by your target audience, specifying all necessary details and context [8, 10].\nSpecific: It clearly defines the variables, participants, and context involved, leaving no room for vagueness [8, 10, 11].\nResearchable: The question must be answerable by collecting empirical data or through existing literature [12, 13].\nFeasible: The research needed to answer the question should be achievable within the constraints of time, resources, and ethical considerations [2, 8, 13].\nInteresting: The topic should be engaging to you, and ideally to others in your field [2, 12].\nNovel: The question should aim to establish new facts or find a new aspect of already established facts, addressing gaps in current knowledge [2, 10, 12, 14].\nEthical: The research should not cause harm and should be approved by relevant bodies if necessary [2, 12].\nRelevant: The answer to the question should be wanted and desired in your field or contribute to society [2, 12, 15].\nComplex: The question should require analysis and interpretation, rather than a simple yes/no answer or easily found facts [7, 10, 11].\nArguable: The question should not be answerable with simple repetition of facts and should allow for different potential answers or perspectives [10].\nObjective: The question should avoid subjective judgments and focus on measurable or observable aspects [10].\nAppropriate: The question should align well with the data and methods that can be used to answer it [10]."
  },
  {
    "objectID": "sessions/week2/2-datawragling.html#steps-to-develop-your-research-question",
    "href": "sessions/week2/2-datawragling.html#steps-to-develop-your-research-question",
    "title": "Week 2 - Data Wrangling & Research Questions",
    "section": "Steps to Develop Your Research Question",
    "text": "Steps to Develop Your Research Question\nDeveloping a strong research question is often an iterative process [14, 16, 17]. Here’s a step-by-step guide based on the sources:\n\nChoose a broad topic of interest: Select a subject that you are passionate about and that is relevant to your field [6, 12, 18].\nConduct preliminary research: Gather background information through a literature review to understand what has already been researched and to identify potential gaps [12, 14, 18, 19]. Pay attention to what questions existing research raises and what authors haven’t addressed [1, 20].\nNarrow down your focus: Based on your initial research, refine your broad topic to a more specific area that is manageable for your research project [19, 21, 22].\nIdentify a research problem or gap: Determine what specific issue or unanswered question exists within your narrowed focus [12, 14, 21, 22]. Ask yourself what still needs to be known [21].\nFormulate initial research questions: Based on the identified problem or gap, start drafting open-ended “how” and “why” questions about your specific topic [1, 12, 14, 22].\nEvaluate and refine your question: Assess your drafted questions using the criteria for a strong research question outlined earlier [2, 7-14]. Is it focused, clear, specific, researchable, feasible, interesting, novel, ethical, relevant, complex, arguable, objective, and appropriate? Refine the wording to improve clarity and precision [14].\nConsider the type of research: Determine whether your question is best suited for exploratory, descriptive, comparative, experimental, qualitative, or quantitative research, as this will influence the phrasing and focus [9, 23-25]."
  },
  {
    "objectID": "sessions/week2/2-datawragling.html#examples",
    "href": "sessions/week2/2-datawragling.html#examples",
    "title": "Week 2 - Data Wrangling & Research Questions",
    "section": "Examples",
    "text": "Examples\nHere are a few examples of “sounding” research questions:\n\nInstead of: “Are social media bad?” Try: “What are the correlations between the frequency of social media use and self-reported levels of anxiety in young adults aged 18-25?” [25, 26].\nInstead of: “What about climate change?” Try: “How has the melting rate of glaciers in the Antarctic Peninsula changed over the past decade, and what are the potential impacts on local penguin populations?” [26, 27].\nInstead of: “Is online learning effective?” Try: “How does student engagement differ between undergraduate students enrolled in fully online courses compared to those in traditional face-to-face courses in higher education?” [24]."
  },
  {
    "objectID": "sessions/week2/2-datawragling.html#penguin-data-wrangling-with-tidyverse",
    "href": "sessions/week2/2-datawragling.html#penguin-data-wrangling-with-tidyverse",
    "title": "Week 2 - Data Wrangling & Research Questions",
    "section": "Penguin Data Wrangling with Tidyverse",
    "text": "Penguin Data Wrangling with Tidyverse\nObjective: To practice fundamental data wrangling techniques using the dplyr package within the tidyverse on the palmerpenguins dataset. This exercise will cover selecting, filtering, mutating, grouping, and summarizing data to gain insights into the penguin populations.\nPrerequisites:\n• Ensure you have the tidyverse package installed (install.packages(c(\"tidyverse\",\"palmerpenguins\"))).\n• Load the tidyverse library at the beginning of your R session (library(tidyverse)). This will automatically load dplyr and the palmerpenguins dataset.\nInstructions:\n\nInspect the Data: Begin by examining the penguins dataset. Use the glimpse() function from dplyr to get a concise overview of the dataset’s structure, including the column names and data types. You can also use head() to view the first few rows.\nSelect Relevant Columns: For this exercise, we will focus on the species and the physical measurements of the penguins. Use the select() function to create a new tibble named penguin_measurements containing only the species, island, bill_length_mm, bill_depth_mm, flipper_length_mm, and body_mass_g columns.\nHandle Missing Data: Notice that there might be missing values (represented as NA) in the body_mass_g column. Use the filter() function along with !is.na() to create a new tibble named penguin_no_na that excludes rows where body_mass_g is NA. The exclamation mark ! negates the condition, so we are keeping the rows where body_mass_g is not missing.\nCreate a New Variable: The body_mass_g is currently in grams. Use the mutate() function to add a new column named body_mass_kg that converts the body mass to kilograms (1 kg = 1000 g).\nGroup Data: To compare the physical characteristics of different penguin populations, use the group_by() function to group the penguin_with_kg tibble by both species and island. This will prepare the data for summary calculations within each group.\nSummarize Data: Now, use the summarise() function to calculate the mean bill length, mean bill depth, mean flipper length, and mean body mass (in kg) for each group created in the previous step. Name the new summary columns mean_bill_length_mm, mean_bill_depth_mm, mean_flipper_length_mm, and mean_body_mass_kg respectively.\nArrange the Results: Finally, use the arrange() function to sort the penguin_summary tibble first by island and then by mean_body_mass_kg in descending order (largest mean body mass first). You can use the desc() function within arrange() for descending order.\nView the Output: Print the final_summary tibble to see the results of your data wrangling steps.\n\n\nFurther Exploration (Optional):\n• Try filtering for a specific species or island before grouping and summarizing.\n• Use the count() function to see the number of observations in each group before calculating the mean.\n• Experiment with creating other new variables using mutate(), such as the ratio of bill length to bill depth.\nThis exercise provides a hands-on introduction to several key data wrangling verbs in dplyr, demonstrating how to transform and summarize data effectively within the tidyverse framework. The use of the pipe operator %&gt;% allows for a more readable and sequential flow of data manipulation."
  },
  {
    "objectID": "sessions/week2/2-datawragling.html#next-steps",
    "href": "sessions/week2/2-datawragling.html#next-steps",
    "title": "Week 2 - Data Wrangling & Research Questions",
    "section": "Next steps",
    "text": "Next steps\nNow that we have our results ready for plotting, we can use the ggplot2 package to plot our results. If you are interested, you can follow this lesson and dive into how to use ggplot2 to create the plots with this dataset.\n\nAdditional resources\n\nR for Data Science\nteach the tidyverse\ntidy style guide\n\nReferences used in this post\n\n4 Data Wrangling | Introduction to Data Exploration and Analysis with R.\nChapter 3 Wrangling Census data with tidyverse tools | Analyzing US Census Data\nChapter 3 Wrangling Data in the Tidyverse | Tidyverse Skills for Data Science\nData Wrangling with Tidyverse - R Introductory Series 2023\nData wrangling with R in 27 minutes uploaded by Equitable Equations\nDevelop_a_Research_Question.pdf - No direct link was found in the sources.\nHow To Write A Research Question/Hypothesis & Template | The Research Process Beginners Guide uploaded by Dr Amina Yonis\nHow to Craft a Strong Research Question (With Research Question Examples) | Researcher.Life\nHow to Develop a STRONG Research Question | Scribbr 🎓 uploaded by Scribbr\nHow to write good research questions: What even is a research question? – Data Impact blog @ 10 by Dr J. Kasmire\nTidyverse data wrangling | Introduction to R - ARCHIVED - The specific page for data wrangling is likely within this repository, but not directly linked in the excerpts.\n\nParts of this lesson has been developed by members of the teaching team at the Harvard Chan Bioinformatics Core (HBC). These are open access materials distributed under the terms of the Creative Commons Attribution license (CC BY 4.0), which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited."
  },
  {
    "objectID": "exercises/week1-exercise/your-name_exercise-10.html",
    "href": "exercises/week1-exercise/your-name_exercise-10.html",
    "title": "My Quarto WorkBook",
    "section": "",
    "text": "Task 1: Reflection\nPut your reflection here\n\n\nTask 2: Enhanced plot\nWhen you knit this document, you will create and save a basic bar chart of hot dog eating contest winners. You will then open the resulting file in a vector editing program.\nBe sure that you save your file with a different name. You don’t want to accidentally overwrite all your enhancements and updates when you knit this document. That would be so sad.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(svglite)\n\nhotdogs &lt;- read_csv(\"data/hot-dog-contest-winners.csv\") |&gt;\n  rename(dogs = `Dogs eaten`, record = `New record`) |&gt;\n  mutate(record = factor(record))\n\nRows: 31 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): Winner, Country\ndbl (3): Year, Dogs eaten, New record\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Change the colors here if you want\n# (or anything else if you want too)\nplot_hotdogs &lt;- ggplot(hotdogs, \n                       aes(x = Year, y = dogs, fill = record)) + \n  geom_col() + \n  scale_fill_manual(values = c(\"grey80\", \"#FC7300\")) +\n  scale_x_continuous(breaks = seq(1980, 2010, 2), \n                     expand = c(0, 0)) +\n  scale_y_continuous(breaks = seq(0, 70, 10), \n                     expand = c(0, 0)) +\n  guides(fill = \"none\") +\n  labs(y = \"Hot dogs and buns\", x = NULL) +\n  theme_minimal() +\n  theme(panel.background = element_rect(fill = \"transparent\", colour = NA),\n        plot.background = element_rect(fill = \"transparent\", colour = NA),\n        axis.ticks.x = element_line(linewidth = 0.25),\n        panel.grid.major.x = element_blank(),\n        panel.grid.major.y = element_line(linewidth = 0.5, linetype = \"dashed\"),\n        panel.grid.minor = element_blank())\n\n# Change the dimensions here if you want\nggsave(plot_hotdogs, filename = \"hotdogs.pdf\", device = cairo_pdf,\n       width = 7, height = 4, units = \"in\", bg = \"transparent\")\n\nggsave(plot_hotdogs, filename = \"hotdogs.svg\",\n       width = 7, height = 4, units = \"in\", bg = \"transparent\")"
  },
  {
    "objectID": "assessment.html",
    "href": "assessment.html",
    "title": "Assessment Brief 2025-26",
    "section": "",
    "text": "This Module covers the following courses:\n\nMSc/MRes Applied Ecology & Geospatial Techniques\nMSc/MRes Biodiversity Conservation\nMSc/MRes Endangered Species Recovery & Conservation\nMSc/MRes Equine Performance, Health & Welfare MSc/MRes Smart Agriculture"
  },
  {
    "objectID": "assessment.html#summative-assessment-brief",
    "href": "assessment.html#summative-assessment-brief",
    "title": "Assessment Brief 2025-26",
    "section": "",
    "text": "This Module covers the following courses:\n\nMSc/MRes Applied Ecology & Geospatial Techniques\nMSc/MRes Biodiversity Conservation\nMSc/MRes Endangered Species Recovery & Conservation\nMSc/MRes Equine Performance, Health & Welfare MSc/MRes Smart Agriculture"
  },
  {
    "objectID": "assessment.html#formative-assessments",
    "href": "assessment.html#formative-assessments",
    "title": "Assessment Brief 2025-26",
    "section": "Formative Assessments",
    "text": "Formative Assessments\nYour formative opportunities are related to the development of your workbook and sharing of this development with module leader and colleagues.\n\n\n\n\n\n\nShare your Workbook\n\n\n\nYou must not be shy or embarrassed to share your workbook. Nobody will judge you. We are all learning!"
  },
  {
    "objectID": "assessment.html#type-of-assessment",
    "href": "assessment.html#type-of-assessment",
    "title": "Assessment Brief 2025-26",
    "section": "Type of Assessment",
    "text": "Type of Assessment\nYour Summative is to produce an “article-like” dynamic document containing an analytical workflow for a given dataset where critically interpret the results and draw your conclusions.\n\nStep 1 - Context\nYou will be given a context of a scientific problem. This context will introduce you to a real-world problem that is going to be used as a background for the data that you are going to analyse.\n\n\nStep 2 - The dataset\nYou will have access to a pre-built dataset in a .csv format that will contain all the data and metadata needed for your analyses. The data is the same for everyone and I am not providing data on your specific subject of studies.\n\n\nStep 3 - Your Workbook\nYou are going to work on the assessment using your Quarto workbook constructed over the course of the whole module. This is going to be your submission. I’ll collect your exams using a NOW Dropbox where you can paste the link to your published workbook.\n\n\n\n\n\n\nNote\n\n\n\nThe dataset and context description for the Summative exam will be shared by the end of the module sessions (probably in the last week of classes)."
  },
  {
    "objectID": "assessment.html#transferable-skills-developed-in-this-assessment",
    "href": "assessment.html#transferable-skills-developed-in-this-assessment",
    "title": "Assessment Brief 2025-26",
    "section": "Transferable skills developed in this assessment",
    "text": "Transferable skills developed in this assessment\n\nAnalytical workflow\n\nCreate and attach to an analytical workflow that is reproducible\nGenerate good quality graphs and tables\nComment and understand R code\nIdentify core results within a set of exploratory analyses.\nInterpret and generate conclusions based on data analysed"
  },
  {
    "objectID": "assessment.html#specific-tasks",
    "href": "assessment.html#specific-tasks",
    "title": "Assessment Brief 2025-26",
    "section": "Specific tasks",
    "text": "Specific tasks\n\nDesign an experimental design\nDescribe methods for reproducibility\nCreate a analytical workflow\nComment on the R codes in your workbook"
  },
  {
    "objectID": "assessment.html#assessment-guidance",
    "href": "assessment.html#assessment-guidance",
    "title": "Assessment Brief 2025-26",
    "section": "Assessment Guidance",
    "text": "Assessment Guidance\n\nAnalytical workflow (15%)\nR code commented (15%)\nExploratory analysis (20%)\nQuality graphs and tables (25%)\nInterpretation of results (25%)"
  },
  {
    "objectID": "assessment.html#further-information",
    "href": "assessment.html#further-information",
    "title": "Assessment Brief 2025-26",
    "section": "Further information",
    "text": "Further information\n\nExtenuating circumstances"
  },
  {
    "objectID": "assessment.html#grading-matrix",
    "href": "assessment.html#grading-matrix",
    "title": "Assessment Brief 2025-26",
    "section": "Grading Matrix",
    "text": "Grading Matrix\n\n\n\n\n\n\n\n\n\n\n\n\nCriteria\nFail\nLow | Mid\nMarginal Fail\nPass\nLow | Mid | High\nCommendation\nLow | Mid | High\nDistinction\nLow | Mid |High\nDistinction\nExceptional\n\n\n\n\nAnalytical workflow\nNo clear analytical workflow\nWorkflow not easy to find; mixed analytical approach in search for any significant p-value\nWorkflow relatively reasonable but with excess of flaw analyses and lack of a logic sequence that goes from 1) preparation; 2) data wrangling; 3) Exploratory analyses; 4) Core analyses\nClear workflow but hard to reproduce because crucial steps were either omitted or non commented.\nVery good workflow with clear guidance for reproducibility\nHigh quality workflow, fully reproducible and extensively commented\n\n\nR code commented\nLittle to no comments on coding\nComments provided but non meaningful for crucial steps\nCodes mostly commented but crucial steps are not udnerstood\nCodes mostly commented and helping reproducibility.\nCodes fully commented but not excessively, avoiding visual pollution\nCodes fully commented and not affecting visual inspection of the script and allows full reproducibility and explanation in key steps\n\n\nExploratory analysis\nNo exploratory analyses done\nInsufficient exploratory analyses\nEnough exploratory analyses but not commented or justified\nGood exploratory analyses but poorly commented and little justified\nVery good exploratory analyses, commented and justified\nWorld-class and fully justified exploratory approach to data\n\n\nQuality graphs and tables\nPoor graphs, lacking crucial elements such as axis title and captions\nPoor graphs and tables with some elements present but poorly explained while other elements are missig\nGraphs and tables present with most elements, but some missing components preclude full understanding of the info presented\nGraphs and tables of acceptable quality with all elements present but not clearly descripted\nGood quality graphs and tables that could be accepted for publication in any serious scientific journal\nOutstading graphs and tables with graphical abstracts and schematic figures. All elements present and fully explained.\n\n\nInterpretation of results\nPoor or inexistant critical interpretation of the results found\nDeficient interpretation of the results and misuse of statistical concepts and wrong translation of tests and graphs\nResults are just reported with no critical interpretation or further discussion\nResults correctly reported and critically interpreted but excessive speculation is present\nResults are fully reported in a correct manner with string attachment to the proposed workflow and are discussed without much speculation\nExcellent interpretation, creative and fully connected with scientific hypotheses"
  },
  {
    "objectID": "resources/index.html",
    "href": "resources/index.html",
    "title": "Helpful resources",
    "section": "",
    "text": "I have included a bunch of extra resources and guides related to graphic design, visualization, R, data, and other relevant topics. Enjoy!\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nNice & Free R Courses\n\n\nFelipe Melo\n\n\n\n\nUsing Quarto\n\n\nAndrew Heiss\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "overview/overview.html",
    "href": "overview/overview.html",
    "title": "Module Overview",
    "section": "",
    "text": "Artwork by @allison_horst"
  },
  {
    "objectID": "overview/overview.html#module-aims",
    "href": "overview/overview.html#module-aims",
    "title": "Module Overview",
    "section": "Module Aims",
    "text": "Module Aims\nThis module aims to provide you with advanced skills in interpretation of quantitative and qualitative research data relevant to whole-organism biology, and to develop critical understanding of the ethical considerations involved in the collection of data. The module also aims to underpin the other modules in the Masters Framework by investigating experimental design, ethics, project management and funding.\nYou will be able to present findings of scientific research in a variety of appropriate ways, as well as critically evaluating, interpreting and relaying knowledge gained from secondary sources to peers."
  },
  {
    "objectID": "overview/overview.html#delivery-mode",
    "href": "overview/overview.html#delivery-mode",
    "title": "Module Overview",
    "section": "Delivery Mode",
    "text": "Delivery Mode\nThe RMDA module takes a blended approach to learning, as such many of the sessions provided, including drop-in sessions, will be via TEAMS. This will allow you to use R in real time, in class, inputting commands and analysing data as we go. The idea behind this is that you will be able to highlight and rectify any issues using R at the point of learning so that you can then continue confidently with tasks in your own time.\nIssues will arise especially if this is your first opportunity to use R, that’s ok, we have a great team to support you so don’t be afraid to speak up and get the help you need right away. We will discuss how to do this and general guidelines on how you can contribute to the online sessions during our module introduction session (Face to Face classroom session)"
  },
  {
    "objectID": "overview/overview.html#attendance-and-engagement",
    "href": "overview/overview.html#attendance-and-engagement",
    "title": "Module Overview",
    "section": "Attendance and engagement",
    "text": "Attendance and engagement\nPlease bear in mind that attendance and engagement with module content is vital for successful completion of the module. Please notify your year tutor immediately if you have any concerns regarding an inability to do this over an extended period. The demonstrator team and I will be monitoring engagement and I will contact you and your tutor to “check in” if I believe there are issues. If I do check in with you, remember I am doing this out of concern for your learning experience and not to chastise so please engage with these opportunities. The sooner we know there is a problem, the sooner we can help."
  },
  {
    "objectID": "overview/overview.html#knowledge-and-understanding",
    "href": "overview/overview.html#knowledge-and-understanding",
    "title": "Module Overview",
    "section": "Knowledge and Understanding",
    "text": "Knowledge and Understanding\nBy the end of this module, you should be able to:\n\nEvaluate ethical considerations of scientific research.\nEvaluate original research projects using an in-depth understanding of the scientific process.\nDemonstrate a level of expertise in highly specialised and advanced research and analytical tools, technical communication and professional skills."
  },
  {
    "objectID": "overview/overview.html#skills-qualities-and-attributes",
    "href": "overview/overview.html#skills-qualities-and-attributes",
    "title": "Module Overview",
    "section": "Skills, Qualities and Attributes",
    "text": "Skills, Qualities and Attributes\nBy the end of this module, you should be able to:\n\nSynthesise and critically analyse scientific data and current literature both generally and specifically and, where appropriate, propose new hypotheses.\nCommunicate current knowledge and latest research in a specific area of interest to a variety of audiences or specialist levels.\nDemonstrate independent or self-directed learning and initiative at a professional or equivalent level."
  },
  {
    "objectID": "overview/overview.html#requesting-support-with-inaccessible-files-or-features",
    "href": "overview/overview.html#requesting-support-with-inaccessible-files-or-features",
    "title": "Module Overview",
    "section": "Requesting support with inaccessible files or features",
    "text": "Requesting support with inaccessible files or features\nIf you locate any resource within this Learning Room that you cannot access for any reason, please contact Felipe Melo via email felipe.melo@ntu.ac.uk"
  },
  {
    "objectID": "get-started/1-install.html",
    "href": "get-started/1-install.html",
    "title": "Installing R and RStudio",
    "section": "",
    "text": "Artwork by @allison_horst"
  },
  {
    "objectID": "get-started/1-install.html#video-tutorials",
    "href": "get-started/1-install.html#video-tutorials",
    "title": "Installing R and RStudio",
    "section": "Video Tutorials",
    "text": "Video Tutorials"
  },
  {
    "objectID": "get-started/5-data.html",
    "href": "get-started/5-data.html",
    "title": "Reading in and inspecting data",
    "section": "",
    "text": "Demonstrate how to read existing data into R\nUtilize base R functions to inspect data structures"
  },
  {
    "objectID": "get-started/5-data.html#learning-objectives",
    "href": "get-started/5-data.html#learning-objectives",
    "title": "Reading in and inspecting data",
    "section": "",
    "text": "Demonstrate how to read existing data into R\nUtilize base R functions to inspect data structures"
  },
  {
    "objectID": "get-started/5-data.html#reading-data-into-r",
    "href": "get-started/5-data.html#reading-data-into-r",
    "title": "Reading in and inspecting data",
    "section": "Reading data into R",
    "text": "Reading data into R\n\nThe basics\nRegardless of the specific analysis in R we are performing, we usually need to bring data in for any analysis being done in R, so learning how to read in data is a crucial component of learning to use R.\nMany functions exist to read data in, and the function in R you use will depend on the file format being read in. Below we have a table with some examples of functions that can be used for importing some common text data types (plain text).\n\n\n\n\n\n\n\n\n\nData type\nExtension\nFunction\nPackage\n\n\n\n\nComma separated values\ncsv\nread.csv()\nutils (default)\n\n\n\n\nread_csv()\nreadr (tidyverse)\n\n\nTab separated values\ntsv\nread_tsv()\nreadr\n\n\nOther delimited formats\ntxt\nread.table()\nutils\n\n\n\n\nread_table()\nreadr\n\n\n\n\nread_delim()\nreadr\n\n\n\nFor example, if we have text file where the columns are separated by commas (comma-separated values or comma-delimited), you could use the function read.csv. However, if the data are separated by a different delimiter in a text file (e.g. “:”, “;”, ” “,”), you could use the generic read.table function and specify the delimiter (sep = \" \") as an argument in the function.\n\nNote: The \"\\t\" delimiter is shorthand for tab.\n\nIn the above table we refer to base R functions as being contained in the “utils” package. In addition to base R functions, we have also listed functions from some other packages that can be used to import data, specifically the “readr” package that installs when you install the “tidyverse” suite of packages.\nIn addition to plain text files, you can also import data from other statistical analysis packages and Excel using functions from different packages.\n\n\n\n\n\n\n\n\n\nData type\nExtension\nFunction\nPackage\n\n\n\n\nStata version 13-14\ndta\nreaddta()\nhaven\n\n\nStata version 7-12\ndta\nread.dta()\nforeign\n\n\nSPSS\nsav\nread.spss()\nforeign\n\n\nSAS\nsas7bdat\nread.sas7bdat()\nsas7bdat\n\n\nExcel\nxlsx, xls\nread_excel()\nreadxl (tidyverse)\n\n\n\nNote, that these lists are not comprehensive, and may other functions exist for importing data. Once you have been using R for a bit, maybe you will have a preference for which functions you prefer to use for which data type.\n\n\nMetadata\nWhen working with large datasets, you will very likely be working with “metadata” file which contains the information about each sample in your dataset.\n\nThe metadata is very important information and we encourage you to think about creating a document with as much metadata you can record before you bring the data into R. Here is some additional reading on metadata from the HMS Data Management Working Group.\n\n\nThe read.csv() function\nLet’s bring in the metadata file we downloaded earlier (mouse_exp_design.csv or mouse_exp_design.txt) using the read.csv function.\nFirst, check the arguments for the function using the ? to ensure that you are entering all the information appropriately:\n?read.csv\n\nThe first thing you will notice is that you’ve pulled up the documentation for read.table(), this is because that is the parent function and all the other functions are in the same family.\nThe next item on the documentation page is the function Description, which specifies that the output of this set of functions is going to be a data frame - “Reads a file in table format and creates a data frame from it, with cases corresponding to lines and variables to fields in the file.”\nIn usage, all of the arguments listed for read.table() are the default values for all of the family members unless otherwise specified for a given function. Let’s take a look at 2 examples: 1. The separator - * in the case of read.table() it is sep = \"\" (space or tab) * whereas for read.csv() it is sep = \",\" (a comma). 2. The header - This argument refers to the column headers that may (TRUE) or may not (FALSE) exist in the plain text file you are reading in. * in the case of read.table() it is header = FALSE (by default, it assumes you do not have column names) * whereas for read.csv() it is header = TRUE (by default, it assumes that all your columns have names listed).\nThe take-home from the “Usage” section for read.csv() is that it has one mandatory argument, the path to the file and filename in quotations; in our case that is data/mouse_exp_design.csv or data/mouse_exp_design.txt.\n\nThe stringsAsFactors argument\nNote that the read.table {utils} family of functions has an argument called stringsAsFactors, which by default is set to FALSE (you can double check this by searching the Help tab for read.table or running ?read.table in the console).\nIf stringsAsFactors = TRUE, any function in this family of functions will coerce character columns in the data you are reading in to factor columns (i.e., coerce from vector to factor) in the resulting data frame.\nIf you want to maintain the character vector data structure (e.g., for gene names), you will want to make sure that stringsAsFactors = FALSE.\n\n\n\n\nCreate a data frame by reading in the file\nAt this point, please check the extension for the mouse_exp_design file within your data folder. You will have to type it accordingly within the read.csv() function.\n\nread.csv is not fussy about extensions for plain text files, so even though the file we are reading in is a comma-separated value file, it will be read in properly even with a .txt extension.\n\nLet’s read in the mouse_exp_design file and create a new data frame called metadata.\nmetadata &lt;- read.csv(file=\"data/mouse_exp_design.csv\")\n\n# OR \n# metadata &lt;- read.csv(file=\"data/mouse_exp_design.txt\")\n\nNOTE: RStudio supports the automatic completion of code using the Tab key. This is especially helpful for when reading in files to ensure the correct file path. The tab completion feature also provides a shortcut to listing objects, and inline help for functions. Tab completion is your friend! We encourage you to use it whenever possible.\n\n\n\nClick here to see how to import data using the Import Dataset button\n\nYou can also use the Import Dataset button in your Environment pane to import data. This option is not as appealing because it can lack reproducibility if not documented properly, but it can be helpful when getting started. In order to use the Import Dataset:\n\n\nLeft-click the Import Dataset button in the Environment pane\n\n\nLeft-click From Text (base…)\n\n\nNavigate to the file you would like to import and select Open\n\n\nType the name you would like the imported object to be called in the Name textbox.\n\n\nSelect the delimiter that your file is using in the Separator dropdown menu\n\n\nLeft-click Import\n\n\nThese steps are summarized in the GIF below:  Now the dataset has been imported into your environment.\n\nNote: If you are going to use this method, it could impact the reproducibility of your work, because the steps to do that import are not recorded anywhere. If you are going to use this method of importing data, it is STRONGLY RECOMMENDED that you copy the command that read the dataset in and is present in the console to an Rscript file. In the future, you can run that line of code from the Rscript file to recreate the data object.\n\n\n\nGo to your Global environment and click on the name of the data frame you just created.\n\nWhen you do this the metadata table will pop up on the top left hand corner of RStudio, right next to the R script.\n\nYou should see a subtle coloring (blue-gray) of the first row and first column, the rest of the table will have a white background. This is because your first row and first columns have different properties than the rest of the table, they are the names of the rows and columns respectively.\n\nEarlier we noted that the file we just read in had column names (first row of values) and how read.csv() deals with “headers”. In addition to column headers, read.csv() also assumes that the first column contains the row names. Not all functions in the read.table() family of functions will do this and depending on which one you use, you may have to specify an additional argument to properly assign the row names and column names.\n\nRow names and column names are really handy when subsetting data structures and they are also helpful to identify samples or genes. We almost always use them with data frames.\n\n\nExercise 1\n\nDownload this tab-delimited .txt file and save it in your project’s data folder.\nRead it in to R using read.table() with the approriate arguments and store it as the variable proj_summary. To figure out the appropriate arguments to use with read.table(), keep the following in mind:\n\nall the columns in the input text file have column name/headers\nyou want the first column of the text file to be used as row names (hint: look up the input for the row.names = argument in read.table())\n\nDisplay the contents of proj_summary in your console"
  },
  {
    "objectID": "get-started/5-data.html#inspecting-data-structures",
    "href": "get-started/5-data.html#inspecting-data-structures",
    "title": "Reading in and inspecting data",
    "section": "Inspecting data structures",
    "text": "Inspecting data structures\nThere are a wide selection of base functions in R that are useful for inspecting your data and summarizing it. Let’s use the metadata file that we created to test out data inspection functions.\nTake a look at the dataframe by typing out the variable name metadata and pressing return; the variable contains information describing the samples in our study. Each row holds information for a single sample, and the columns contain categorical information about the sample genotype(WT or KO), celltype (typeA or typeB), and replicate number (1,2, or 3).\nmetadata\n\ngenotype celltype replicate\nsample1        Wt    typeA      1\nsample2        Wt    typeA      2\nsample3        Wt    typeA      3\nsample4        KO    typeA      1\nsample5        KO    typeA      2\nsample6        KO    typeA      3\nsample7        Wt    typeB      1\nsample8        Wt    typeB      2\nsample9        Wt    typeB      3\nsample10       KO    typeB      1\nsample11       KO    typeB      2\nsample12       KO    typeB      3\nSuppose we had a larger file, we might not want to display all the contents in the console. Instead we could check the top (the first 6 lines) of this data.frame using the function head():\nhead(metadata)\n\nList of functions for data inspection\nWe already saw how the functions head() and str() (in the releveling section) can be useful to check the content and the structure of a data.frame. Below is a non-exhaustive list of functions to get a sense of the content/structure of data. The list has been divided into functions that work on all types of objects, some that work only on vectors/factors (1 dimensional objects), and others that work on data frames and matrices (2 dimensional objects).\nWe have some exercises below that will allow you to gain more familiarity with these. You will definitely be using some of them in the next few homework sections.\n\nAll data structures - content display:\n\nstr(): compact display of data contents (similar to what you see in the Global environment)\n\nclass(): displays the data type for vectors (e.g. character, numeric, etc.) and data structure for dataframes, matrices, lists\nsummary(): detailed display of the contents of a given object, including descriptive statistics, frequencies\nhead(): prints the first 6 entries (elements for 1-D objects, rows for 2-D objects)\ntail(): prints the last 6 entries (elements for 1-D objects, rows for 2-D objects)\nVector and factor variables:\n\nlength(): returns the number of elements in a vector or factor\n\nDataframe and matrix variables:\n\ndim(): returns dimensions of the dataset (number_of_rows, number_of_columns) [Note, row numbers will always be displayed before column numbers in R]\n\nnrow(): returns the number of rows in the dataset\nncol(): returns the number of columns in the dataset\nrownames(): returns the row names in the dataset\n\ncolnames(): returns the column names in the dataset\n\n\nExercise 2\n\nUse the class() function on glengths and metadata, how does the output differ between the two?\nUse the summary() function on the proj_summary dataframe, what is the median “rRNA_rate”?\nHow long is the samplegroup factor?\nWhat are the dimensions of the proj_summary dataframe?\nWhen you use the rownames() function on metadata, what is the data structure of the output?\n[Optional] How many elements in (how long is) the output of colnames(proj_summary)? Don’t count, but use another function to determine this."
  },
  {
    "objectID": "get-started/5-data.html#section",
    "href": "get-started/5-data.html#section",
    "title": "Reading in and inspecting data",
    "section": "***",
    "text": "***\nThis lesson has been developed by members of the teaching team at the Harvard Chan Bioinformatics Core (HBC). These are open access materials distributed under the terms of the Creative Commons Attribution license (CC BY 4.0), which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.\n\nThe materials used in this lesson are adapted from work that is Copyright © Data Carpentry (http://datacarpentry.org/). All Data Carpentry instructional material is made available under the Creative Commons Attribution license (CC BY 4.0)."
  },
  {
    "objectID": "get-started/2-basic-intro.html",
    "href": "get-started/2-basic-intro.html",
    "title": "Basic Introduction to R and Rstudio",
    "section": "",
    "text": "Approximate time: 15 minutes"
  },
  {
    "objectID": "get-started/2-basic-intro.html#learning-objectives",
    "href": "get-started/2-basic-intro.html#learning-objectives",
    "title": "Basic Introduction to R and Rstudio",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nDescribe R and RStudio.\nInteract with R using RStudio.\nUse the various features of RStudio."
  },
  {
    "objectID": "get-started/2-basic-intro.html#what-is-r",
    "href": "get-started/2-basic-intro.html#what-is-r",
    "title": "Basic Introduction to R and Rstudio",
    "section": "What is R?",
    "text": "What is R?\nThe common misconception is that R is a programming language, but in fact it is much more than that. Think of R as an environment for statistical computing and graphics, which brings together a number of features to provide powerful functionality.\nThe R environment combines:\n\neffective handling of big data\ncollection of integrated tools\ngraphical facilities\nsimple and effective programming language"
  },
  {
    "objectID": "get-started/2-basic-intro.html#why-use-r",
    "href": "get-started/2-basic-intro.html#why-use-r",
    "title": "Basic Introduction to R and Rstudio",
    "section": "Why use R?",
    "text": "Why use R?\n\nR is a powerful, extensible environment. It has a wide range of statistics and general data analysis and visualization capabilities.\n\nData handling, wrangling, and storage\nWide array of statistical methods and graphical techniques available\nEasy to install on any platform and use (and it’s free!)\nOpen source with a large and growing community of peers"
  },
  {
    "objectID": "get-started/2-basic-intro.html#what-is-rstudio",
    "href": "get-started/2-basic-intro.html#what-is-rstudio",
    "title": "Basic Introduction to R and Rstudio",
    "section": "What is RStudio?",
    "text": "What is RStudio?\nRStudio is freely available open-source Integrated Development Environment (IDE). RStudio provides an environment with many features to make using R easier and is a great alternative to working on R in the terminal.\n\n\nGraphical user interface, not just a command prompt\nGreat learning tool\nFree for academic use\nPlatform agnostic\nOpen source"
  },
  {
    "objectID": "get-started/2-basic-intro.html#creating-a-new-project-directory-in-rstudio",
    "href": "get-started/2-basic-intro.html#creating-a-new-project-directory-in-rstudio",
    "title": "Basic Introduction to R and Rstudio",
    "section": "Creating a new project directory in RStudio",
    "text": "Creating a new project directory in RStudio\nLet’s create a new project directory for our “Introduction to R” lesson today.\n\nOpen RStudio\nGo to the File menu and select New Project.\nIn the New Project window, choose New Directory. Then, choose New Project. Name your new directory Intro-to-R and then “Create the project as subdirectory of:” the Desktop (or location of your choice).\nClick on Create Project.\n\n\n\n\n\nAfter your project is completed, if the project does not automatically open in RStudio, then go to the File menu, select Open Project, and choose Intro-to-R.Rproj.\nWhen RStudio opens, you will see three panels in the window.\nGo to the File menu and select New File, and select R Script.\nGo to the File menu and select Save As..., type Intro-to-R.R and select Save\n\n\n\n\nThe RStudio interface should now look like the screenshot below.\n\n\n\nRStudio interface"
  },
  {
    "objectID": "get-started/2-basic-intro.html#rstudio-interface",
    "href": "get-started/2-basic-intro.html#rstudio-interface",
    "title": "Basic Introduction to R and Rstudio",
    "section": "RStudio Interface",
    "text": "RStudio Interface\nThe RStudio interface has four main panels:\n\nConsole: where you can type commands and see output. The console is all you would see if you ran R in the command line without RStudio.\nScript editor: where you can type out commands and save to file. You can also submit the commands to run in the console.\nEnvironment/History: environment shows all active objects and history keeps track of all commands run in console\nFiles/Plots/Packages/Help"
  },
  {
    "objectID": "get-started/2-basic-intro.html#organizing-your-working-directory-setting-up",
    "href": "get-started/2-basic-intro.html#organizing-your-working-directory-setting-up",
    "title": "Basic Introduction to R and Rstudio",
    "section": "Organizing your working directory & setting up",
    "text": "Organizing your working directory & setting up\n\nViewing your working directory\nBefore we organize our working directory, let’s check to see where our current working directory is located by typing into the console:\ngetwd()\nYour working directory should be the Intro-to-R folder constructed when you created the project. The working directory is where RStudio will automatically look for any files you bring in and where it will automatically save any files you create, unless otherwise specified.\nYou can visualize your working directory by selecting the Files tab from the Files/Plots/Packages/Help window.\n\n\n\nIf you wanted to choose a different directory to be your working directory, you could navigate to a different folder in the Files tab, then, click on the More dropdown menu and select Set As Working Directory.\n\n\n\n\n\nStructuring your working directory\nTo organize your working directory for a particular analysis, you should separate the original data (raw data) from intermediate datasets. For instance, you may want to create a data/ directory within your working directory that stores the raw data, and have a results/ directory for intermediate datasets and a figures/ directory for the plots you will generate.\n\n\n\nLet’s create these three directories within your working directory by clicking on New Folder within the Files tab.\nWhen finished, your working directory should look like:\n\n\n\n\n\nAdding files to your working directory\nThere are a few files that we will be working with in the next few lessons and you can access them using the links provided below. If you right click on the link, and “Save link as..”. Choose ~/Desktop/Intro-to-R/data as the destination of the file. You should now see the file appear in your working directory. We will discuss these files a bit later in the lesson.\n\nDownload the normalized counts file by right clicking on this link\nDownload metadata file using this link\n\n\nNOTE: If the files download automatically to some other location on your laptop, you can move them to the your working directory using your file explorer or finder (outside RStudio), or navigating to the files in the Files tab of the bottom right panel of RStudio\n\n\n\nSetting up\nThis is more of a housekeeping task. We will be writing long lines of code in our script editor and want to make sure that the lines “wrap” and you don’t have to scroll back and forth to look at your long line of code.\nClick on “Code” at the top of your RStudio screen and select “Soft Wrap Long Lines” in the pull down menu."
  },
  {
    "objectID": "get-started/2-basic-intro.html#interacting-with-r",
    "href": "get-started/2-basic-intro.html#interacting-with-r",
    "title": "Basic Introduction to R and Rstudio",
    "section": "Interacting with R",
    "text": "Interacting with R\nNow that we have our interface and directory structure set up, let’s start playing with R! There are two main ways of interacting with R in RStudio: using the console or by using script editor (plain text files that contain your code).\n\nConsole window\nThe console window (in RStudio, the bottom left panel) is the place where R is waiting for you to tell it what to do, and where it will show the results of a command. You can type commands directly into the console, but they will be forgotten when you close the session.\nLet’s test it out:\n3 + 5\n\n\n\n\n\nScript editor\nBest practice is to enter the commands in the script editor, and save the script. You are encouraged to comment liberally to describe the commands you are running using #. This way, you have a complete record of what you did, you can easily show others how you did it and you can do it again later on if needed.\nThe Rstudio script editor allows you to ‘send’ the current line or the currently highlighted text to the R console by clicking on the Run button in the upper-right hand corner of the script editor. Alternatively, you can run by simply pressing the Ctrl and Enter keys at the same time as a shortcut.\nNow let’s try entering commands to the script editor and using the comments character # to add descriptions and highlighting the text to run:\n# Intro to R Lesson\n# Feb 16th, 2016\n\n# Interacting with R\n\n## I am adding 3 and 5. R is fun!\n3 + 5\n\n\n\nAlternatively, you can run by simply pressing the Ctrl and Return/Enter keys at the same time as a shortcut.\n\n\n\nYou should see the command run in the console and output the result.\n\n\n\nWhat happens if we do that same command without the comment symbol #? Re-run the command after removing the # sign in the front:\nI am adding 3 and 5. R is fun!\n3 + 5\nNow R is trying to run that sentence as a command, and it doesn’t work. We get an error in the console “Error: unexpected symbol in”I am” means that the R interpreter did not know what to do with that command.”\n\n\nConsole command prompt\nInterpreting the command prompt can help understand when R is ready to accept commands. Below lists the different states of the command prompt and how you can exit a command:\nConsole is ready to accept commands: &gt;.\nIf R is ready to accept commands, the R console shows a &gt; prompt.\nWhen the console receives a command (by directly typing into the console or running from the script editor (Ctrl-Enter), R will try to execute it.\nAfter running, the console will show the results and come back with a new &gt; prompt to wait for new commands.\nConsole is waiting for you to enter more data: +.\nIf R is still waiting for you to enter more data because it isn’t complete yet, the console will show a + prompt. It means that you haven’t finished entering a complete command. Often this can be due to you having not ‘closed’ a parenthesis or quotation.\nEscaping a command and getting a new prompt: esc\nIf you’re in Rstudio and you can’t figure out why your command isn’t running, you can click inside the console window and press esc to escape the command and bring back a new prompt &gt;."
  },
  {
    "objectID": "get-started/2-basic-intro.html#best-practices",
    "href": "get-started/2-basic-intro.html#best-practices",
    "title": "Basic Introduction to R and Rstudio",
    "section": "Best practices",
    "text": "Best practices\nBefore we move on to more complex concepts and getting familiar with the language, we want to point out a few things about best practices when working with R which will help you stay organized in the long run:\n\nCode and workflow are more reproducible if we can document everything that we do. Our end goal is not just to “do stuff”, but to do it in a way that anyone can easily and exactly replicate our workflow and results. All code should be written in the script editor and saved to file, rather than working in the console.\nThe R console should be mainly used to inspect objects, test a function or get help.\nUse # signs to comment. Comment liberally in your R scripts. This will help future you and other collaborators know what each line of code (or code block) was meant to do. Anything to the right of a # is ignored by R. A shortcut for this is Ctrl + Shift + C if you want to comment an entire chunk of text.\n\n\nThis lesson has been developed by members of the teaching team at the Harvard Chan Bioinformatics Core (HBC). These are open access materials distributed under the terms of the Creative Commons Attribution license (CC BY 4.0), which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.\n\nThe materials used in this lesson is adapted from work that is Copyright © Data Carpentry (http://datacarpentry.org/). All Data Carpentry instructional material is made available under the Creative Commons Attribution license (CC BY 4.0)."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "\n            Research Methods & Data Analyses\n        ",
    "section": "",
    "text": "Stats, Coding, Data Science and more\n        \n        \n            ARES40011 • Autumn 2025School of Animal Rural and Environmental SciencesNottingham Trent University"
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "\n            Research Methods & Data Analyses\n        ",
    "section": "Welcome",
    "text": "Welcome\nWe hope this module will be an opportunity to enhance your critical and analytical skills, required for your future careers. This module is the only core module across all PG provision at ARES, reflecting its underpinning importance for your courses. It also gives you a great opportunity to meet colleagues with different interests and to broaden your own horizons.\nWe have tried to make this module as accessible as possible, knowing that some of the content is challenging. We have based all materials in our own research expertise, we are not statisticians, rather we are statistic users, just like you!\nWe are looking forward to meeting you all"
  },
  {
    "objectID": "workbook/workbook.html",
    "href": "workbook/workbook.html",
    "title": "Tutorial: Getting Started with a Quarto Webpage",
    "section": "",
    "text": "This tutorial provides an introduction to creating a basic webpage using Quarto within RStudio. Quarto, the next-generation version of R Markdown, allows you to author dynamic content and can render to various formats, including websites."
  },
  {
    "objectID": "workbook/workbook.html#why-a-quarto-webpage",
    "href": "workbook/workbook.html#why-a-quarto-webpage",
    "title": "Tutorial: Getting Started with a Quarto Webpage",
    "section": "",
    "text": "This tutorial provides an introduction to creating a basic webpage using Quarto within RStudio. Quarto, the next-generation version of R Markdown, allows you to author dynamic content and can render to various formats, including websites."
  },
  {
    "objectID": "workbook/workbook.html#your-workbook",
    "href": "workbook/workbook.html#your-workbook",
    "title": "Tutorial: Getting Started with a Quarto Webpage",
    "section": "Your workbook",
    "text": "Your workbook\nWhile learning stats and coding, you’ll also learn how to build and publish simple websites using R and RStudio. This website is vital for you learning during this module. This is going to be your live coursebook.\nSee some examples how NTU students used this for the summative last year:\n\nExample 1\nExample 2\n\n\n\n\n\n\n\nInvest on your worbook\n\n\n\nYour workbook is going to be your “best friend” during this module. There you can experiment, create personal notes and gather bibliography. It works like a paper notebook, but it is a website."
  },
  {
    "objectID": "workbook/workbook.html#prerequisites",
    "href": "workbook/workbook.html#prerequisites",
    "title": "Tutorial: Getting Started with a Quarto Webpage",
    "section": "Prerequisites",
    "text": "Prerequisites\nBefore you begin, ensure you have the following:\n\nR installed on your computer.\nRStudio installed on your computer.\nThe quarto package may need to be installed if you intend to render from the R console:\n\n\ninstall.packages(\"quarto\")"
  },
  {
    "objectID": "workbook/workbook.html#creating-a-quarto-project-recommended-for-websites",
    "href": "workbook/workbook.html#creating-a-quarto-project-recommended-for-websites",
    "title": "Tutorial: Getting Started with a Quarto Webpage",
    "section": "Creating a Quarto Project (Recommended for Websites)",
    "text": "Creating a Quarto Project (Recommended for Websites)\nWhile not explicitly detailed in these short excerpts, for creating a webpage (which often involves multiple pages and assets), it is generally recommended to start with a Quarto project. This helps organise your website files.\n\nIn RStudio, go to File &gt; New Project….\nChoose New Directory.\nSelect Quarto Project.\nChoose a name for your project and a location to save it.\nClick Create Project.\n\nThis will create a basic Quarto project structure."
  },
  {
    "objectID": "workbook/workbook.html#creating-your-webpage-content",
    "href": "workbook/workbook.html#creating-your-webpage-content",
    "title": "Tutorial: Getting Started with a Quarto Webpage",
    "section": "Creating Your Webpage Content",
    "text": "Creating Your Webpage Content\nWebpages in a Quarto website are typically created as .qmd files, similar to standard Quarto documents.\n\nWithin your Quarto project, go to File &gt; New File &gt; Quarto Document….\nChoose your desired default format (this might be less critical for individual content pages within a website structure, as the website configuration will largely dictate the final output). Click Create.\nThis will open a new .qmd file where you can write your webpage content using a combination of:\n\nYAML Header: Each page can have an optional YAML header (demarcated by --- at the start and end) to specify metadata like the title.\n---\ntitle: \"My Webpage\"\n---\nMarkdown Text: Use standard Markdown syntax to format your text, headings, lists, links, images, etc.. RStudio’s Visual editor can be helpful for this, offering a WYSIWYM experience [1]. You can switch between Visual and Source modes using the toolbar or the shortcut ⌘⇧ F4 (macOS) or Ctrl+Shift+F4 (Windows/Linux) [1].\nCode Chunks: You can embed and execute code (primarily R in this context, indicated by ```{r}) within your webpage to create dynamic content [2, 3]. You can run individual code chunks interactively in RStudio by clicking the Run icon or using the keyboard shortcut (⇧⌘⏎ on macOS or Ctrl+Shift+Enter on Windows/Linux)."
  },
  {
    "objectID": "workbook/workbook.html#configuring-your-quarto-website",
    "href": "workbook/workbook.html#configuring-your-quarto-website",
    "title": "Tutorial: Getting Started with a Quarto Webpage",
    "section": "Configuring Your Quarto Website",
    "text": "Configuring Your Quarto Website\nCreating a multi-page website with Quarto involves a configuration file, typically named _quarto.yml, in the root of your project. This file defines the navigation, theme, and other website-level settings.\nNote: The provided sources do not contain specific details on the structure and content of the _quarto.yml file. However, based on Quarto’s nature as a next-generation version of R Markdown [4], it leverages YAML for configuration. You would typically define your website’s navigation links to your different .qmd content pages within this file."
  },
  {
    "objectID": "workbook/workbook.html#rendering-your-quarto-webpages",
    "href": "workbook/workbook.html#rendering-your-quarto-webpages",
    "title": "Tutorial: Getting Started with a Quarto Webpage",
    "section": "Rendering Your Quarto Webpage(s)",
    "text": "Rendering Your Quarto Webpage(s)\nOnce you have your content pages (.qmd files) and your website configuration (_quarto.yml`), you can render your website.\n\nIn RStudio, with your Quarto project open, you can typically use the Build pane. Look for a Render Website option. Clicking this will process your project files according to your _quarto.yml configuration and generate your website.\nAlternatively, you might be able to render the entire website from the R console within your project directory using the quarto package, though the specific command for a website render isn’t detailed in the excerpts. It would likely be related to the quarto::quarto_render() function but applied at the project level."
  },
  {
    "objectID": "workbook/workbook.html#previewing-your-webpage",
    "href": "workbook/workbook.html#previewing-your-webpage",
    "title": "Tutorial: Getting Started with a Quarto Webpage",
    "section": "Previewing Your Webpage",
    "text": "Previewing Your Webpage\nAfter rendering, Quarto will generate the necessary HTML and other files for your website. You can usually preview your webpage by looking a the Viewer tab in bottom-right panel of your Rstudio window."
  },
  {
    "objectID": "workbook/workbook.html#further-steps",
    "href": "workbook/workbook.html#further-steps",
    "title": "Tutorial: Getting Started with a Quarto Webpage",
    "section": "Further Steps",
    "text": "Further Steps\nThis tutorial provides a basic introduction. Creating a full-fledged website with Quarto involves learning more about:\n\nThe _quarto.yml configuration file to control navigation, theme, and other website settings.\nOrganising your content into multiple .qmd pages.\nUsing themes to style your website.\nIncluding assets like images and CSS files.\n\nThis is a starting point to introduce Quarto as a tool capable of creating websites and its reliance on .qmd files and YAML. You would need to consult further Quarto documentation for detailed instructions on website creation.\nBy following these initial steps, you can begin to explore the possibilities of creating webpages with Quarto in RStudio."
  },
  {
    "objectID": "workbook/workbook.html#publish-your-workbook",
    "href": "workbook/workbook.html#publish-your-workbook",
    "title": "Tutorial: Getting Started with a Quarto Webpage",
    "section": "Publish your workbook",
    "text": "Publish your workbook\nThere are many ways to publish your workbook and you might chose simple or more advanced ways.\n\nSimple Rpubs page"
  },
  {
    "objectID": "slides/09_linear_models.html#you-should-know-today",
    "href": "slides/09_linear_models.html#you-should-know-today",
    "title": "9-Linear Models",
    "section": "You should know today:",
    "text": "You should know today:\n\nKnow when to use linear models\nUnderstand outputs of LM\nHow to prepare for LM\nMultiple linear models"
  },
  {
    "objectID": "slides/09_linear_models.html#types-of-variables-review",
    "href": "slides/09_linear_models.html#types-of-variables-review",
    "title": "9-Linear Models",
    "section": "Types of variables (review)",
    "text": "Types of variables (review)\n\n\nCategorical\n\n\nNumerical"
  },
  {
    "objectID": "slides/09_linear_models.html#back-to-the-toolbox",
    "href": "slides/09_linear_models.html#back-to-the-toolbox",
    "title": "9-Linear Models",
    "section": "Back to the toolbox",
    "text": "Back to the toolbox"
  },
  {
    "objectID": "slides/09_linear_models.html#numerical-vs-numerical",
    "href": "slides/09_linear_models.html#numerical-vs-numerical",
    "title": "9-Linear Models",
    "section": "Numerical vs Numerical",
    "text": "Numerical vs Numerical"
  },
  {
    "objectID": "slides/09_linear_models.html#why-linear-models",
    "href": "slides/09_linear_models.html#why-linear-models",
    "title": "9-Linear Models",
    "section": "Why linear models?",
    "text": "Why linear models?\n\nWhen you do expect effects\nWhen you are able to explain effects\nYou want predictive values"
  },
  {
    "objectID": "slides/09_linear_models.html#is-it-logic-to-expect-and-effect",
    "href": "slides/09_linear_models.html#is-it-logic-to-expect-and-effect",
    "title": "9-Linear Models",
    "section": "Is it logic to expect and effect?",
    "text": "Is it logic to expect and effect?"
  },
  {
    "objectID": "slides/09_linear_models.html#is-it-logic-to-expect-and-effect-1",
    "href": "slides/09_linear_models.html#is-it-logic-to-expect-and-effect-1",
    "title": "9-Linear Models",
    "section": "Is it logic to expect and effect",
    "text": "Is it logic to expect and effect"
  },
  {
    "objectID": "slides/09_linear_models.html#the-logic-of-linear-models",
    "href": "slides/09_linear_models.html#the-logic-of-linear-models",
    "title": "9-Linear Models",
    "section": "The logic of linear models",
    "text": "The logic of linear models\n\\[\ny=a+bx\n\\]"
  },
  {
    "objectID": "slides/09_linear_models.html#components-of-lms",
    "href": "slides/09_linear_models.html#components-of-lms",
    "title": "9-Linear Models",
    "section": "Components of LMs",
    "text": "Components of LMs\nresponse = factor + error\nin R\nlm(response~factor)\n\nError is calculated by the function"
  },
  {
    "objectID": "slides/09_linear_models.html#response-component",
    "href": "slides/09_linear_models.html#response-component",
    "title": "9-Linear Models",
    "section": "Response component",
    "text": "Response component\n\\[\ny=a+bx + error\n\\]"
  },
  {
    "objectID": "slides/09_linear_models.html#screening-response",
    "href": "slides/09_linear_models.html#screening-response",
    "title": "9-Linear Models",
    "section": "Screening response",
    "text": "Screening response\n\n\n\nKnow the distribution of your data\n\nNormal\nPoisson\nBinomial\netc…"
  },
  {
    "objectID": "slides/09_linear_models.html#the-explanatory-linear-component",
    "href": "slides/09_linear_models.html#the-explanatory-linear-component",
    "title": "9-Linear Models",
    "section": "The explanatory (linear component)",
    "text": "The explanatory (linear component)\n\n\n\nCan be additive when independent\n\ny = a + b1x1 + b2x2…"
  },
  {
    "objectID": "slides/09_linear_models.html#the-explanatory-linear-component-1",
    "href": "slides/09_linear_models.html#the-explanatory-linear-component-1",
    "title": "9-Linear Models",
    "section": "The explanatory (linear component)",
    "text": "The explanatory (linear component)\n\n\n\nCan be multiplicative when interactions are present\n\ny = a + b1x1 * b2x2"
  },
  {
    "objectID": "slides/09_linear_models.html#linear-models-mean",
    "href": "slides/09_linear_models.html#linear-models-mean",
    "title": "9-Linear Models",
    "section": "Linear Models (mean)",
    "text": "Linear Models (mean)\n\n\n\nStatistish: y = Xβ + ε\nR syntax: lm(y~1)\n\n\n\n\n\nCall:\nlm(formula = qsec ~ 1, data = mtcars)\n\nCoefficients:\n(Intercept)  \n      17.85  \n\n\n[1] 17.84875"
  },
  {
    "objectID": "slides/09_linear_models.html#linear-models-effect",
    "href": "slides/09_linear_models.html#linear-models-effect",
    "title": "9-Linear Models",
    "section": "Linear Models (effect)",
    "text": "Linear Models (effect)\n\n\n\nStatistish: \\[ y_i = \\alpha + \\beta*x_i + \\epsilon_i \\]\nR syntax: lm(y~x)\n\n\n\n\n\nCall:\nlm(formula = qsec ~ hp, data = mtcars)\n\nCoefficients:\n(Intercept)           hp  \n   20.55635     -0.01846"
  },
  {
    "objectID": "slides/09_linear_models.html#linear-models-effect-1",
    "href": "slides/09_linear_models.html#linear-models-effect-1",
    "title": "9-Linear Models",
    "section": "Linear Models (effect)",
    "text": "Linear Models (effect)"
  },
  {
    "objectID": "slides/09_linear_models.html#linear-models-error",
    "href": "slides/09_linear_models.html#linear-models-error",
    "title": "9-Linear Models",
    "section": "Linear Models (error)",
    "text": "Linear Models (error)\n\nStatistish: \\[ y_i = \\alpha + \\beta*x_i + \\epsilon_i \\]\nR syntax: lm(y~x) remember: R calculates the error\n\n\n\nAnalysis of Variance Table\n\nResponse: qsec\n          Df Sum Sq Mean Sq F value    Pr(&gt;F)    \nhp         1 49.651  49.651   30.19 5.766e-06 ***\nResiduals 30 49.338   1.645                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "slides/09_linear_models.html#linear-models-residuals",
    "href": "slides/09_linear_models.html#linear-models-residuals",
    "title": "9-Linear Models",
    "section": "Linear Models (residuals)",
    "text": "Linear Models (residuals)"
  },
  {
    "objectID": "slides/09_linear_models.html#linear-models-residuals-1",
    "href": "slides/09_linear_models.html#linear-models-residuals-1",
    "title": "9-Linear Models",
    "section": "Linear Models (residuals)",
    "text": "Linear Models (residuals)\n\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  m1$residuals\nW = 0.94395, p-value = 0.09698"
  },
  {
    "objectID": "slides/09_linear_models.html#strength-vs.-fitness",
    "href": "slides/09_linear_models.html#strength-vs.-fitness",
    "title": "9-Linear Models",
    "section": "Strength vs. Fitness",
    "text": "Strength vs. Fitness\n\n\nSlope\n\n\n\n\n\n\n\n\n\n\nR²\n\n\n[1] 0.2938062\n\n\n[1] 0.6451507"
  },
  {
    "objectID": "slides/09_linear_models.html#ancova",
    "href": "slides/09_linear_models.html#ancova",
    "title": "9-Linear Models",
    "section": "ANCOVA",
    "text": "ANCOVA"
  },
  {
    "objectID": "slides/09_linear_models.html#ancova-example-1",
    "href": "slides/09_linear_models.html#ancova-example-1",
    "title": "9-Linear Models",
    "section": "ANCOVA example 1",
    "text": "ANCOVA example 1\n\nancov1&lt;-lm(bill_length_mm~body_mass_g+\n             species+\n             body_mass_g*species, \n           data=penguins)\nsummary(ancov1)\n\n\nCall:\nlm(formula = bill_length_mm ~ body_mass_g + species + body_mass_g * \n    species, data = penguins)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-6.4208 -1.6461  0.0919  1.4718  9.3138 \n\nCoefficients:\n                               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                  26.9941391  1.5926015  16.950  &lt; 2e-16 ***\nbody_mass_g                   0.0031879  0.0004271   7.464 7.27e-13 ***\nspeciesChinstrap              5.1800537  3.2746719   1.582    0.115    \nspeciesGentoo                -0.2545907  2.7138655  -0.094    0.925    \nbody_mass_g:speciesChinstrap  0.0012748  0.0008740   1.459    0.146    \nbody_mass_g:speciesGentoo     0.0009030  0.0006066   1.489    0.138    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.399 on 336 degrees of freedom\n  (2 observations deleted due to missingness)\nMultiple R-squared:  0.8098,    Adjusted R-squared:  0.807 \nF-statistic: 286.1 on 5 and 336 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "slides/09_linear_models.html#ancova-example-1-1",
    "href": "slides/09_linear_models.html#ancova-example-1-1",
    "title": "9-Linear Models",
    "section": "ANCOVA example 1",
    "text": "ANCOVA example 1\n\nanova(ancov1)\n\nAnalysis of Variance Table\n\nResponse: bill_length_mm\n                     Df Sum Sq Mean Sq  F value Pr(&gt;F)    \nbody_mass_g           1 3599.7  3599.7 625.5924 &lt;2e-16 ***\nspecies               2 4612.5  2306.3 400.8045 &lt;2e-16 ***\nbody_mass_g:species   2   18.6     9.3   1.6159 0.2003    \nResiduals           336 1933.4     5.8                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "slides/09_linear_models.html#ancova-example-1-2",
    "href": "slides/09_linear_models.html#ancova-example-1-2",
    "title": "9-Linear Models",
    "section": "ANCOVA example 1",
    "text": "ANCOVA example 1"
  },
  {
    "objectID": "slides/09_linear_models.html#lm-outputs-version-1",
    "href": "slides/09_linear_models.html#lm-outputs-version-1",
    "title": "9-Linear Models",
    "section": "LM outputs (version 1)",
    "text": "LM outputs (version 1)\n\nsummary(m1)\n\n\nCall:\nlm(formula = qsec ~ hp, data = mtcars)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.1766 -0.6975  0.0348  0.6520  4.0972 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 20.556354   0.542424  37.897  &lt; 2e-16 ***\nhp          -0.018458   0.003359  -5.495 5.77e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.282 on 30 degrees of freedom\nMultiple R-squared:  0.5016,    Adjusted R-squared:  0.485 \nF-statistic: 30.19 on 1 and 30 DF,  p-value: 5.766e-06"
  },
  {
    "objectID": "slides/09_linear_models.html#lm-outputs-version-1-1",
    "href": "slides/09_linear_models.html#lm-outputs-version-1-1",
    "title": "9-Linear Models",
    "section": "LM outputs (version 1)",
    "text": "LM outputs (version 1)\n\nsummary(ancov1)\n\n\nCall:\nlm(formula = bill_length_mm ~ body_mass_g + species + body_mass_g * \n    species, data = penguins)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-6.4208 -1.6461  0.0919  1.4718  9.3138 \n\nCoefficients:\n                               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                  26.9941391  1.5926015  16.950  &lt; 2e-16 ***\nbody_mass_g                   0.0031879  0.0004271   7.464 7.27e-13 ***\nspeciesChinstrap              5.1800537  3.2746719   1.582    0.115    \nspeciesGentoo                -0.2545907  2.7138655  -0.094    0.925    \nbody_mass_g:speciesChinstrap  0.0012748  0.0008740   1.459    0.146    \nbody_mass_g:speciesGentoo     0.0009030  0.0006066   1.489    0.138    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.399 on 336 degrees of freedom\n  (2 observations deleted due to missingness)\nMultiple R-squared:  0.8098,    Adjusted R-squared:  0.807 \nF-statistic: 286.1 on 5 and 336 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "slides/09_linear_models.html#lm-outputs-version-2",
    "href": "slides/09_linear_models.html#lm-outputs-version-2",
    "title": "9-Linear Models",
    "section": "LM outputs (version 2)",
    "text": "LM outputs (version 2)\n\nanova(m1)\n\nAnalysis of Variance Table\n\nResponse: qsec\n          Df Sum Sq Mean Sq F value    Pr(&gt;F)    \nhp         1 49.651  49.651   30.19 5.766e-06 ***\nResiduals 30 49.338   1.645                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "slides/09_linear_models.html#lm-outputs-version-2-1",
    "href": "slides/09_linear_models.html#lm-outputs-version-2-1",
    "title": "9-Linear Models",
    "section": "LM outputs (version 2)",
    "text": "LM outputs (version 2)\n\nanova(ancov1)\n\nAnalysis of Variance Table\n\nResponse: bill_length_mm\n                     Df Sum Sq Mean Sq  F value Pr(&gt;F)    \nbody_mass_g           1 3599.7  3599.7 625.5924 &lt;2e-16 ***\nspecies               2 4612.5  2306.3 400.8045 &lt;2e-16 ***\nbody_mass_g:species   2   18.6     9.3   1.6159 0.2003    \nResiduals           336 1933.4     5.8                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "slides/09_linear_models.html#predicting-values-wiht-lm",
    "href": "slides/09_linear_models.html#predicting-values-wiht-lm",
    "title": "9-Linear Models",
    "section": "Predicting values wiht LM",
    "text": "Predicting values wiht LM\n\nsummary(mtcars$hp)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   52.0    96.5   123.0   146.7   180.0   335.0 \n\nnew_hp&lt;-data.frame(hp=c(25,550,2500))\npredict(m1, new_hp)\n\n        1         2         3 \n 20.09490  10.40428 -25.58943"
  },
  {
    "objectID": "slides/09_linear_models.html#end-of-da-class",
    "href": "slides/09_linear_models.html#end-of-da-class",
    "title": "9-Linear Models",
    "section": "End of DA class",
    "text": "End of DA class\n\n\n\n\nResearch Methods & Data Analysis"
  },
  {
    "objectID": "slides/06_freq_tests.html#you-should-know-today",
    "href": "slides/06_freq_tests.html#you-should-know-today",
    "title": "6-Frequency Tests",
    "section": "You should know today:",
    "text": "You should know today:\n\nKnow when to use frequency tests\nWork with tables and graphs\nGoodness of fit tests\nIndependency tests\nHomogeneity tests"
  },
  {
    "objectID": "slides/06_freq_tests.html#types-of-variables-review",
    "href": "slides/06_freq_tests.html#types-of-variables-review",
    "title": "6-Frequency Tests",
    "section": "Types of variables (review)",
    "text": "Types of variables (review)\n\n\nCategorical\n\n\nNumerical"
  },
  {
    "objectID": "slides/06_freq_tests.html#back-to-the-toolbox",
    "href": "slides/06_freq_tests.html#back-to-the-toolbox",
    "title": "6-Frequency Tests",
    "section": "Back to the toolbox",
    "text": "Back to the toolbox"
  },
  {
    "objectID": "slides/06_freq_tests.html#lets-imagine-ladybirds",
    "href": "slides/06_freq_tests.html#lets-imagine-ladybirds",
    "title": "6-Frequency Tests",
    "section": "Let’s imagine Ladybirds",
    "text": "Let’s imagine Ladybirds\n\nLadybirdsCodeDataTable 1Table 2\n\n\n\n\n\n\n\n\n\n\nladybirds &lt;- tribble(\n  ~Habitat, ~Site, ~Colour, ~Number,\n  \"Rural\", \"R1\", \"Black\", 10,\n  \"Rural\", \"R2\", \"Black\", 3,\n  \"Rural\", \"R3\", \"Black\", 4,\n  \"Rural\", \"R4\", \"Black\", 7,\n  \"Rural\", \"R5\", \"Black\", 6,\n  \"Rural\", \"R1\", \"Red\", 15,\n  \"Rural\", \"R2\", \"Red\", 18,\n  \"Rural\", \"R3\", \"Red\", 9,\n  \"Rural\", \"R4\", \"Red\", 12,\n  \"Rural\", \"R5\", \"Red\", 16,\n  \"Industrial\", \"U1\", \"Black\", 32,\n  \"Industrial\", \"U2\", \"Black\", 25,\n  \"Industrial\", \"U3\", \"Black\", 25,\n  \"Industrial\", \"U4\", \"Black\", 17,\n  \"Industrial\", \"U5\", \"Black\", 16,\n  \"Industrial\", \"U1\", \"Red\", 17,\n  \"Industrial\", \"U2\", \"Red\", 23,\n  \"Industrial\", \"U3\", \"Red\", 21,\n  \"Industrial\", \"U4\", \"Red\", 9,\n  \"Industrial\", \"U5\",  \n \"Red\", 15\n)\n\n\n\n\n\n# A tibble: 20 × 4\n   Habitat    Site  Colour Number\n   &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;   &lt;dbl&gt;\n 1 Rural      R1    Black      10\n 2 Rural      R2    Black       3\n 3 Rural      R3    Black       4\n 4 Rural      R4    Black       7\n 5 Rural      R5    Black       6\n 6 Rural      R1    Red        15\n 7 Rural      R2    Red        18\n 8 Rural      R3    Red         9\n 9 Rural      R4    Red        12\n10 Rural      R5    Red        16\n11 Industrial U1    Black      32\n12 Industrial U2    Black      25\n13 Industrial U3    Black      25\n14 Industrial U4    Black      17\n15 Industrial U5    Black      16\n16 Industrial U1    Red        17\n17 Industrial U2    Red        23\n18 Industrial U3    Red        21\n19 Industrial U4    Red         9\n20 Industrial U5    Red        15\n\n\n\n\n\n\nladybirds%&gt;% \n  group_by(Habitat, Colour) %&gt;% \n  summarize(count = sum(Number)) |&gt; \n  kable()\n\n\n\n\n\nHabitat\nColour\ncount\n\n\n\n\nIndustrial\nBlack\n115\n\n\nIndustrial\nRed\n85\n\n\nRural\nBlack\n30\n\n\nRural\nRed\n70\n\n\n\n\n\n\n\n\n\nladybirds%&gt;% \n  group_by(Habitat, Colour) %&gt;% \n  summarize(count = sum(Number)) %&gt;% \n  spread(Colour, count, fill = 0) |&gt; \n  kable()\n\n\n\n\n\nHabitat\nBlack\nRed\n\n\n\n\nIndustrial\n115\n85\n\n\nRural\n30\n70"
  },
  {
    "objectID": "slides/06_freq_tests.html#how-habitat-type-influences-morphotype-occurrence-of-ladybirds",
    "href": "slides/06_freq_tests.html#how-habitat-type-influences-morphotype-occurrence-of-ladybirds",
    "title": "6-Frequency Tests",
    "section": "How habitat type influences morphotype occurrence of ladybirds?",
    "text": "How habitat type influences morphotype occurrence of ladybirds?"
  },
  {
    "objectID": "slides/06_freq_tests.html#is-there-an-association-between-habitat-and-lb-morphotype",
    "href": "slides/06_freq_tests.html#is-there-an-association-between-habitat-and-lb-morphotype",
    "title": "6-Frequency Tests",
    "section": "Is there an association between habitat and LB morphotype?",
    "text": "Is there an association between habitat and LB morphotype?"
  },
  {
    "objectID": "slides/06_freq_tests.html#tweaking-tables",
    "href": "slides/06_freq_tests.html#tweaking-tables",
    "title": "6-Frequency Tests",
    "section": "Tweaking tables",
    "text": "Tweaking tables\n\nCodeCode 2Code 3\n\n\n\n\nladybirds |&gt; \n  group_by(Habitat, Colour) |&gt; \n  summarize(count = sum(Number)) |&gt; \n  mutate(prop=count/sum(count)) |&gt;   # our new proportion variable\n  kable()\n\n\n\n\n\nHabitat\nColour\ncount\nprop\n\n\n\n\nIndustrial\nBlack\n115\n0.575\n\n\nIndustrial\nRed\n85\n0.425\n\n\nRural\nBlack\n30\n0.300\n\n\nRural\nRed\n70\n0.700\n\n\n\n\n\n\n\n\n\nladybirds |&gt; \n  group_by(Habitat, Colour) |&gt; \n  summarize(count = sum(Number)) |&gt; \n  mutate(prop=count/sum(count)) |&gt;   # our new proportion variable\n  dplyr::select(Habitat, Colour, prop) %&gt;% \n  spread(Habitat, prop) |&gt; \n  kable()\n\n\n\n\n\nColour\nIndustrial\nRural\n\n\n\n\nBlack\n0.575\n0.3\n\n\nRed\n0.425\n0.7\n\n\n\n\n\n\n\n\nlibrary(janitor)\nladybirds |&gt; \n  group_by(Habitat, Colour) %&gt;% \n  summarize(count = sum(Number)) %&gt;% \n  spread(Colour, count, fill = 0)|&gt; \n  adorn_totals(c(\"row\", \"col\")) |&gt; \n  kable()\n\n\n\n\nHabitat\nBlack\nRed\nTotal\n\n\n\n\nIndustrial\n115\n85\n200\n\n\nRural\n30\n70\n100\n\n\nTotal\n145\n155\n300"
  },
  {
    "objectID": "slides/06_freq_tests.html#proportions",
    "href": "slides/06_freq_tests.html#proportions",
    "title": "6-Frequency Tests",
    "section": "Proportions",
    "text": "Proportions\n\nTotalsRowsColumns\n\n\n\nladybirds |&gt; \n  group_by(Habitat, Colour) %&gt;% \n  summarize(count = sum(Number)) %&gt;% \n  spread(Colour, count, fill = 0) |&gt; \n  column_to_rownames(\"Habitat\") |&gt; \n  proportions() |&gt; \n  kable()\n\n\n\n\n\nBlack\nRed\n\n\n\n\nIndustrial\n0.3833333\n0.2833333\n\n\nRural\n0.1000000\n0.2333333\n\n\n\n\n\n\n\n\nladybirds |&gt; \n  group_by(Habitat, Colour) %&gt;% \n  summarise(count = sum(Number)) %&gt;% \n  spread(Colour, count, fill = 0) |&gt; \n  column_to_rownames(\"Habitat\") |&gt; \n  as.matrix()-&gt;t\n  proportions(t,1) |&gt; \n    kable()\n\n\n\n\n\nBlack\nRed\n\n\n\n\nIndustrial\n0.575\n0.425\n\n\nRural\n0.300\n0.700\n\n\n\n\n\n\n\n\nladybirds |&gt; \n  group_by(Habitat, Colour) %&gt;% \n  summarise(count = sum(Number)) %&gt;% \n  spread(Colour, count, fill = 0) |&gt; \n  column_to_rownames(\"Habitat\") |&gt; \n  as.matrix()-&gt;t\n  proportions(t,2) |&gt; \n    kable()\n\n\n\n\n\nBlack\nRed\n\n\n\n\nIndustrial\n0.7931034\n0.5483871\n\n\nRural\n0.2068966\n0.4516129"
  },
  {
    "objectID": "slides/06_freq_tests.html#all-important-at-once",
    "href": "slides/06_freq_tests.html#all-important-at-once",
    "title": "6-Frequency Tests",
    "section": "All important at once",
    "text": "All important at once\n\nCrossTable(t)\n\n\n \n   Cell Contents\n|-------------------------|\n|                       N |\n| Chi-square contribution |\n|           N / Row Total |\n|           N / Col Total |\n|         N / Table Total |\n|-------------------------|\n\n \nTotal Observations in Table:  300 \n\n \n             |  \n             |     Black |       Red | Row Total | \n-------------|-----------|-----------|-----------|\n  Industrial |       115 |        85 |       200 | \n             |     3.477 |     3.253 |           | \n             |     0.575 |     0.425 |     0.667 | \n             |     0.793 |     0.548 |           | \n             |     0.383 |     0.283 |           | \n-------------|-----------|-----------|-----------|\n       Rural |        30 |        70 |       100 | \n             |     6.954 |     6.505 |           | \n             |     0.300 |     0.700 |     0.333 | \n             |     0.207 |     0.452 |           | \n             |     0.100 |     0.233 |           | \n-------------|-----------|-----------|-----------|\nColumn Total |       145 |       155 |       300 | \n             |     0.483 |     0.517 |           | \n-------------|-----------|-----------|-----------|"
  },
  {
    "objectID": "slides/06_freq_tests.html#proportions-can-be-tricky",
    "href": "slides/06_freq_tests.html#proportions-can-be-tricky",
    "title": "6-Frequency Tests",
    "section": "Proportions can be tricky",
    "text": "Proportions can be tricky\n\n2/3 of LB are found in Industrial areas\nIt is rare fo find a black LB in rural areas\nRed LB don’t show any habitat preference\nBlack LB prefer Industrial areas\n\n\n\nHow many more info can we extract from this table?"
  },
  {
    "objectID": "slides/06_freq_tests.html#types-do-frequency-tests",
    "href": "slides/06_freq_tests.html#types-do-frequency-tests",
    "title": "6-Frequency Tests",
    "section": "Types do frequency tests",
    "text": "Types do frequency tests"
  },
  {
    "objectID": "slides/06_freq_tests.html#tests-for-independence",
    "href": "slides/06_freq_tests.html#tests-for-independence",
    "title": "6-Frequency Tests",
    "section": "Tests for independence",
    "text": "Tests for independence\n\nTableCode\n\n\n\n\n\nNaruto fan\nwatched Ghibli\nnever watched Ghibli\n\n\n\n\nno\n35\n205\n\n\nyes\n8\n48\n\n\n\n\n\n\nnaruto&lt;-matrix(c(35,205,8,48), nrow=2, byrow=TRUE)\nchisq.test(naruto)$expected\n\n          [,1]      [,2]\n[1,] 34.864865 205.13514\n[2,]  8.135135  47.86486\n\nproportions(naruto[1,])\n\n[1] 0.1458333 0.8541667\n\nproportions(naruto[2,])\n\n[1] 0.1428571 0.8571429\n\nchisq.test(naruto)\n\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  naruto\nX-squared = 5.9938e-30, df = 1, p-value = 1"
  },
  {
    "objectID": "slides/06_freq_tests.html#placebo-effect",
    "href": "slides/06_freq_tests.html#placebo-effect",
    "title": "6-Frequency Tests",
    "section": "Placebo effect",
    "text": "Placebo effect\n\nTableCode\n\n\n\n\n\nCure\ntreatment\nplacebo\nno treatment\n\n\n\n\nYes\n43\n31\n27\n\n\nNo\n12\n24\n28\n\n\n\n\n\nMost people is cured anyway\nTreatment improves positive resolution\n\n\n\n\n\nplacebo&lt;-matrix(c(43,31,27,12,24,28), nrow=2, byrow=TRUE)\nrownames(placebo)&lt;-c(\"cure-yes\", \"cure-no\")\ncolnames(placebo)&lt;-c(\"treatment\",\"placebo\",\"no treatment\")\nexp.placebo&lt;-chisq.test(placebo)$expected\nexp.placebo\n\n         treatment  placebo no treatment\ncure-yes  33.66667 33.66667     33.66667\ncure-no   21.33333 21.33333     21.33333\n\nchisq.test(placebo)\n\n\n    Pearson's Chi-squared test\n\ndata:  placebo\nX-squared = 10.619, df = 2, p-value = 0.004945"
  },
  {
    "objectID": "slides/06_freq_tests.html#chi-square-test",
    "href": "slides/06_freq_tests.html#chi-square-test",
    "title": "6-Frequency Tests",
    "section": "Chi-square test",
    "text": "Chi-square test\n\\[Chi-squared  = \\sum(Obs-Exp)²/Exp\\]\n\nchisq.test(placebo)\n\n\n    Pearson's Chi-squared test\n\ndata:  placebo\nX-squared = 10.619, df = 2, p-value = 0.004945\n\nsum((placebo-exp.placebo)^2/exp.placebo)\n\n[1] 10.61881"
  },
  {
    "objectID": "slides/06_freq_tests.html#testing-rows",
    "href": "slides/06_freq_tests.html#testing-rows",
    "title": "6-Frequency Tests",
    "section": "Testing rows",
    "text": "Testing rows\n\nBlack LBRed LB\n\n\n\nt[,1] # first line, Blacks\n\nIndustrial      Rural \n       115         30 \n\nchisq.test(t[,1])$expected\n\nIndustrial      Rural \n      72.5       72.5 \n\nchisq.test(t[,1])\n\n\n    Chi-squared test for given probabilities\n\ndata:  t[, 1]\nX-squared = 49.828, df = 1, p-value = 1.679e-12\n\n\n\n\n\nt[,2] # second line, Reds\n\nIndustrial      Rural \n        85         70 \n\nchisq.test(t[,2])$expected\n\nIndustrial      Rural \n      77.5       77.5 \n\nchisq.test(t[,2])\n\n\n    Chi-squared test for given probabilities\n\ndata:  t[, 2]\nX-squared = 1.4516, df = 1, p-value = 0.2283"
  },
  {
    "objectID": "slides/06_freq_tests.html#testing-columns",
    "href": "slides/06_freq_tests.html#testing-columns",
    "title": "6-Frequency Tests",
    "section": "Testing columns",
    "text": "Testing columns\n\nIndustrialRural\n\n\n\nt[1,]\n\nBlack   Red \n  115    85 \n\nchisq.test(t[1,])$expected\n\nBlack   Red \n  100   100 \n\nchisq.test(t[1,])\n\n\n    Chi-squared test for given probabilities\n\ndata:  t[1, ]\nX-squared = 4.5, df = 1, p-value = 0.03389\n\n\n\n\n\nt[2,]\n\nBlack   Red \n   30    70 \n\nchisq.test(t[2,])$expected\n\nBlack   Red \n   50    50 \n\nchisq.test(t[2,])\n\n\n    Chi-squared test for given probabilities\n\ndata:  t[2, ]\nX-squared = 16, df = 1, p-value = 6.334e-05"
  },
  {
    "objectID": "slides/06_freq_tests.html#test-for-homogeneity",
    "href": "slides/06_freq_tests.html#test-for-homogeneity",
    "title": "6-Frequency Tests",
    "section": "Test for homogeneity",
    "text": "Test for homogeneity\n\nDataGraphChi square test\n\n\n\n\npop&lt;-tribble(\n  ~age, ~country, ~pop,\n       \"0-10\",\"UK\", 50,\n       \"0-10\",\"BRA\", 120,\n       \"11-20\",\"UK\", 70,\n       \"11-20\",\"BRA\", 140,\n       \"21-30\",\"UK\", 110,\n       \"21-30\",\"BRA\", 150,\n       \"31-40\",\"UK\", 150,\n       \"31-40\",\"BRA\", 180,\n       \"40-50\",\"UK\", 180,\n       \"40-50\",\"BRA\", 180,\n       \"50-60\",\"UK\", 150,\n       \"50-60\",\"BRA\", 90,\n       \"60-70\",\"UK\", 130,\n       \"60-70\",\"BRA\", 50)\n\n\n\n\n\n\n\npop |&gt; \n  ggplot(aes(x=age, y= pop, color=country, fill=country))+\n  geom_col(position=\"dodge\")+\n  theme(axis.text=element_text(size = 18),\n        axis.title = element_text(size=18))\n\n\n\n\n\n\n\n\n\n\n\n\n\npop |&gt; \n  group_by(country, age) %&gt;% \n  #summarise(count = sum(Number)) %&gt;% \n  spread(country, pop, fill = 0) |&gt; \n  column_to_rownames(\"age\") |&gt; \n  as.matrix() -&gt; t2\n  chisq.test(t2)\n\n\n\n    Pearson's Chi-squared test\n\ndata:  t2\nX-squared = 108.97, df = 6, p-value &lt; 2.2e-16\n\n  chisq.test(t2)$observed-chisq.test(t2)$expected\n\n        BRA    UK\n0-10   31.6 -31.6\n11-20  30.8 -30.8\n21-30  14.8 -14.8\n31-40   8.4  -8.4\n40-50  -7.2   7.2\n50-60 -34.8  34.8\n60-70 -43.6  43.6"
  },
  {
    "objectID": "slides/06_freq_tests.html#goodness-of-fit",
    "href": "slides/06_freq_tests.html#goodness-of-fit",
    "title": "6-Frequency Tests",
    "section": "Goodness of fit",
    "text": "Goodness of fit\n\nDataGraphTest\n\n\n\n\npop %&gt;% \n  spread(country, pop, fill=0) %&gt;% \n  mutate(world=(BRA+UK)/2) %&gt;% \n  pivot_longer(cols = BRA:world, names_to = \"place\")-&gt;pop2\npop2  \n\n\n# A tibble: 21 × 3\n   age   place value\n   &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;\n 1 0-10  BRA     120\n 2 0-10  UK       50\n 3 0-10  world    85\n 4 11-20 BRA     140\n 5 11-20 UK       70\n 6 11-20 world   105\n 7 21-30 BRA     150\n 8 21-30 UK      110\n 9 21-30 world   130\n10 31-40 BRA     180\n# ℹ 11 more rows\n\n\n\n\n\n\npop2 %&gt;%\n  ggplot(aes(x=age,y=value, colour=place, fill=place))+\n  geom_col(position = \"dodge\")\n\n\n\n\n\n\n\n\n\n\n\n\n\npop2 %&gt;% \n  spread(place, value, fill = 0) %&gt;% \n  column_to_rownames(\"age\")-&gt; pop3\n  chisq.test(pop3$BR, pop3$world)\n\n\n\n    Pearson's Chi-squared test\n\ndata:  pop3$BR and pop3$world\nX-squared = 35, df = 30, p-value = 0.2426"
  },
  {
    "objectID": "slides/06_freq_tests.html#loglinear-models",
    "href": "slides/06_freq_tests.html#loglinear-models",
    "title": "6-Frequency Tests",
    "section": "Loglinear models",
    "text": "Loglinear models\n\nBased on contingency tables with multiple levels\nCan model data\nBased on odds ratio\n\n\n\nBEAUTIFUL"
  },
  {
    "objectID": "slides/06_freq_tests.html#multiple-contingency-tables",
    "href": "slides/06_freq_tests.html#multiple-contingency-tables",
    "title": "6-Frequency Tests",
    "section": "Multiple contingency tables",
    "text": "Multiple contingency tables\n\nlibrary(MASS)\npop |&gt; \n  rename(male=pop) |&gt; \n  mutate(female=ifelse(country==\"UK\", male^1.01, male^1.03)) |&gt; \n  pivot_longer(cols = male:female, names_to = \"sex\")-&gt;dat.mod\n\nmodel1&lt;-glm(value~age*country*sex, data=dat.mod, family=\"poisson\")\n\nsummary(model1)\n\n\nCall:\nglm(formula = value ~ age * country * sex, family = \"poisson\", \n    data = dat.mod)\n\nCoefficients:\n                             Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                 4.9311165  0.0849614  58.039  &lt; 2e-16 ***\nage11-20                    0.1587752  0.1156595   1.373 0.169820    \nage21-30                    0.2298379  0.1138185   2.019 0.043452 *  \nage31-40                    0.4176291  0.1094192   3.817 0.000135 ***\nage40-50                    0.4176291  0.1094192   3.817 0.000135 ***\nage50-60                   -0.2963125  0.1301017  -2.278 0.022754 *  \nage60-70                   -0.9017328  0.1581257  -5.703 1.18e-08 ***\ncountryUK                  -0.9799733  0.1626381  -6.025 1.69e-09 ***\nsexmale                    -0.1436248  0.1247067  -1.152 0.249444    \nage11-20:countryUK          0.1810618  0.2151774   0.841 0.400094    \nage21-30:countryUK          0.5665041  0.2021407   2.803 0.005070 ** \nage31-40:countryUK          0.6919694  0.1937682   3.571 0.000355 ***\nage40-50:countryUK          0.8761141  0.1909965   4.587 4.50e-06 ***\nage50-60:countryUK          1.4059109  0.2061553   6.820 9.13e-12 ***\nage60-70:countryUK          1.8667994  0.2270755   8.221  &lt; 2e-16 ***\nage11-20:sexmale           -0.0046245  0.1698626  -0.027 0.978280    \nage21-30:sexmale           -0.0066943  0.1671965  -0.040 0.968062    \nage31-40:sexmale           -0.0121640  0.1608149  -0.076 0.939706    \nage40-50:sexmale           -0.0121640  0.1608149  -0.076 0.939706    \nage50-60:sexmale            0.0086305  0.1907115   0.045 0.963905    \nage60-70:sexmale            0.0262641  0.2309482   0.114 0.909458    \ncountryUK:sexmale           0.1045045  0.2340608   0.446 0.655247    \nage11-20:countryUK:sexmale  0.0012598  0.3099407   0.004 0.996757    \nage21-30:countryUK:sexmale -0.0011903  0.2914648  -0.004 0.996742    \nage31-40:countryUK:sexmale  0.0011778  0.2794667   0.004 0.996637    \nage40-50:countryUK:sexmale -0.0006454  0.2755433  -0.002 0.998131    \nage50-60:countryUK:sexmale -0.0196166  0.2976762  -0.066 0.947458    \nage60-70:countryUK:sexmale -0.0358192  0.3280075  -0.109 0.913042    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance:  5.3238e+02  on 27  degrees of freedom\nResidual deviance: -1.0851e-14  on  0  degrees of freedom\nAIC: Inf\n\nNumber of Fisher Scoring iterations: 3"
  },
  {
    "objectID": "slides/06_freq_tests.html#frequency-tests",
    "href": "slides/06_freq_tests.html#frequency-tests",
    "title": "6-Frequency Tests",
    "section": "Frequency tests",
    "text": "Frequency tests\n\nChi-square test\nZ-test\nG test\nBinomial tests\nLoglinear models*"
  },
  {
    "objectID": "slides/06_freq_tests.html#key-points",
    "href": "slides/06_freq_tests.html#key-points",
    "title": "6-Frequency Tests",
    "section": "Key points",
    "text": "Key points\n\nCan you identify when you need a frequency test?\nAre you able to extract the info from the tables and graphics?\nCan you interpret correctly the results?"
  },
  {
    "objectID": "slides/06_freq_tests.html#end-of-da-class",
    "href": "slides/06_freq_tests.html#end-of-da-class",
    "title": "6-Frequency Tests",
    "section": "End of DA class",
    "text": "End of DA class\n\n\n\n\nResearch Methods & Data Analysis"
  },
  {
    "objectID": "slides/6.1_titles.html#r-packages-for-this-class",
    "href": "slides/6.1_titles.html#r-packages-for-this-class",
    "title": "6.1 - How to make good titles?",
    "section": "R packages for this class",
    "text": "R packages for this class\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n#install.packages(\"gmodels\")\nlibrary(gmodels)\nlibrary(kableExtra)\nlibrary(gtable)"
  },
  {
    "objectID": "slides/6.1_titles.html#you-should-know-today",
    "href": "slides/6.1_titles.html#you-should-know-today",
    "title": "6.1 - How to make good titles?",
    "section": "You should know today:",
    "text": "You should know today:\n\nUnderstand the logic behind a title of a research piece\nEvaluate quality of titles\nCreate good titles"
  },
  {
    "objectID": "slides/6.1_titles.html#what-is-a-title",
    "href": "slides/6.1_titles.html#what-is-a-title",
    "title": "6.1 - How to make good titles?",
    "section": "What is a title?",
    "text": "What is a title?\n\n\n\n\n\nGeographical scope\nMethods\nTaxonomic group\nEffect"
  },
  {
    "objectID": "slides/6.1_titles.html#what-is-not-a-title",
    "href": "slides/6.1_titles.html#what-is-not-a-title",
    "title": "6.1 - How to make good titles?",
    "section": "What is not a title?",
    "text": "What is not a title?"
  },
  {
    "objectID": "slides/6.1_titles.html#basic-features-of-titles",
    "href": "slides/6.1_titles.html#basic-features-of-titles",
    "title": "6.1 - How to make good titles?",
    "section": "Basic features of titles",
    "text": "Basic features of titles\n\n\nGood title - Short - Informative - Jargon-less - Wide - Keywords\n\nBad Title - Long - Over informative - Too specialized - Narrow - Non-keywords"
  },
  {
    "objectID": "slides/6.1_titles.html#descriptive-titles",
    "href": "slides/6.1_titles.html#descriptive-titles",
    "title": "6.1 - How to make good titles?",
    "section": "Descriptive titles",
    "text": "Descriptive titles"
  },
  {
    "objectID": "slides/6.1_titles.html#methodological-titles",
    "href": "slides/6.1_titles.html#methodological-titles",
    "title": "6.1 - How to make good titles?",
    "section": "Methodological titles",
    "text": "Methodological titles"
  },
  {
    "objectID": "slides/6.1_titles.html#spoiler-title",
    "href": "slides/6.1_titles.html#spoiler-title",
    "title": "6.1 - How to make good titles?",
    "section": "“Spoiler” title",
    "text": "“Spoiler” title"
  },
  {
    "objectID": "slides/6.1_titles.html#interrogative-titles",
    "href": "slides/6.1_titles.html#interrogative-titles",
    "title": "6.1 - How to make good titles?",
    "section": "Interrogative titles",
    "text": "Interrogative titles"
  },
  {
    "objectID": "slides/6.1_titles.html#key-elements-of-a-good-title",
    "href": "slides/6.1_titles.html#key-elements-of-a-good-title",
    "title": "6.1 - How to make good titles?",
    "section": "Key elements of a good title",
    "text": "Key elements of a good title"
  },
  {
    "objectID": "slides/6.1_titles.html#the-hook",
    "href": "slides/6.1_titles.html#the-hook",
    "title": "6.1 - How to make good titles?",
    "section": "The “hook”",
    "text": "The “hook”\n\n\n\nWhat called your attention?"
  },
  {
    "objectID": "slides/6.1_titles.html#key-terms",
    "href": "slides/6.1_titles.html#key-terms",
    "title": "6.1 - How to make good titles?",
    "section": "Key terms",
    "text": "Key terms\n\n\n\ntoo much!"
  },
  {
    "objectID": "slides/6.1_titles.html#the-main-topic",
    "href": "slides/6.1_titles.html#the-main-topic",
    "title": "6.1 - How to make good titles?",
    "section": "The main topic",
    "text": "The main topic"
  },
  {
    "objectID": "slides/6.1_titles.html#quick-task",
    "href": "slides/6.1_titles.html#quick-task",
    "title": "6.1 - How to make good titles?",
    "section": "Quick task",
    "text": "Quick task\n\nRead this abstract\nWrite a title\n\n\n\n\n−+\n04:15"
  },
  {
    "objectID": "slides/6.1_titles.html#end-of-rm-session",
    "href": "slides/6.1_titles.html#end-of-rm-session",
    "title": "6.1 - How to make good titles?",
    "section": "End of RM session",
    "text": "End of RM session\n\n\n\n\nResearch Methods & Data Analysis"
  },
  {
    "objectID": "slides/01_intro_rmda.html#you-should-know-today",
    "href": "slides/01_intro_rmda.html#you-should-know-today",
    "title": "1-Introduction to RM&DA",
    "section": "You should know today:",
    "text": "You should know today:\n\nHow this module is structured\nHow to navigate the course page\nWhat are the basic set-ups needed on your device\nGet the dimension of the work needed"
  },
  {
    "objectID": "slides/01_intro_rmda.html#who-am-i",
    "href": "slides/01_intro_rmda.html#who-am-i",
    "title": "1-Introduction to RM&DA",
    "section": "Who am I?",
    "text": "Who am I?\n\n\n\n\n\nStarted at NTU may 2023\nEcologist/Conservationist\nTropical Ecosystems\nApplied Sciences\n\nI taught RM & DA before many times\nmore info: My website"
  },
  {
    "objectID": "slides/01_intro_rmda.html#how-this-module-is-organized",
    "href": "slides/01_intro_rmda.html#how-this-module-is-organized",
    "title": "1-Introduction to RM&DA",
    "section": "How this module is organized?",
    "text": "How this module is organized?"
  },
  {
    "objectID": "slides/01_intro_rmda.html#two-main-workflows",
    "href": "slides/01_intro_rmda.html#two-main-workflows",
    "title": "1-Introduction to RM&DA",
    "section": "Two main workflows",
    "text": "Two main workflows\n\n\nData Analysis\n\nCover all aspects of dealing with data\nMostly focused on the basics\nLess is More in Statistics\n\n\nResearch Methods\n\nCover the theoretical and philosophical aspects of doing science\nFocused on making sense of science\nExperimetnal skills"
  },
  {
    "objectID": "slides/01_intro_rmda.html#weekly-schedule",
    "href": "slides/01_intro_rmda.html#weekly-schedule",
    "title": "1-Introduction to RM&DA",
    "section": "Weekly Schedule",
    "text": "Weekly Schedule"
  },
  {
    "objectID": "slides/01_intro_rmda.html#sessions",
    "href": "slides/01_intro_rmda.html#sessions",
    "title": "1-Introduction to RM&DA",
    "section": "Sessions",
    "text": "Sessions\n\n\nVery Important\n\nPre-sessions\nSessions\nPost-sessions\n\nIt may vary"
  },
  {
    "objectID": "slides/01_intro_rmda.html#main-tools",
    "href": "slides/01_intro_rmda.html#main-tools",
    "title": "1-Introduction to RM&DA",
    "section": "Main tools",
    "text": "Main tools\n\n\nMicrosoft Teams\n\nUsed to deliver sessions\nDrop-in sessions\nGroup activities\n\n\n\nNOW page\n\nAll Resources\nVirtual learning tools\nSubmission of exams"
  },
  {
    "objectID": "slides/01_intro_rmda.html#resources-and-many-more-online",
    "href": "slides/01_intro_rmda.html#resources-and-many-more-online",
    "title": "1-Introduction to RM&DA",
    "section": "Resources (… and many more online)",
    "text": "Resources (… and many more online)"
  },
  {
    "objectID": "slides/01_intro_rmda.html#finding-help",
    "href": "slides/01_intro_rmda.html#finding-help",
    "title": "1-Introduction to RM&DA",
    "section": "Finding help",
    "text": "Finding help\n\n\nWe can help you with\n\nActivities\nSoftware troubles\nStats (after some proof of individual effort)\n\n😃\n\nWhat we cannot\n\nMark exams twice\nComment on unsubmitted Formative assessment\nSolve exercises for you\n\n💔"
  },
  {
    "objectID": "slides/01_intro_rmda.html#feedback-and-assessment",
    "href": "slides/01_intro_rmda.html#feedback-and-assessment",
    "title": "1-Introduction to RM&DA",
    "section": "Feedback and Assessment",
    "text": "Feedback and Assessment\n\nFeedback opportunities throughout the module\nFormative assessment: multiple opportunities\nA more ‘formal’ opportunity that will help you to understand the standard required and guidelines of a scientific journal (and make you read a paper!)."
  },
  {
    "objectID": "slides/01_intro_rmda.html#your-workbook",
    "href": "slides/01_intro_rmda.html#your-workbook",
    "title": "1-Introduction to RM&DA",
    "section": "Your Workbook",
    "text": "Your Workbook"
  },
  {
    "objectID": "slides/01_intro_rmda.html#every-week",
    "href": "slides/01_intro_rmda.html#every-week",
    "title": "1-Introduction to RM&DA",
    "section": "Every week",
    "text": "Every week\n\n\nTuesdays\n\nSome data analyses\nSome research methods\n\n\nThursdays\n\nDrop-in sessions\nTutorials\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBut it may vary, depending on how “hard” is the week"
  },
  {
    "objectID": "slides/01_intro_rmda.html#doing-science",
    "href": "slides/01_intro_rmda.html#doing-science",
    "title": "1-Introduction to RM&DA",
    "section": "Doing Science",
    "text": "Doing Science\n\n\nIs not a gift\n\n\nEffort and repetition"
  },
  {
    "objectID": "slides/01_intro_rmda.html#how-to-have-fun-with-data",
    "href": "slides/01_intro_rmda.html#how-to-have-fun-with-data",
    "title": "1-Introduction to RM&DA",
    "section": "How to have fun with data?",
    "text": "How to have fun with data?\n\nggplot(penguins, \n       aes(x = flipper_length_mm, y = bill_length_mm)) +\n  geom_point(aes(color = species, shape = species)) +\n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(\n    title = \"Flipper and bill length\",\n    subtitle = \"Dimensions for penguins at Palmer Station LTER\",\n    x = \"Flipper length (mm)\", y = \"Bill length (mm)\",\n    color = \"Penguin species\", shape = \"Penguin species\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "slides/01_intro_rmda.html#how-to-have-fun-with-data-output",
    "href": "slides/01_intro_rmda.html#how-to-have-fun-with-data-output",
    "title": "1-Introduction to RM&DA",
    "section": "How to have fun with data?",
    "text": "How to have fun with data?"
  },
  {
    "objectID": "slides/01_intro_rmda.html#quarto-website",
    "href": "slides/01_intro_rmda.html#quarto-website",
    "title": "1-Introduction to RM&DA",
    "section": "Quarto Website",
    "text": "Quarto Website"
  },
  {
    "objectID": "slides/01_intro_rmda.html#your-quarto-website-is-your-workbook-for-this-module",
    "href": "slides/01_intro_rmda.html#your-quarto-website-is-your-workbook-for-this-module",
    "title": "1-Introduction to RM&DA",
    "section": "Your Quarto Website is your workbook for this module",
    "text": "Your Quarto Website is your workbook for this module\nExample Here"
  },
  {
    "objectID": "slides/01_intro_rmda.html#what-are-your-expectations",
    "href": "slides/01_intro_rmda.html#what-are-your-expectations",
    "title": "1-Introduction to RM&DA",
    "section": "What are your expectations?",
    "text": "What are your expectations?"
  },
  {
    "objectID": "slides/01_intro_rmda.html#the-end",
    "href": "slides/01_intro_rmda.html#the-end",
    "title": "1-Introduction to RM&DA",
    "section": "The end",
    "text": "The end"
  },
  {
    "objectID": "slides/9.1_methods.html#you-should-know-today",
    "href": "slides/9.1_methods.html#you-should-know-today",
    "title": "9.1-Methods",
    "section": "You should know today:",
    "text": "You should know today:\n\nBasics of writing methods\nStrucure of methods\nMethdos vs methodology\nGood practices"
  },
  {
    "objectID": "slides/9.1_methods.html#methods-vs.-methodology",
    "href": "slides/9.1_methods.html#methods-vs.-methodology",
    "title": "9.1-Methods",
    "section": "Methods vs. Methodology",
    "text": "Methods vs. Methodology\n“The”method” refers to the specific techniques and procedures used to collect and analyze data, whereas “methodology” encompasses the overall research design, including the theoretical framework, research questions, and the research approach. ”\nSource:https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4857923"
  },
  {
    "objectID": "slides/9.1_methods.html#readers-must-be-guided",
    "href": "slides/9.1_methods.html#readers-must-be-guided",
    "title": "9.1-Methods",
    "section": "Readers must be guided",
    "text": "Readers must be guided"
  },
  {
    "objectID": "slides/9.1_methods.html#descriptions-needed",
    "href": "slides/9.1_methods.html#descriptions-needed",
    "title": "9.1-Methods",
    "section": "Descriptions needed",
    "text": "Descriptions needed\n\nStudy area"
  },
  {
    "objectID": "slides/9.1_methods.html#descriptions-needed-1",
    "href": "slides/9.1_methods.html#descriptions-needed-1",
    "title": "9.1-Methods",
    "section": "Descriptions needed",
    "text": "Descriptions needed\n\nTaxonomic group"
  },
  {
    "objectID": "slides/9.1_methods.html#experimental-desing",
    "href": "slides/9.1_methods.html#experimental-desing",
    "title": "9.1-Methods",
    "section": "Experimental desing",
    "text": "Experimental desing"
  },
  {
    "objectID": "slides/9.1_methods.html#experimental-desing-1",
    "href": "slides/9.1_methods.html#experimental-desing-1",
    "title": "9.1-Methods",
    "section": "Experimental desing",
    "text": "Experimental desing"
  },
  {
    "objectID": "slides/9.1_methods.html#data-analyses",
    "href": "slides/9.1_methods.html#data-analyses",
    "title": "9.1-Methods",
    "section": "Data Analyses",
    "text": "Data Analyses\nDon’t just list the tests used\nCommon errors: “I used t-test and linear models to analyse data…”\nBest practices:\n\n“To test the association between X and Y I used a t-test…”\n“We calculated the diversity of birds using Hill Numbers instead of common diversity indexes such as Simpson or Shannon because…”"
  },
  {
    "objectID": "slides/9.1_methods.html#ask-others-to-read-your-methods",
    "href": "slides/9.1_methods.html#ask-others-to-read-your-methods",
    "title": "9.1-Methods",
    "section": "Ask others to read your methods",
    "text": "Ask others to read your methods\nEveryone must be able to understand and replicate your experiment\n\nLack of reproducibility is a big problem in science"
  },
  {
    "objectID": "slides/9.1_methods.html#end-of-rm-class",
    "href": "slides/9.1_methods.html#end-of-rm-class",
    "title": "9.1-Methods",
    "section": "End of RM class",
    "text": "End of RM class\n\n\n\n\nResearch Methods & Data Analysis"
  },
  {
    "objectID": "slides/02_data_wrangling.html#you-should-know-today",
    "href": "slides/02_data_wrangling.html#you-should-know-today",
    "title": "2-Data Wrangling",
    "section": "You should know today",
    "text": "You should know today\n\nWhy data wrangling?\nHow to plan data wrangling\nBasic skills\nApplication with an example"
  },
  {
    "objectID": "slides/02_data_wrangling.html#before-we-begin",
    "href": "slides/02_data_wrangling.html#before-we-begin",
    "title": "2-Data Wrangling",
    "section": "Before we begin",
    "text": "Before we begin\n\n\n\n\n\nR and Rstudio installed\nDon’t panic\nEverything is reproducible\nYou’ll have to train to fix the content"
  },
  {
    "objectID": "slides/02_data_wrangling.html#tibbles---click-on-the-title",
    "href": "slides/02_data_wrangling.html#tibbles---click-on-the-title",
    "title": "2-Data Wrangling",
    "section": "Tibbles <- click on the title",
    "text": "Tibbles &lt;- click on the title\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\ndata(\"penguins\")\npenguins %&gt;% \n  select(1:5)\n\n# A tibble: 344 × 5\n   species island    bill_length_mm bill_depth_mm flipper_length_mm\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;\n 1 Adelie  Torgersen           39.1          18.7               181\n 2 Adelie  Torgersen           39.5          17.4               186\n 3 Adelie  Torgersen           40.3          18                 195\n 4 Adelie  Torgersen           NA            NA                  NA\n 5 Adelie  Torgersen           36.7          19.3               193\n 6 Adelie  Torgersen           39.3          20.6               190\n 7 Adelie  Torgersen           38.9          17.8               181\n 8 Adelie  Torgersen           39.2          19.6               195\n 9 Adelie  Torgersen           34.1          18.1               193\n10 Adelie  Torgersen           42            20.2               190\n# ℹ 334 more rows"
  },
  {
    "objectID": "slides/02_data_wrangling.html#your-turn",
    "href": "slides/02_data_wrangling.html#your-turn",
    "title": "2-Data Wrangling",
    "section": "Your turn",
    "text": "Your turn\n\n\n\n−+\n02:15\n\n\n\n1- Load tidyverse\n2- load “palmerpenguins” dataset\n3- call the data\n\ntype penguins"
  },
  {
    "objectID": "slides/02_data_wrangling.html#the-pipe",
    "href": "slides/02_data_wrangling.html#the-pipe",
    "title": "2-Data Wrangling",
    "section": "The PIPE",
    "text": "The PIPE\n\n\n\nmore about the package magrittr\n\n\n“Take what is on the left and use it as the first argument on what comes next\n\n\npenguins %&gt;% # take the opbject penguins\n  select(1:3) # then, select the columns 1 to 3\n\n# A tibble: 344 × 3\n   species island    bill_length_mm\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;\n 1 Adelie  Torgersen           39.1\n 2 Adelie  Torgersen           39.5\n 3 Adelie  Torgersen           40.3\n 4 Adelie  Torgersen           NA  \n 5 Adelie  Torgersen           36.7\n 6 Adelie  Torgersen           39.3\n 7 Adelie  Torgersen           38.9\n 8 Adelie  Torgersen           39.2\n 9 Adelie  Torgersen           34.1\n10 Adelie  Torgersen           42  \n# ℹ 334 more rows"
  },
  {
    "objectID": "slides/02_data_wrangling.html#why-data-wrangling",
    "href": "slides/02_data_wrangling.html#why-data-wrangling",
    "title": "2-Data Wrangling",
    "section": "Why data wrangling",
    "text": "Why data wrangling\n\nyour data is NEVER ready to analyse\nyou need to get to know your data\ndo some inspections\nask some questions"
  },
  {
    "objectID": "slides/02_data_wrangling.html#section-2",
    "href": "slides/02_data_wrangling.html#section-2",
    "title": "2-Data Wrangling",
    "section": "",
    "text": "Lady And The Tramp Dog GIFfrom Lady And The Tramp GIFs\n\n\n”"
  },
  {
    "objectID": "slides/02_data_wrangling.html#data-exploration",
    "href": "slides/02_data_wrangling.html#data-exploration",
    "title": "2-Data Wrangling",
    "section": "Data exploration",
    "text": "Data exploration\n\npenguins %&gt;% # take the opbject penguins\n  write.csv(., \"penguins.csv\") # then, save as .csv\n\n\n\npenguins %&gt;% \n  summary()\n\n      species          island    bill_length_mm  bill_depth_mm  \n Adelie   :152   Biscoe   :168   Min.   :32.10   Min.   :13.10  \n Chinstrap: 68   Dream    :124   1st Qu.:39.23   1st Qu.:15.60  \n Gentoo   :124   Torgersen: 52   Median :44.45   Median :17.30  \n                                 Mean   :43.92   Mean   :17.15  \n                                 3rd Qu.:48.50   3rd Qu.:18.70  \n                                 Max.   :59.60   Max.   :21.50  \n                                 NA's   :2       NA's   :2      \n flipper_length_mm  body_mass_g       sex           year     \n Min.   :172.0     Min.   :2700   female:165   Min.   :2007  \n 1st Qu.:190.0     1st Qu.:3550   male  :168   1st Qu.:2007  \n Median :197.0     Median :4050   NA's  : 11   Median :2008  \n Mean   :200.9     Mean   :4202                Mean   :2008  \n 3rd Qu.:213.0     3rd Qu.:4750                3rd Qu.:2009  \n Max.   :231.0     Max.   :6300                Max.   :2009  \n NA's   :2         NA's   :2"
  },
  {
    "objectID": "slides/02_data_wrangling.html#types-of-variable",
    "href": "slides/02_data_wrangling.html#types-of-variable",
    "title": "2-Data Wrangling",
    "section": "Types of variable",
    "text": "Types of variable\n\npenguins %&gt;% \n  str()\n\ntibble [344 × 8] (S3: tbl_df/tbl/data.frame)\n $ species          : Factor w/ 3 levels \"Adelie\",\"Chinstrap\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ island           : Factor w/ 3 levels \"Biscoe\",\"Dream\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ bill_length_mm   : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ bill_depth_mm    : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ flipper_length_mm: int [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ body_mass_g      : int [1:344] 3750 3800 3250 NA 3450 3650 3625 4675 3475 4250 ...\n $ sex              : Factor w/ 2 levels \"female\",\"male\": 2 1 1 NA 1 2 1 2 NA NA ...\n $ year             : int [1:344] 2007 2007 2007 2007 2007 2007 2007 2007 2007 2007 ..."
  },
  {
    "objectID": "slides/02_data_wrangling.html#types-of-variables",
    "href": "slides/02_data_wrangling.html#types-of-variables",
    "title": "2-Data Wrangling",
    "section": "Types of variables",
    "text": "Types of variables\n\n\nCategorical\n\n\nNumerical"
  },
  {
    "objectID": "slides/02_data_wrangling.html#summarising-data",
    "href": "slides/02_data_wrangling.html#summarising-data",
    "title": "2-Data Wrangling",
    "section": "Summarising data",
    "text": "Summarising data\n\nlibrary(vtable)\nlibrary(gt)\n\npenguins %&gt;% \n  vtable(., lush = TRUE)"
  },
  {
    "objectID": "slides/02_data_wrangling.html#summarising-data-output",
    "href": "slides/02_data_wrangling.html#summarising-data-output",
    "title": "2-Data Wrangling",
    "section": "Summarising data",
    "text": "Summarising data\n\n\n.\n\n\nName\nClass\nValues\nMissing\nSummary\n\n\n\n\nspecies\nfactor\n'Adelie' 'Chinstrap' 'Gentoo'\n0\nnuniq: 3\n\n\nisland\nfactor\n'Biscoe' 'Dream' 'Torgersen'\n0\nnuniq: 3\n\n\nbill_length_mm\nnumeric\nNum: 32.1 to 59.6\n2\nmean: 43.922, sd: 5.46, nuniq: 164\n\n\nbill_depth_mm\nnumeric\nNum: 13.1 to 21.5\n2\nmean: 17.151, sd: 1.975, nuniq: 80\n\n\nflipper_length_mm\ninteger\nNum: 172 to 231\n2\nmean: 200.915, sd: 14.062, nuniq: 55\n\n\nbody_mass_g\ninteger\nNum: 2700 to 6300\n2\nmean: 4201.754, sd: 801.955, nuniq: 94\n\n\nsex\nfactor\n'female' 'male'\n11\nnuniq: 2\n\n\nyear\ninteger\nNum: 2007 to 2009\n0\nmean: 2008.029, sd: 0.818, nuniq: 3"
  },
  {
    "objectID": "slides/02_data_wrangling.html#summarising-data-1",
    "href": "slides/02_data_wrangling.html#summarising-data-1",
    "title": "2-Data Wrangling",
    "section": "Summarising data",
    "text": "Summarising data\n\n\nlibrary(vtable)\nlibrary(gt)\n\npenguins %&gt;% \n  group_by(species) %&gt;% \n  na.omit() %&gt;% \n  summarise(mean = mean(bill_length_mm), sd=sd(bill_length_mm), n = n())\n\n\n# A tibble: 3 × 4\n  species    mean    sd     n\n  &lt;fct&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt;\n1 Adelie     38.8  2.66   146\n2 Chinstrap  48.8  3.34    68\n3 Gentoo     47.6  3.11   119\n\n\n\nMore codes here"
  },
  {
    "objectID": "slides/02_data_wrangling.html#your-turn-1",
    "href": "slides/02_data_wrangling.html#your-turn-1",
    "title": "2-Data Wrangling",
    "section": "Your turn",
    "text": "Your turn\n\nTry to reproduce\nCreate any summary for “penguins”\n\n\n\n\n−+\n02:15"
  },
  {
    "objectID": "slides/02_data_wrangling.html#this-goes-on-and-on",
    "href": "slides/02_data_wrangling.html#this-goes-on-and-on",
    "title": "2-Data Wrangling",
    "section": "This goes on and on…",
    "text": "This goes on and on…\n\nData exploration goes as far and deep as you need\nThere is no minimum nor maximum\nThe key point is\n\nThis needs to make your data make sense to you"
  },
  {
    "objectID": "slides/02_data_wrangling.html#subset-data",
    "href": "slides/02_data_wrangling.html#subset-data",
    "title": "2-Data Wrangling",
    "section": "Subset data",
    "text": "Subset data\n\n\npenguins %&gt;% \n  select(body_mass_g)\n\n\n# A tibble: 344 × 1\n   body_mass_g\n         &lt;int&gt;\n 1        3750\n 2        3800\n 3        3250\n 4          NA\n 5        3450\n 6        3650\n 7        3625\n 8        4675\n 9        3475\n10        4250\n# ℹ 334 more rows"
  },
  {
    "objectID": "slides/02_data_wrangling.html#subset-data-1",
    "href": "slides/02_data_wrangling.html#subset-data-1",
    "title": "2-Data Wrangling",
    "section": "Subset data",
    "text": "Subset data\n\n\npenguins %&gt;% \n  filter(species==\"Gentoo\", \n         bill_length_mm &gt; 50, \n         sex==\"male\") %&gt;% \n  select(bill_length_mm, \n         bill_depth_mm) %&gt;% \n  arrange(bill_depth_mm)\n\n\n# A tibble: 21 × 2\n   bill_length_mm bill_depth_mm\n            &lt;dbl&gt;         &lt;dbl&gt;\n 1           51.3          14.2\n 2           50.2          14.3\n 3           50.1          15  \n 4           50.7          15  \n 5           50.4          15.3\n 6           52.5          15.6\n 7           54.3          15.7\n 8           50.8          15.7\n 9           50.4          15.7\n10           53.4          15.8\n# ℹ 11 more rows"
  },
  {
    "objectID": "slides/02_data_wrangling.html#add-new-columns",
    "href": "slides/02_data_wrangling.html#add-new-columns",
    "title": "2-Data Wrangling",
    "section": "Add new columns",
    "text": "Add new columns\n\npenguins %&gt;% \n  select(bill_length_mm, \n         bill_depth_mm) %&gt;% \n  mutate(bill_volume=bill_length_mm+bill_depth_mm) %&gt;% \n  mutate(log_bill_volume=log(bill_volume)) %&gt;% \n  mutate(bill_categ=ifelse(bill_volume&lt;60, \"small\", \"big\"))\n\n# A tibble: 344 × 5\n   bill_length_mm bill_depth_mm bill_volume log_bill_volume bill_categ\n            &lt;dbl&gt;         &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt; &lt;chr&gt;     \n 1           39.1          18.7        57.8            4.06 small     \n 2           39.5          17.4        56.9            4.04 small     \n 3           40.3          18          58.3            4.07 small     \n 4           NA            NA          NA             NA    &lt;NA&gt;      \n 5           36.7          19.3        56              4.03 small     \n 6           39.3          20.6        59.9            4.09 small     \n 7           38.9          17.8        56.7            4.04 small     \n 8           39.2          19.6        58.8            4.07 small     \n 9           34.1          18.1        52.2            3.96 small     \n10           42            20.2        62.2            4.13 big       \n# ℹ 334 more rows"
  },
  {
    "objectID": "slides/02_data_wrangling.html#reshape-data-tidyr",
    "href": "slides/02_data_wrangling.html#reshape-data-tidyr",
    "title": "2-Data Wrangling",
    "section": "Reshape data Tidyr",
    "text": "Reshape data Tidyr\nLong format\n\npenguins %&gt;% \n  select(bill_length_mm, \n         bill_depth_mm,\n         year) %&gt;% \n  pivot_longer(col=c(bill_length_mm:bill_depth_mm), \n               names_to = \"bill_feature\", values_to = \"value\")\n\n# A tibble: 688 × 3\n    year bill_feature   value\n   &lt;int&gt; &lt;chr&gt;          &lt;dbl&gt;\n 1  2007 bill_length_mm  39.1\n 2  2007 bill_depth_mm   18.7\n 3  2007 bill_length_mm  39.5\n 4  2007 bill_depth_mm   17.4\n 5  2007 bill_length_mm  40.3\n 6  2007 bill_depth_mm   18  \n 7  2007 bill_length_mm  NA  \n 8  2007 bill_depth_mm   NA  \n 9  2007 bill_length_mm  36.7\n10  2007 bill_depth_mm   19.3\n# ℹ 678 more rows"
  },
  {
    "objectID": "slides/02_data_wrangling.html#reshape-data-tidyr-1",
    "href": "slides/02_data_wrangling.html#reshape-data-tidyr-1",
    "title": "2-Data Wrangling",
    "section": "Reshape data Tidyr",
    "text": "Reshape data Tidyr\nWide format\n\npenguins %&gt;% \n  mutate(row = row_number()) %&gt;% # needed to add a rwoo number to identify each row as separate case\n  select(row, species, island, body_mass_g) %&gt;% \n  pivot_wider(names_from = island, values_from = body_mass_g)\n\n# A tibble: 344 × 5\n     row species Torgersen Biscoe Dream\n   &lt;int&gt; &lt;fct&gt;       &lt;int&gt;  &lt;int&gt; &lt;int&gt;\n 1     1 Adelie       3750     NA    NA\n 2     2 Adelie       3800     NA    NA\n 3     3 Adelie       3250     NA    NA\n 4     4 Adelie         NA     NA    NA\n 5     5 Adelie       3450     NA    NA\n 6     6 Adelie       3650     NA    NA\n 7     7 Adelie       3625     NA    NA\n 8     8 Adelie       4675     NA    NA\n 9     9 Adelie       3475     NA    NA\n10    10 Adelie       4250     NA    NA\n# ℹ 334 more rows"
  },
  {
    "objectID": "slides/02_data_wrangling.html#your-turn-2",
    "href": "slides/02_data_wrangling.html#your-turn-2",
    "title": "2-Data Wrangling",
    "section": "Your turn",
    "text": "Your turn\n\nTry to reproduce\nCreate any wide and long formats for “penguins”\n\n\n\n\n−+\n03:15"
  },
  {
    "objectID": "slides/02_data_wrangling.html#the-correct-data-format",
    "href": "slides/02_data_wrangling.html#the-correct-data-format",
    "title": "2-Data Wrangling",
    "section": "The correct data format",
    "text": "The correct data format"
  },
  {
    "objectID": "slides/02_data_wrangling.html#end-of-session-on-da",
    "href": "slides/02_data_wrangling.html#end-of-session-on-da",
    "title": "2-Data Wrangling",
    "section": "End of session on DA",
    "text": "End of session on DA"
  },
  {
    "objectID": "slides/2.2_research_question.html#you-should-know-today",
    "href": "slides/2.2_research_question.html#you-should-know-today",
    "title": "2.2-Research Questions",
    "section": "You should know today",
    "text": "You should know today\n\nHow to elaborate research question\nThe logic behind a good research question\nThe importance of literacy"
  },
  {
    "objectID": "slides/2.2_research_question.html#how-science-progress",
    "href": "slides/2.2_research_question.html#how-science-progress",
    "title": "2.2-Research Questions",
    "section": "How science progress?",
    "text": "How science progress?\n\n\n\n\n\n\nRandom discoveries?\nIllumination?\nSome crazy nerd"
  },
  {
    "objectID": "slides/2.2_research_question.html#inductivism-vs-deductivism",
    "href": "slides/2.2_research_question.html#inductivism-vs-deductivism",
    "title": "2.2-Research Questions",
    "section": "Inductivism vs Deductivism",
    "text": "Inductivism vs Deductivism"
  },
  {
    "objectID": "slides/2.2_research_question.html#when-to-pose-a-question",
    "href": "slides/2.2_research_question.html#when-to-pose-a-question",
    "title": "2.2-Research Questions",
    "section": "When to pose a question?",
    "text": "When to pose a question?\n\nA scientific question preceeds the hypotheses\nComes after a good screening of theory"
  },
  {
    "objectID": "slides/2.2_research_question.html#types-of-questions",
    "href": "slides/2.2_research_question.html#types-of-questions",
    "title": "2.2-Research Questions",
    "section": "Types of questions",
    "text": "Types of questions\n\n\nBad questions\n\nIs there amy difference between A and B?\nIs A bigger than B?\nCan X influence Y?\nAre there little green people out there?\n\n\nGood questions\n\nWhat explains differences between A and B?\nWhat makes A bigger than B?\nHow X can influence Y?\nHow can evolution lead to little green people out there?"
  },
  {
    "objectID": "slides/2.2_research_question.html#lets-train-a-bit",
    "href": "slides/2.2_research_question.html#lets-train-a-bit",
    "title": "2.2-Research Questions",
    "section": "Let’s train a bit",
    "text": "Let’s train a bit\nCreate a good and a bad scientific question about evolution of horses\n\n\n\n\n−+\n03:00"
  },
  {
    "objectID": "slides/2.2_research_question.html#the-importance-of-a-good-question",
    "href": "slides/2.2_research_question.html#the-importance-of-a-good-question",
    "title": "2.2-Research Questions",
    "section": "The importance of a good question",
    "text": "The importance of a good question\n\nThere is no good research based on bad questions\nA good question always push knowledge further\nIt is difficult, really.\nNeeds training"
  },
  {
    "objectID": "slides/2.2_research_question.html#inspiration-vs-transpiration",
    "href": "slides/2.2_research_question.html#inspiration-vs-transpiration",
    "title": "2.2-Research Questions",
    "section": "Inspiration vs Transpiration",
    "text": "Inspiration vs Transpiration\n\n\n\nJoão Cabral de Mello Neto\n\n“Poetry is the result of a lot of effort and literacy. I don’t believe in such a thing as inspiration for writing a good poem”"
  },
  {
    "objectID": "slides/2.2_research_question.html#what-is-science-for-you",
    "href": "slides/2.2_research_question.html#what-is-science-for-you",
    "title": "2.2-Research Questions",
    "section": "What is science for you?",
    "text": "What is science for you?"
  },
  {
    "objectID": "slides/2.2_research_question.html#end-of-session-on-rm",
    "href": "slides/2.2_research_question.html#end-of-session-on-rm",
    "title": "2.2-Research Questions",
    "section": "End of session on RM",
    "text": "End of session on RM"
  },
  {
    "objectID": "slides/05_chose_analysis.html#you-should-know-today",
    "href": "slides/05_chose_analysis.html#you-should-know-today",
    "title": "5-Choosing the right analysis",
    "section": "You should know today:",
    "text": "You should know today:\n\nIdentify the nature of variables\nForesee the types of analyses\nDraw graphics of predicted results"
  },
  {
    "objectID": "slides/05_chose_analysis.html#types-of-variables-review",
    "href": "slides/05_chose_analysis.html#types-of-variables-review",
    "title": "5-Choosing the right analysis",
    "section": "Types of variables (review)",
    "text": "Types of variables (review)\n\n\nCategorical\n\n\nNumerical"
  },
  {
    "objectID": "slides/05_chose_analysis.html#back-to-the-toolbox",
    "href": "slides/05_chose_analysis.html#back-to-the-toolbox",
    "title": "5-Choosing the right analysis",
    "section": "Back to the toolbox",
    "text": "Back to the toolbox"
  },
  {
    "objectID": "slides/05_chose_analysis.html#check-your-variables",
    "href": "slides/05_chose_analysis.html#check-your-variables",
    "title": "5-Choosing the right analysis",
    "section": "Check your variables",
    "text": "Check your variables\n\nlibrary(palmerpenguins)\nlibrary(tidyverse)\n\npenguins %&gt;% \n  glimpse()\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…"
  },
  {
    "objectID": "slides/05_chose_analysis.html#is-there-an-association-between-species-and-sex",
    "href": "slides/05_chose_analysis.html#is-there-an-association-between-species-and-sex",
    "title": "5-Choosing the right analysis",
    "section": "Is there an association between “Species” and “Sex”?",
    "text": "Is there an association between “Species” and “Sex”?\n\n\npenguins %&gt;% \n  na.omit() %&gt;% \n  ggplot(aes(\n    x= species, \n    color=sex, \n    fill=sex))+\n  geom_bar(position = \"dodge\")-&gt; cat_x_cat\ncat_x_cat"
  },
  {
    "objectID": "slides/05_chose_analysis.html#how-species-differ-in-bill-length",
    "href": "slides/05_chose_analysis.html#how-species-differ-in-bill-length",
    "title": "5-Choosing the right analysis",
    "section": "How species differ in bill length?",
    "text": "How species differ in bill length?\n\n\npenguins %&gt;% \n  na.omit() %&gt;% \n  ggplot(aes(\n    x= species, \n    y= bill_length_mm,\n    color=species, \n    fill=species))+\n  geom_boxplot(alpha=0.7)-&gt; cat_x_num\n\ncat_x_num"
  },
  {
    "objectID": "slides/05_chose_analysis.html#what-is-the-relationship-between-bill-leght-and-flipper-lenght",
    "href": "slides/05_chose_analysis.html#what-is-the-relationship-between-bill-leght-and-flipper-lenght",
    "title": "5-Choosing the right analysis",
    "section": "What is the relationship between bill leght and flipper lenght?",
    "text": "What is the relationship between bill leght and flipper lenght?\n\n\npenguins %&gt;% \n  na.omit() %&gt;% \n  ggplot(aes(\n    x= bill_length_mm, \n    y= flipper_length_mm,\n    color=species))+\n  geom_point()-&gt; num_x_num\n\nnum_x_num"
  },
  {
    "objectID": "slides/05_chose_analysis.html#can-body-mass-predict-sex",
    "href": "slides/05_chose_analysis.html#can-body-mass-predict-sex",
    "title": "5-Choosing the right analysis",
    "section": "Can body mass predict sex?",
    "text": "Can body mass predict sex?\n\n\npenguins %&gt;% \n  na.omit() %&gt;% \n  ggplot(aes(\n    x= body_mass_g, \n    y= sex,\n    color=species))+\n  geom_point()-&gt; num_x_cat\n\nnum_x_cat"
  },
  {
    "objectID": "slides/05_chose_analysis.html#the-four-families-of-statistical-tests",
    "href": "slides/05_chose_analysis.html#the-four-families-of-statistical-tests",
    "title": "5-Choosing the right analysis",
    "section": "The four families of statistical tests",
    "text": "The four families of statistical tests"
  },
  {
    "objectID": "slides/05_chose_analysis.html#frequency-tests",
    "href": "slides/05_chose_analysis.html#frequency-tests",
    "title": "5-Choosing the right analysis",
    "section": "Frequency tests",
    "text": "Frequency tests\n\n\n\n\n\n\n\n\n\n\n\n\n\nChi-square\nG-tests\nContingecy tables\nLog-linear models\n\n\n\nPowerful for testing associations between categorical variables"
  },
  {
    "objectID": "slides/05_chose_analysis.html#examples-of-frequency-tests",
    "href": "slides/05_chose_analysis.html#examples-of-frequency-tests",
    "title": "5-Choosing the right analysis",
    "section": "Examples of frequency tests",
    "text": "Examples of frequency tests\nContingency tables\n\n\n\n\nPro-refugees\nAnti-refugees\n\n\n\n\nTories\n12\n68\n\n\nLabours\n55\n45\n\n\nSocialists\n65\n2\n\n\nReform UK\n5\n87"
  },
  {
    "objectID": "slides/05_chose_analysis.html#lets-code-it",
    "href": "slides/05_chose_analysis.html#lets-code-it",
    "title": "5-Choosing the right analysis",
    "section": "Let’s code it",
    "text": "Let’s code it\n\n\ntibble(\n  party = c(\"tories\", \"labours\", \"socialists\", \"reform uk\"),\n  pro_refugees = c(12, 55, 65, 5),\n  anti_refugees = c(68, 45, 2, 87)) |&gt; \n  pivot_longer(cols = c(pro_refugees, anti_refugees),\n               names_to = \"stance\",\n               values_to = \"count\") |&gt;  \n  uncount(count) |&gt; \n  mutate(value=rep(1, 339)) |&gt; \n  summarise(n = dplyr::n(), .by = c(party, stance)) -&gt; refugee\n\nrefugee\n\n\n# A tibble: 8 × 3\n  party      stance            n\n  &lt;chr&gt;      &lt;chr&gt;         &lt;int&gt;\n1 tories     pro_refugees     12\n2 tories     anti_refugees    68\n3 labours    pro_refugees     55\n4 labours    anti_refugees    45\n5 socialists pro_refugees     65\n6 socialists anti_refugees     2\n7 reform uk  pro_refugees      5\n8 reform uk  anti_refugees    87"
  },
  {
    "objectID": "slides/05_chose_analysis.html#lets-graph-it",
    "href": "slides/05_chose_analysis.html#lets-graph-it",
    "title": "5-Choosing the right analysis",
    "section": "Let’s graph it",
    "text": "Let’s graph it"
  },
  {
    "objectID": "slides/05_chose_analysis.html#lets-test-it",
    "href": "slides/05_chose_analysis.html#lets-test-it",
    "title": "5-Choosing the right analysis",
    "section": "Let’s test it",
    "text": "Let’s test it\n\n\nrefugee |&gt; \n  pivot_wider(names_from = stance, values_from = n) |&gt; # make it iinto a contingency table\n  select(-party) |&gt; # remove first column\n  chisq.test() # run the test\n\n\n\n    Pearson's Chi-squared test\n\ndata:  select(pivot_wider(refugee, names_from = stance, values_from = n),     -party)\nX-squared = 166.17, df = 3, p-value &lt; 2.2e-16\n\n\nThe interpretation of frequency tests are quite challenging!"
  },
  {
    "objectID": "slides/05_chose_analysis.html#mean-tests",
    "href": "slides/05_chose_analysis.html#mean-tests",
    "title": "5-Choosing the right analysis",
    "section": "Mean tests",
    "text": "Mean tests\n\n\n\n\n\n\n\n\n\n\n\n\n\nT-tests (two levels)\nAnovas (3+ levels)\nNon-parametric equivalents\nNested and two-way…\nPost-hoc tests (Tukey HSD, Student, etc.)\n\n\n\nWidely used for testing differences in means"
  },
  {
    "objectID": "slides/05_chose_analysis.html#example-of-mean-tests",
    "href": "slides/05_chose_analysis.html#example-of-mean-tests",
    "title": "5-Choosing the right analysis",
    "section": "Example of Mean Tests",
    "text": "Example of Mean Tests\n\n\nGraph\n\npenguins |&gt; \n  na.omit() |&gt; \n  ggplot(aes(sex,bill_length_mm, color=sex, fill=sex))+\n  geom_jitter(size=2)+\n  geom_boxplot(alpha=0.7)\n\n\n\n\n\n\n\n\n\nT-test\n\nsummary(lm(bill_length_mm~sex, data=penguins))\n\n\nCall:\nlm(formula = bill_length_mm ~ sex, data = penguins)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-11.2548  -4.7548   0.8452   4.3030  15.9030 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  42.0970     0.4003 105.152  &lt; 2e-16 ***\nsexmale       3.7578     0.5636   6.667 1.09e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.143 on 331 degrees of freedom\n  (11 observations deleted due to missingness)\nMultiple R-squared:  0.1184,    Adjusted R-squared:  0.1157 \nF-statistic: 44.45 on 1 and 331 DF,  p-value: 1.094e-10"
  },
  {
    "objectID": "slides/05_chose_analysis.html#example-of-mean-tests-1",
    "href": "slides/05_chose_analysis.html#example-of-mean-tests-1",
    "title": "5-Choosing the right analysis",
    "section": "Example of Mean Tests",
    "text": "Example of Mean Tests"
  },
  {
    "objectID": "slides/05_chose_analysis.html#correlations-and-models",
    "href": "slides/05_chose_analysis.html#correlations-and-models",
    "title": "5-Choosing the right analysis",
    "section": "Correlations and models",
    "text": "Correlations and models\n\n\n\n\n\n\n\n\n\n\n\n\n\nCorrelations\n\n– many variations\n\nLinear models\n\n– many variations\n\n\nHighly predictive and powerful but depend on many conditions"
  },
  {
    "objectID": "slides/05_chose_analysis.html#logistic-models",
    "href": "slides/05_chose_analysis.html#logistic-models",
    "title": "5-Choosing the right analysis",
    "section": "Logistic models",
    "text": "Logistic models\n\n\n\n\n\n\n\n\n\n\n\n\n\nLogistic models\nPredictive of odds\nSimilar inlogic to frequency tests\nSimilar in calculation to linear models\n\n\n\nHighly predictive and powerful but can be complex to interpret"
  },
  {
    "objectID": "slides/05_chose_analysis.html#your-turn",
    "href": "slides/05_chose_analysis.html#your-turn",
    "title": "5-Choosing the right analysis",
    "section": "Your turn",
    "text": "Your turn\n\nsource: Our World in Data\n\n\n\n−+\n02:15"
  },
  {
    "objectID": "slides/05_chose_analysis.html#your-turn-again",
    "href": "slides/05_chose_analysis.html#your-turn-again",
    "title": "5-Choosing the right analysis",
    "section": "Your turn again",
    "text": "Your turn again\n\n\nsource: Our World in Data\n\n\n\n−+\n02:15"
  },
  {
    "objectID": "slides/05_chose_analysis.html#it-is-very-important-to-practice",
    "href": "slides/05_chose_analysis.html#it-is-very-important-to-practice",
    "title": "5-Choosing the right analysis",
    "section": "It is very important to practice",
    "text": "It is very important to practice"
  },
  {
    "objectID": "slides/05_chose_analysis.html#step-1---make-a-question",
    "href": "slides/05_chose_analysis.html#step-1---make-a-question",
    "title": "5-Choosing the right analysis",
    "section": "Step 1 - Make a question",
    "text": "Step 1 - Make a question\n\nName the variables in your question"
  },
  {
    "objectID": "slides/05_chose_analysis.html#step-2---make-a-prediction-with-a-graph",
    "href": "slides/05_chose_analysis.html#step-2---make-a-prediction-with-a-graph",
    "title": "5-Choosing the right analysis",
    "section": "Step 2 - Make a prediction with a graph",
    "text": "Step 2 - Make a prediction with a graph\n\n\n\n−+\n02:00"
  },
  {
    "objectID": "slides/05_chose_analysis.html#step-3---identify-the-family-of-tests",
    "href": "slides/05_chose_analysis.html#step-3---identify-the-family-of-tests",
    "title": "5-Choosing the right analysis",
    "section": "Step 3 - Identify the “family” of tests",
    "text": "Step 3 - Identify the “family” of tests"
  },
  {
    "objectID": "slides/05_chose_analysis.html#a-change-in-our-timetable",
    "href": "slides/05_chose_analysis.html#a-change-in-our-timetable",
    "title": "5-Choosing the right analysis",
    "section": "A change in our timetable",
    "text": "A change in our timetable"
  },
  {
    "objectID": "slides/05_chose_analysis.html#end-of-da-class",
    "href": "slides/05_chose_analysis.html#end-of-da-class",
    "title": "5-Choosing the right analysis",
    "section": "End of DA class",
    "text": "End of DA class\n\n\n\n\nResearch Methods & Data Analysis"
  },
  {
    "objectID": "slides/10.1_results.html#you-should-know-today",
    "href": "slides/10.1_results.html#you-should-know-today",
    "title": "10.1-Results session",
    "section": "You should know today:",
    "text": "You should know today:\n\nHow to write results\nClarity and good practices\nImportance of visualization"
  },
  {
    "objectID": "slides/10.1_results.html#use-the-same-order-as-in-methods",
    "href": "slides/10.1_results.html#use-the-same-order-as-in-methods",
    "title": "10.1-Results session",
    "section": "Use the same order as in methods",
    "text": "Use the same order as in methods\n\n\nMethods\n\nMeasure A\nMeasure B\nMeasure C\n\n\nResults\n\nText with A\nTable with B\nGraph with C"
  },
  {
    "objectID": "slides/10.1_results.html#care-about-accuracy",
    "href": "slides/10.1_results.html#care-about-accuracy",
    "title": "10.1-Results session",
    "section": "Care about accuracy",
    "text": "Care about accuracy\nTables and Graphs should not be repeated in text\n\n\nCommunicating results with scientific graphs"
  },
  {
    "objectID": "slides/10.1_results.html#care-about-accuracy-1",
    "href": "slides/10.1_results.html#care-about-accuracy-1",
    "title": "10.1-Results session",
    "section": "Care about accuracy",
    "text": "Care about accuracy\nTables and Graphs should not be repeated in text\n\n\nCommunicating results with scientific graphs"
  },
  {
    "objectID": "slides/10.1_results.html#legends",
    "href": "slides/10.1_results.html#legends",
    "title": "10.1-Results session",
    "section": "Legends",
    "text": "Legends\n\n\nCommunicating results with scientific graphs"
  },
  {
    "objectID": "slides/10.1_results.html#use-nice-figures",
    "href": "slides/10.1_results.html#use-nice-figures",
    "title": "10.1-Results session",
    "section": "Use nice figures",
    "text": "Use nice figures\n\n\nggplot2 gallery"
  },
  {
    "objectID": "slides/10.1_results.html#dont-discuss-but-give-a-taste",
    "href": "slides/10.1_results.html#dont-discuss-but-give-a-taste",
    "title": "10.1-Results session",
    "section": "Don’t discuss but give a taste",
    "text": "Don’t discuss but give a taste\n\n“X was greater than Y, thus suggesting that our hypothesis was correct”\n“We found an important increase of 25% on X when compared to Y”\n“Species diversity in habitat A was 2.3 higher than in habitat B, thus suggesting a positive effect of habitat feature X”"
  },
  {
    "objectID": "slides/10.1_results.html#end-of-class-rm",
    "href": "slides/10.1_results.html#end-of-class-rm",
    "title": "10.1-Results session",
    "section": "End of Class RM",
    "text": "End of Class RM\n\n\n\n\nResearch Methods & Data Analysis"
  },
  {
    "objectID": "slides/8.1_intro.html#you-should-know-today",
    "href": "slides/8.1_intro.html#you-should-know-today",
    "title": "8.1 - How to write Introductions",
    "section": "You should know today:",
    "text": "You should know today:\n\nUnderstand the flow of texts\nElements of a good introduction\nThe funnel analogy"
  },
  {
    "objectID": "slides/8.1_intro.html#the-funnel-of-scientific-writing",
    "href": "slides/8.1_intro.html#the-funnel-of-scientific-writing",
    "title": "8.1 - How to write Introductions",
    "section": "The funnel of scientific writing",
    "text": "The funnel of scientific writing"
  },
  {
    "objectID": "slides/8.1_intro.html#the-funnel-of-scientific-writing-1",
    "href": "slides/8.1_intro.html#the-funnel-of-scientific-writing-1",
    "title": "8.1 - How to write Introductions",
    "section": "The funnel of scientific writing",
    "text": "The funnel of scientific writing\n\nsource: Structure and Style Tips for Writing Your Literature Review"
  },
  {
    "objectID": "slides/8.1_intro.html#slices-of-an-introduction",
    "href": "slides/8.1_intro.html#slices-of-an-introduction",
    "title": "8.1 - How to write Introductions",
    "section": "Slices of an Introduction",
    "text": "Slices of an Introduction"
  },
  {
    "objectID": "slides/8.1_intro.html#meal-plan",
    "href": "slides/8.1_intro.html#meal-plan",
    "title": "8.1 - How to write Introductions",
    "section": "MEAL plan",
    "text": "MEAL plan\n\nMain Idea: The main idea of your paragraph should be stated in the opening sentence, and everything in the paragraph should support this idea.\nEvidence: The specific information that supports your main idea.\nAnalysis: your interpretation of the evidence.\nLink: ties everything together and also lead to the next paragraph."
  },
  {
    "objectID": "slides/8.1_intro.html#example",
    "href": "slides/8.1_intro.html#example",
    "title": "8.1 - How to write Introductions",
    "section": "Example",
    "text": "Example"
  },
  {
    "objectID": "slides/8.1_intro.html#suggested-reading-for-meal-plan",
    "href": "slides/8.1_intro.html#suggested-reading-for-meal-plan",
    "title": "8.1 - How to write Introductions",
    "section": "Suggested reading for MEAL plan",
    "text": "Suggested reading for MEAL plan\nThe MEAL Plan Paragraph Structure"
  },
  {
    "objectID": "slides/8.1_intro.html#more-examples",
    "href": "slides/8.1_intro.html#more-examples",
    "title": "8.1 - How to write Introductions",
    "section": "More examples",
    "text": "More examples\nThe plant ecology of nature-based solutions for people, biodiversity and climate"
  },
  {
    "objectID": "slides/8.1_intro.html#plan-your-paragraphs",
    "href": "slides/8.1_intro.html#plan-your-paragraphs",
    "title": "8.1 - How to write Introductions",
    "section": "Plan your paragraphs",
    "text": "Plan your paragraphs\n1 - Broad problem 2 - Details that demand attention 3 - Show how important is to fill this gap 4 - Present a few predictions and its implications 5 - Make your hypotheses and aims clear"
  },
  {
    "objectID": "slides/8.1_intro.html#each-journal-has-a-different-approach",
    "href": "slides/8.1_intro.html#each-journal-has-a-different-approach",
    "title": "8.1 - How to write Introductions",
    "section": "Each journal has a different approach",
    "text": "Each journal has a different approach\n\nsource:Elements of style"
  },
  {
    "objectID": "slides/8.1_intro.html#trainning",
    "href": "slides/8.1_intro.html#trainning",
    "title": "8.1 - How to write Introductions",
    "section": "Trainning",
    "text": "Trainning\n\nsource:Increased Incidence of Rhinovirus"
  },
  {
    "objectID": "slides/8.1_intro.html#trainning-1",
    "href": "slides/8.1_intro.html#trainning-1",
    "title": "8.1 - How to write Introductions",
    "section": "Trainning",
    "text": "Trainning\n\nsource:Environment, Soil, and Digestate Interaction"
  },
  {
    "objectID": "slides/8.1_intro.html#trainning-2",
    "href": "slides/8.1_intro.html#trainning-2",
    "title": "8.1 - How to write Introductions",
    "section": "Trainning",
    "text": "Trainning\n\nsource:Sustainable-use marine protected areas"
  },
  {
    "objectID": "slides/8.1_intro.html#good-introductions",
    "href": "slides/8.1_intro.html#good-introductions",
    "title": "8.1 - How to write Introductions",
    "section": "Good Introductions",
    "text": "Good Introductions\n\nCapture form the very first sentence\nEasy to read\nClearly present\n\nTheory\nGaps\nHypothesis\nImplications"
  },
  {
    "objectID": "slides/8.1_intro.html#end-of-da-class",
    "href": "slides/8.1_intro.html#end-of-da-class",
    "title": "8.1 - How to write Introductions",
    "section": "End of DA class",
    "text": "End of DA class\n\n\n\n\nResearch Methods & Data Analysis"
  },
  {
    "objectID": "example.html",
    "href": "example.html",
    "title": "Quiz example",
    "section": "",
    "text": "This document illustrates the usage of the naquiz quarto extension.\nThe extension enables adding multiple choice questions when using HTML documents. It also adds Alpine.js javascript framework to the document."
  },
  {
    "objectID": "example.html#a-basic-example",
    "href": "example.html#a-basic-example",
    "title": "Quiz example",
    "section": "A basic example",
    "text": "A basic example\n\nBill Gates was the founder of:\n\n\n\n\n ✗Apple\n\n\n ✓Microsoft\n\n\n ✗Facebook\n\n\n ✗Google"
  },
  {
    "objectID": "example.html#a-quiz-with-a-clear-answer-button",
    "href": "example.html#a-quiz-with-a-clear-answer-button",
    "title": "Quiz example",
    "section": "A quiz with a clear answer button",
    "text": "A quiz with a clear answer button\n\nBill Gates was the founder of:\n\n\n\n\n ✗Apple\n\n\n ✓Microsoft\n\n\n ✗Facebook\n\n\n ✗Google\n\n\nClear answer"
  },
  {
    "objectID": "example.html#a-quiz-with-additional-buttons",
    "href": "example.html#a-quiz-with-additional-buttons",
    "title": "Quiz example",
    "section": "A quiz with additional buttons",
    "text": "A quiz with additional buttons\n\nBill Gates was the founder of:\n\n\n\n\n ✗Apple\n\n\n ✓Microsoft\n\n\n ✗Facebook\n\n\n ✗Google\n\n\nClear answer\n\n\n\n\n\n\n\n\n\n\n\nShow hint\n\nThe company name starts with an ‘M’…\n\n\n\n\n\n\nShow Answer\n\nBill Gates and Paul Allen founded Microsoft on April 4, 1975."
  },
  {
    "objectID": "example.html#a-quiz-with-additional-information-in-callouts",
    "href": "example.html#a-quiz-with-additional-information-in-callouts",
    "title": "Quiz example",
    "section": "A quiz with additional information in callouts",
    "text": "A quiz with additional information in callouts\n\nBill Gates was the founder of:\n\n\n\n\n ✗Apple\n\n\n ✓Microsoft\n\n\n ✗Facebook\n\n\n ✗Google\n\n\nClear answer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nThe company name starts with an ‘M’…\n\n\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\nBill Gates and Paul Allen founded Microsoft on April 4, 1975."
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "This module aims to provide you with advanced skills in interpretation of quantitative and qualitative research data and to develop critical understanding of the ethical considerations involved in the collection of data. The module also aims to underpin the other modules in the Masters Framework by investigating experimental design, ethics, project management and funding.\nYou will be able to present findings of scientific research in a variety of appropriate ways, as well as critically evaluating, interpreting and relaying knowledge gained from secondary sources to peers."
  },
  {
    "objectID": "syllabus.html#course-objectives",
    "href": "syllabus.html#course-objectives",
    "title": "Syllabus",
    "section": "",
    "text": "This module aims to provide you with advanced skills in interpretation of quantitative and qualitative research data and to develop critical understanding of the ethical considerations involved in the collection of data. The module also aims to underpin the other modules in the Masters Framework by investigating experimental design, ethics, project management and funding.\nYou will be able to present findings of scientific research in a variety of appropriate ways, as well as critically evaluating, interpreting and relaying knowledge gained from secondary sources to peers."
  },
  {
    "objectID": "syllabus.html#delivery-mode",
    "href": "syllabus.html#delivery-mode",
    "title": "Syllabus",
    "section": "Delivery mode",
    "text": "Delivery mode\nThe RMDA module takes a blended approach to learning, as such many of the sessions provided, including drop-in sessions, will be via TEAMS or in-person bu this is essentially a FLEXI Module. This means that you must take control of your time and progress and long hours of self learning are expected.\nIssues will arise especially if this is your first opportunity to use R, that’s ok, we will support you so don’t be afraid to speak up and get the help you need right away."
  },
  {
    "objectID": "syllabus.html#important-pep-talk",
    "href": "syllabus.html#important-pep-talk",
    "title": "Syllabus",
    "section": "Important pep talk!",
    "text": "Important pep talk!\nLearning R can be difficult at first—it’s like learning a new language, just like Spanish, French, or Chinese. Hadley Wickham—the chief data scientist at RStudio and the author of some amazing R packages you’ll be using like {ggplot2}—made this wise observation:\n\nIt’s easy when you start out programming to get really frustrated and think, “Oh it’s me, I’m really stupid,” or, “I’m not made out to program.” But, that is absolutely not the case. Everyone gets frustrated. I still get frustrated occasionally when writing R code. It’s just a natural part of programming. So, it happens to everyone and gets less and less over time. Don’t blame yourself. Just take a break, do something fun, and then come back and try again later.\n\nEven experienced programmers find themselves bashing their heads against seemingly intractable errors. If you’re finding yourself taking way too long hitting your head against a wall and not understanding, take a break, talk to classmates, e-mail me, etc."
  },
  {
    "objectID": "syllabus.html#course-materials",
    "href": "syllabus.html#course-materials",
    "title": "Syllabus",
    "section": "Course materials",
    "text": "Course materials\nAll of the readings and software in this class are free. There are free online version of all the textbooks, R and RStudio are inherently free. We are going to use different sources of videos, e-books, forums and datasets, all freely avaialbe and widely used in the online environment of larnign R and stats.\nWe’ll rely heavily on these books, which are all available online (for free!).\nThere will occasionally be additional articles and videos to read and watch. When this happens, links to these other resources will be included on the content page for that session.\nI also highly recommend subscribing to the R Weekly newsletter. This e-mail is sent every Monday and is full of helpful tutorials about how to do stuff with R.\n\nR and RStudio\nYou will do all of your analysis with the open source (and free!) programming language R. You will use RStudio as the main program to access R. Think of R as an engine and RStudio as a car dashboard—R handles all the calculations produces the actual statistics and graphical output, while RStudio provides a nice interface for running R code.\nR is free, but it can sometimes be a pain to install and configure. To make life easier, you can (and should!) use the free Posit.cloud service, which lets you run a full instance of RStudio in your web browser. This means you won’t have to install anything on your computer to get started with R! We will have a shared class workspace in Posit.cloud that will let you quickly copy templates for examples, exercises, and mini projects.\nPosit.cloud is convenient, but it can be slow and it is not designed to be able to handle larger datasets or more complicated analysis and graphics. You also can’t use your own custom fonts with Posit.cloud. Over the course of the semester, you’ll probably want to get around to installing R, RStudio, and other R packages on your computer and wean yourself off of Posit.cloud. This isn’t 100% necessary, but it’s helpful.\nYou can find instructions for installing R, RStudio, and all the tidyverse packages here.\n\n\nFinding help\nData science and statistical programming can be difficult. Computers are stupid and little errors in your code can cause hours of headache (even if you’ve been doing this stuff for years!).\nFortunately there are tons of online resources to help you with this. Two of the most important are StackOverflow (a Q&A site with hundreds of thousands of answers to all sorts of programming questions) and Posit Community (a forum specifically designed for people using RStudio and the tidyverse (i.e. you)).\nIf you use Bluesky or Mastodon or Threads or LinkedIn, post R-related questions and content with #rstats. The R community is exceptionally generous and helpful.\nSearching for help with R on Google can sometimes be tricky because the program name is, um, a single letter. Google is generally smart enough to figure out what you mean when you search for “r scatterplot”, but if it does struggle, try searching for “rstats” instead (e.g. “rstats scatterplot”).\nAdditionally, we have a class chatroom at MS Teams where anyone in the class can ask questions and anyone can answer. I will monitor MS Teams regularly and will respond quickly. (It’s one of the rare MS Teams workspaces where I actually have notifications enabled!) Ask questions about the readings, exercises, and mini projects. You’ll likely have similar questions as your peers, and you’ll likely be able to answer other peoples’ questions too."
  },
  {
    "objectID": "syllabus.html#ai-llms-and-bs",
    "href": "syllabus.html#ai-llms-and-bs",
    "title": "Syllabus",
    "section": "AI, LLMs, and BS",
    "text": "AI, LLMs, and BS\nI highly recommend not using ChatGPT or similar large language models (LLMs) in this class.\nI am deeply opposed to LLMs for writing and learning how to code.\nI am not opposed to LLMs for code when you are expereinecd, but I am deeply opposed to them for beginners at code.\nBy definition, LLMs and other AI tools cannot produce truth (or even lies). They generate bullshit a formal philosophical term that refers to text or speech that has no regard for truth.\nDo not replace the important work of writing with AI BS slop. The point of writing is to help crystallize your thinking. Chugging out words that make it look like you read and understood the content will not help you learn.\nIn your weekly reflections and formative exercises, I expect to see good engagement with the readings. I want to see your thinking process. I want to see you make connections between the readings. I want to see your personal insights. I don’t want to see a bunch of words that look like a human wrote them. That’s not useful for future-you. That’s not useful for me. That’s a waste of time."
  },
  {
    "objectID": "syllabus.html#course-schedule",
    "href": "syllabus.html#course-schedule",
    "title": "Syllabus",
    "section": "Course schedule",
    "text": "Course schedule\n100% of the class content is asynchronous. You can do the readings and watch the videos on your own schedule at whatever time works best for you. Many of you work full time and you have childcare and parental care responsibilities, leaving you with only evenings for coursework. I’ve designed this asynchronous system with you specifically in mind.\nEach week has (1) a set of readings and an accompanying lecture, (2) a lesson, (3) an example with lots of reference code, and (4) a short exercise. The schedule page provides an overview of all these moving parts.\nI recommend following this general process for each session:\n\nDo everything on the content page ()\nWork through the lesson page ()\nComplete the exercise () while updating your workbook ()"
  },
  {
    "objectID": "syllabus.html#course-policies",
    "href": "syllabus.html#course-policies",
    "title": "Syllabus",
    "section": "Course policies",
    "text": "Course policies\nBe nice. Be honest. Don’t cheat.\nWe will also follow NTU’s Code of Conduct.\nThis syllabus reflects a plan for the semester. Deviations may become necessary as the course progresses.\n\nCommunication\nDue to large size of cohorts, previous experience proved that email communication must be restricted to the maximum. Doubts and difficulties must be taken using the following order of priorities:\n1- Our dedicated Teams Channel: this is linked to the course NOW page. Just go there, create a new post with your doubt and ALL of us (including other colleagues will do our best to help you). Rememeber to place te code error and/or your code for reproducibility.\n2- Tutorial sessions: These are either on-line or in-person sessions where we can discuss problems and do some demonstrations\n3- Email me, only (really!) if you have tried all the above and your problem was not sorted.\n\n\n\n\n\n\nTip\n\n\n\nMany of you will experience problems with coding in R for the first time. However, this module is not focused on teaching R. Instead, we use R and you learn by using. If you require more specialized help with R, the Brackenhurst Library has a dedicated team that can help you with this. Book time with them!\n\n\n\n\nLearning\nI’m fully committed to making sure that you learn everything you were hoping to learn from this class!. Under ordinary conditions, I am flexible and lenient with grading and course expectations when students face difficult challenges.\nIf you tell me you’re having trouble, I will not judge you or think less of you. I hope you’ll extend me the same grace.\nYou never owe me personal information about your health (mental or physical). You are always welcome to talk to me about things that you’re going through, though. If I can’t help you, I usually know somebody who can.\nIf you need extra help, or if you need more time with something, or if you feel like you’re behind or not understanding everything, do not suffer in silence! Talk to me!\n\n\nLate work (to be edited)\n\n\nSpecial needs"
  },
  {
    "objectID": "syllabus.html#assignments-and-grades",
    "href": "syllabus.html#assignments-and-grades",
    "title": "Syllabus",
    "section": "Assignments and grades",
    "text": "Assignments and grades\nYou can find descriptions for all the assignments on the assessment page."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "slides/7.1_abstracts.html#you-should-know-today",
    "href": "slides/7.1_abstracts.html#you-should-know-today",
    "title": "7.1 - How to write good abstracts",
    "section": "You should know today:",
    "text": "You should know today:\n\nIdentify a good and a bad abstract\nElements of a abstract\nWhy abstracts are important"
  },
  {
    "objectID": "slides/7.1_abstracts.html#why-to-write-abstracts",
    "href": "slides/7.1_abstracts.html#why-to-write-abstracts",
    "title": "7.1 - How to write good abstracts",
    "section": "Why to write abstracts",
    "text": "Why to write abstracts\n\n\n\nThey are the most read part of a paper (after title)\nThey also serve as index\nCapture the atention\nInform the crucial\n\n\n\n\nsource:https://plos.org/resource/how-to-write-a-great-abstract/"
  },
  {
    "objectID": "slides/7.1_abstracts.html#main-components",
    "href": "slides/7.1_abstracts.html#main-components",
    "title": "7.1 - How to write good abstracts",
    "section": "Main components",
    "text": "Main components"
  },
  {
    "objectID": "slides/7.1_abstracts.html#state-of-the-artbackground",
    "href": "slides/7.1_abstracts.html#state-of-the-artbackground",
    "title": "7.1 - How to write good abstracts",
    "section": "State of the art/Background",
    "text": "State of the art/Background\n\nsource:https://www.orielstat.com/blog/eu-mdr-state-of-the-art/"
  },
  {
    "objectID": "slides/7.1_abstracts.html#knowldege-gaps-premium",
    "href": "slides/7.1_abstracts.html#knowldege-gaps-premium",
    "title": "7.1 - How to write good abstracts",
    "section": "Knowldege gaps (premium)",
    "text": "Knowldege gaps (premium)\n\nhttps://medium.com/mind-cafe/the-three-gaps-in-knowledge-that-define-the-quality-of-our-lives-86f772acb898"
  },
  {
    "objectID": "slides/7.1_abstracts.html#objectives-and-aims",
    "href": "slides/7.1_abstracts.html#objectives-and-aims",
    "title": "7.1 - How to write good abstracts",
    "section": "Objectives and Aims",
    "text": "Objectives and Aims\n\n\nAt this point you should:\n\nQuestion\nHypothesis\nImplications\n\nThan you know exactly the objective"
  },
  {
    "objectID": "slides/7.1_abstracts.html#methods",
    "href": "slides/7.1_abstracts.html#methods",
    "title": "7.1 - How to write good abstracts",
    "section": "Methods",
    "text": "Methods\n\n\nPlease be brief:\n\nRelevant procedures\nEffort\nExperimental Design"
  },
  {
    "objectID": "slides/7.1_abstracts.html#results",
    "href": "slides/7.1_abstracts.html#results",
    "title": "7.1 - How to write good abstracts",
    "section": "Results",
    "text": "Results\nJust the most important!!"
  },
  {
    "objectID": "slides/7.1_abstracts.html#conlusions",
    "href": "slides/7.1_abstracts.html#conlusions",
    "title": "7.1 - How to write good abstracts",
    "section": "Conlusions",
    "text": "Conlusions\nFeedback the theory!!"
  },
  {
    "objectID": "slides/7.1_abstracts.html#live-examples",
    "href": "slides/7.1_abstracts.html#live-examples",
    "title": "7.1 - How to write good abstracts",
    "section": "Live examples",
    "text": "Live examples"
  },
  {
    "objectID": "slides/7.1_abstracts.html#end-of-da-class",
    "href": "slides/7.1_abstracts.html#end-of-da-class",
    "title": "7.1 - How to write good abstracts",
    "section": "End of DA class",
    "text": "End of DA class\n\n\n\n\nResearch Methods & Data Analysis"
  },
  {
    "objectID": "slides/03_data_exploration.html#you-should-know-today",
    "href": "slides/03_data_exploration.html#you-should-know-today",
    "title": "3 - Data Exploration",
    "section": "You should know today",
    "text": "You should know today\n\nMake questions to your data?\nExplore the basic features of your data\nMake simple exploratory graphics"
  },
  {
    "objectID": "slides/03_data_exploration.html#before-we-begin",
    "href": "slides/03_data_exploration.html#before-we-begin",
    "title": "3 - Data Exploration",
    "section": "Before we begin",
    "text": "Before we begin\n\n\n\n\n\nR and Rstudio installed\nDon’t panic\nEverything is reproducible\nYou’ll have to train to fix the content"
  },
  {
    "objectID": "slides/03_data_exploration.html#what-questions-should-i-make-to-the-data",
    "href": "slides/03_data_exploration.html#what-questions-should-i-make-to-the-data",
    "title": "3 - Data Exploration",
    "section": "What questions should I make to the data?",
    "text": "What questions should I make to the data?"
  },
  {
    "objectID": "slides/03_data_exploration.html#back-to-spreadsheets",
    "href": "slides/03_data_exploration.html#back-to-spreadsheets",
    "title": "3 - Data Exploration",
    "section": "Back to Spreadsheets",
    "text": "Back to Spreadsheets\nThe Penguins file\n\npenguins_df&lt;-read.csv(\"https://raw.githubusercontent.com/fplmelo/ecoaplic/refs/heads/main/content/slides_aulas/rm_da/penguins.csv\")\npenguins_df\n\n                                   version.https...git.lfs.github.com.spec.v1\n1 oid sha256:bf3738eebc06177e1977438551f87d5e7ead6ddf3c7f3152fcef0ee2152241a1\n2                                                                  size 19258"
  },
  {
    "objectID": "slides/03_data_exploration.html#section",
    "href": "slides/03_data_exploration.html#section",
    "title": "3 - Data Exploration",
    "section": "",
    "text": "source: Andrew Gard https://www.youtube.com/@EquitableEquations"
  },
  {
    "objectID": "slides/03_data_exploration.html#we-know-this-data",
    "href": "slides/03_data_exploration.html#we-know-this-data",
    "title": "3 - Data Exploration",
    "section": "We know this data",
    "text": "We know this data\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\ndata(\"penguins\")\npenguins %&gt;% \n  select(1:5)\n\n# A tibble: 344 × 5\n   species island    bill_length_mm bill_depth_mm flipper_length_mm\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;\n 1 Adelie  Torgersen           39.1          18.7               181\n 2 Adelie  Torgersen           39.5          17.4               186\n 3 Adelie  Torgersen           40.3          18                 195\n 4 Adelie  Torgersen           NA            NA                  NA\n 5 Adelie  Torgersen           36.7          19.3               193\n 6 Adelie  Torgersen           39.3          20.6               190\n 7 Adelie  Torgersen           38.9          17.8               181\n 8 Adelie  Torgersen           39.2          19.6               195\n 9 Adelie  Torgersen           34.1          18.1               193\n10 Adelie  Torgersen           42            20.2               190\n# ℹ 334 more rows"
  },
  {
    "objectID": "slides/03_data_exploration.html#how-to-visually-check-continuous-variables",
    "href": "slides/03_data_exploration.html#how-to-visually-check-continuous-variables",
    "title": "3 - Data Exploration",
    "section": "How to visually check continuous variables?",
    "text": "How to visually check continuous variables?"
  },
  {
    "objectID": "slides/03_data_exploration.html#histograms",
    "href": "slides/03_data_exploration.html#histograms",
    "title": "3 - Data Exploration",
    "section": "Histograms",
    "text": "Histograms\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\ndata(\"penguins\")\npenguins %&gt;% \ngroup_by(species) %&gt;% \n  ggplot(aes(x=bill_length_mm, color=species, fill=species))+\n  geom_histogram()"
  },
  {
    "objectID": "slides/03_data_exploration.html#boxplots",
    "href": "slides/03_data_exploration.html#boxplots",
    "title": "3 - Data Exploration",
    "section": "Boxplots",
    "text": "Boxplots\n\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\ndata(\"penguins\")\npenguins %&gt;% \ngroup_by(species) %&gt;% \n  ggplot(aes(x=species, \n             y=bill_length_mm, \n             color=species, \n             fill=species))+\n  geom_boxplot(alpha=0.5)+\n  theme(axis.text=element_text(size=16),\n        axis.title=element_text(size=16))"
  },
  {
    "objectID": "slides/03_data_exploration.html#your-turn",
    "href": "slides/03_data_exploration.html#your-turn",
    "title": "3 - Data Exploration",
    "section": "Your turn",
    "text": "Your turn\n\nTry to reproduce with any other continuous variable\n|Do a Historgram and a Boxplot\n\n\n\n\n−+\n02:15"
  },
  {
    "objectID": "slides/03_data_exploration.html#checking-categorical-varibles",
    "href": "slides/03_data_exploration.html#checking-categorical-varibles",
    "title": "3 - Data Exploration",
    "section": "Checking categorical varibles",
    "text": "Checking categorical varibles"
  },
  {
    "objectID": "slides/03_data_exploration.html#species-of-penguin",
    "href": "slides/03_data_exploration.html#species-of-penguin",
    "title": "3 - Data Exploration",
    "section": "Species of penguin",
    "text": "Species of penguin\n\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\npenguins %&gt;% \n  ggplot(aes(x=species,\n             color=species, \n             fill=species))+\n  geom_bar(alpha=0.5)+\n  theme(axis.text=element_text(size=16),\n        axis.title=element_text(size=16))"
  },
  {
    "objectID": "slides/03_data_exploration.html#observations-per-year",
    "href": "slides/03_data_exploration.html#observations-per-year",
    "title": "3 - Data Exploration",
    "section": "Observations per year",
    "text": "Observations per year\n\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\npenguins %&gt;% \n  ggplot(aes(x=year,\n             color=species, \n             fill=species))+\n  geom_bar()+\n  theme(axis.text=element_text(size=16),\n        axis.title=element_text(size=16))"
  },
  {
    "objectID": "slides/03_data_exploration.html#observations-per-island",
    "href": "slides/03_data_exploration.html#observations-per-island",
    "title": "3 - Data Exploration",
    "section": "Observations per island",
    "text": "Observations per island\n\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\npenguins %&gt;% \n  ggplot(aes(x=island,\n             color=species, \n             fill=species))+\n  geom_bar()+\n  theme(axis.text=element_text(size=16),\n        axis.title=element_text(size=16))"
  },
  {
    "objectID": "slides/03_data_exploration.html#visualising-correlations",
    "href": "slides/03_data_exploration.html#visualising-correlations",
    "title": "3 - Data Exploration",
    "section": "Visualising correlations",
    "text": "Visualising correlations\n\n\npenguins %&gt;% \n  ggplot(aes(x=bill_length_mm, \n             y = bill_depth_mm))+\n  geom_point()+\n  theme(axis.text=element_text(size=16),\n        axis.title=element_text(size=16))"
  },
  {
    "objectID": "slides/03_data_exploration.html#visualising-correlations-per-species",
    "href": "slides/03_data_exploration.html#visualising-correlations-per-species",
    "title": "3 - Data Exploration",
    "section": "Visualising correlations per species",
    "text": "Visualising correlations per species\n\n\npenguins %&gt;% \n  ggplot(aes(x=bill_length_mm, \n             y = bill_depth_mm,\n             color=species, \n             fill=species))+\n  geom_point()+\n  theme(axis.text=element_text(size=16),\n        axis.title=element_text(size=16))"
  },
  {
    "objectID": "slides/03_data_exploration.html#body-mass-per-sex",
    "href": "slides/03_data_exploration.html#body-mass-per-sex",
    "title": "3 - Data Exploration",
    "section": "Body mass per sex",
    "text": "Body mass per sex\n\n\npenguins %&gt;% \n  na.omit() %&gt;% \n  ggplot(aes(x=sex, \n             y = body_mass_g,\n             color=species, \n             fill=species))+\n  geom_boxplot(alpha=0.7)+\n  theme(axis.text=element_text(size=16),\n        axis.title=element_text(size=16))"
  },
  {
    "objectID": "slides/03_data_exploration.html#body-mass-per-sex-iverting-groups",
    "href": "slides/03_data_exploration.html#body-mass-per-sex-iverting-groups",
    "title": "3 - Data Exploration",
    "section": "Body mass per sex (iverting groups)",
    "text": "Body mass per sex (iverting groups)\n\n\npenguins %&gt;% \n  na.omit() %&gt;% \n  ggplot(aes(x=species, \n             y = body_mass_g,\n             color=sex, \n             fill=sex))+\n  geom_boxplot(alpha=0.7)+\n  theme(axis.text=element_text(size=16),\n        axis.title=element_text(size=16))"
  },
  {
    "objectID": "slides/03_data_exploration.html#your-turn-1",
    "href": "slides/03_data_exploration.html#your-turn-1",
    "title": "3 - Data Exploration",
    "section": "Your turn",
    "text": "Your turn\n\nCan boby mass predict bill length?\nDo sex explain flipper length\n\n\n\n\n−+\n02:15"
  },
  {
    "objectID": "slides/03_data_exploration.html#exploring-data-is-asking-relevant-questions",
    "href": "slides/03_data_exploration.html#exploring-data-is-asking-relevant-questions",
    "title": "3 - Data Exploration",
    "section": "Exploring data is asking relevant questions",
    "text": "Exploring data is asking relevant questions\n\nThis is not mining\nDon’t just correlate random things\nStart to imagine before coding"
  },
  {
    "objectID": "slides/03_data_exploration.html#check-distributions",
    "href": "slides/03_data_exploration.html#check-distributions",
    "title": "3 - Data Exploration",
    "section": "Check distributions",
    "text": "Check distributions\n\n\npenguins %&gt;% \n  na.omit() %&gt;% \n  pivot_longer(bill_length_mm:body_mass_g, names_to = \"trait\") %&gt;% \n  ggplot(aes(x=value,\n         group=species,\n         fill=species,\n         color=species))+\n  geom_density(alpha=0.7)+\n  facet_grid(~trait, scales = \"free_x\" )+\n  theme(axis.text=element_text(size=16),\n        axis.title=element_text(size=16))+\n  theme_minimal()"
  },
  {
    "objectID": "slides/03_data_exploration.html#the-importance-of-distributions",
    "href": "slides/03_data_exploration.html#the-importance-of-distributions",
    "title": "3 - Data Exploration",
    "section": "The importance of distributions",
    "text": "The importance of distributions\n\nsource:https://gregorygundersen.com/blog/2020/04/11/moments/"
  },
  {
    "objectID": "slides/03_data_exploration.html#moments-of-centrality",
    "href": "slides/03_data_exploration.html#moments-of-centrality",
    "title": "3 - Data Exploration",
    "section": "Moments of centrality",
    "text": "Moments of centrality\n\nMean, median and mode"
  },
  {
    "objectID": "slides/03_data_exploration.html#moments-of-dispersion",
    "href": "slides/03_data_exploration.html#moments-of-dispersion",
    "title": "3 - Data Exploration",
    "section": "Moments of dispersion",
    "text": "Moments of dispersion\n\n\n\n\n\nVariance\nStandard deviation\nStandard Error\nRange\nQuantiles"
  },
  {
    "objectID": "slides/03_data_exploration.html#checking-via-histogram",
    "href": "slides/03_data_exploration.html#checking-via-histogram",
    "title": "3 - Data Exploration",
    "section": "Checking via histogram",
    "text": "Checking via histogram\n\n\nset.seed(999)\nnormal&lt;-rnorm(100)\nnormal %&gt;% \n  as.tibble() %&gt;% \n  ggplot(aes(value))+\n  geom_histogram(color=\"#DD4A48\", fill=\"#DD4A48\")+\n  geom_vline(xintercept=c(mean(normal), (mean(normal)+sd(normal)),mean(normal)-sd(normal)), \n             linetype=\"dashed\")"
  },
  {
    "objectID": "slides/03_data_exploration.html#checking-via-bokplot",
    "href": "slides/03_data_exploration.html#checking-via-bokplot",
    "title": "3 - Data Exploration",
    "section": "Checking via bokplot",
    "text": "Checking via bokplot\n\n\nset.seed(999)\nnormal&lt;-rnorm(100)\nnormal %&gt;% \n  as.tibble() %&gt;% \n  ggplot(aes(value))+\n  geom_boxplot(fill=\"#DD4A48\",alpha=0.7)"
  },
  {
    "objectID": "slides/03_data_exploration.html#workflow",
    "href": "slides/03_data_exploration.html#workflow",
    "title": "3 - Data Exploration",
    "section": "Workflow",
    "text": "Workflow"
  },
  {
    "objectID": "slides/03_data_exploration.html#end-of-session-on-da",
    "href": "slides/03_data_exploration.html#end-of-session-on-da",
    "title": "3 - Data Exploration",
    "section": "End of session on DA",
    "text": "End of session on DA"
  },
  {
    "objectID": "slides/10_log_models.html#you-should-know-today",
    "href": "slides/10_log_models.html#you-should-know-today",
    "title": "10-Logistic Models",
    "section": "You should know today:",
    "text": "You should know today:\n\nKnow when to use linear models\nUnderstand outputs of LM\nHow to prepare for LM\nMultiple linear models"
  },
  {
    "objectID": "slides/10_log_models.html#types-of-variables-review",
    "href": "slides/10_log_models.html#types-of-variables-review",
    "title": "10-Logistic Models",
    "section": "Types of variables (review)",
    "text": "Types of variables (review)\n\n\nCategorical\n\n\nNumerical"
  },
  {
    "objectID": "slides/10_log_models.html#back-to-the-toolbox",
    "href": "slides/10_log_models.html#back-to-the-toolbox",
    "title": "10-Logistic Models",
    "section": "Back to the toolbox",
    "text": "Back to the toolbox"
  },
  {
    "objectID": "slides/10_log_models.html#numerical-vs-categorical",
    "href": "slides/10_log_models.html#numerical-vs-categorical",
    "title": "10-Logistic Models",
    "section": "Numerical vs Categorical",
    "text": "Numerical vs Categorical"
  },
  {
    "objectID": "slides/10_log_models.html#logistic-model",
    "href": "slides/10_log_models.html#logistic-model",
    "title": "10-Logistic Models",
    "section": "Logistic Model",
    "text": "Logistic Model\n\nm1&lt;-glm(sex~body_mass_g,family= \"binomial\",data = penguins)\nsummary(m1)\n\n\nCall:\nglm(formula = sex ~ body_mass_g, family = \"binomial\", data = penguins)\n\nCoefficients:\n              Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept) -5.1625416  0.7243906  -7.127 1.03e-12 ***\nbody_mass_g  0.0012398  0.0001727   7.177 7.10e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 461.61  on 332  degrees of freedom\nResidual deviance: 396.64  on 331  degrees of freedom\n  (11 observations deleted due to missingness)\nAIC: 400.64\n\nNumber of Fisher Scoring iterations: 4"
  },
  {
    "objectID": "slides/10_log_models.html#understanding-the-outputs",
    "href": "slides/10_log_models.html#understanding-the-outputs",
    "title": "10-Logistic Models",
    "section": "Understanding the outputs",
    "text": "Understanding the outputs\n\nsummary(m1)\n\n\nCall:\nglm(formula = sex ~ body_mass_g, family = \"binomial\", data = penguins)\n\nCoefficients:\n              Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept) -5.1625416  0.7243906  -7.127 1.03e-12 ***\nbody_mass_g  0.0012398  0.0001727   7.177 7.10e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 461.61  on 332  degrees of freedom\nResidual deviance: 396.64  on 331  degrees of freedom\n  (11 observations deleted due to missingness)\nAIC: 400.64\n\nNumber of Fisher Scoring iterations: 4"
  },
  {
    "objectID": "slides/10_log_models.html#formula",
    "href": "slides/10_log_models.html#formula",
    "title": "10-Logistic Models",
    "section": "Formula",
    "text": "Formula\nCall:\nglm(formula = sex ~ body_mass_g, family = “binomial”, data = penguins)"
  },
  {
    "objectID": "slides/10_log_models.html#coefficients",
    "href": "slides/10_log_models.html#coefficients",
    "title": "10-Logistic Models",
    "section": "Coefficients",
    "text": "Coefficients\n\n\n\nCall:\nglm(formula = sex ~ body_mass_g, family = \"binomial\", data = penguins)\n\nCoefficients:\n              Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept) -5.1625416  0.7243906  -7.127 1.03e-12 ***\nbody_mass_g  0.0012398  0.0001727   7.177 7.10e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 461.61  on 332  degrees of freedom\nResidual deviance: 396.64  on 331  degrees of freedom\n  (11 observations deleted due to missingness)\nAIC: 400.64\n\nNumber of Fisher Scoring iterations: 4"
  },
  {
    "objectID": "slides/10_log_models.html#coefficients-1",
    "href": "slides/10_log_models.html#coefficients-1",
    "title": "10-Logistic Models",
    "section": "Coefficients",
    "text": "Coefficients\nsex = -5.1625+0.0012*body mass\n\nif a penguin weights 0, than it has a negative probability of having a sex (meaningless)\nthe likelihood of being “male” increases by a factor of 0.0012 for each gram (g) of increase in weight."
  },
  {
    "objectID": "slides/10_log_models.html#deviance",
    "href": "slides/10_log_models.html#deviance",
    "title": "10-Logistic Models",
    "section": "Deviance",
    "text": "Deviance\n\n\n\nCall:\nglm(formula = sex ~ body_mass_g, family = \"binomial\", data = penguins)\n\nCoefficients:\n              Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept) -5.1625416  0.7243906  -7.127 1.03e-12 ***\nbody_mass_g  0.0012398  0.0001727   7.177 7.10e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 461.61  on 332  degrees of freedom\nResidual deviance: 396.64  on 331  degrees of freedom\n  (11 observations deleted due to missingness)\nAIC: 400.64\n\nNumber of Fisher Scoring iterations: 4"
  },
  {
    "objectID": "slides/10_log_models.html#deviance-pseudo-r²",
    "href": "slides/10_log_models.html#deviance-pseudo-r²",
    "title": "10-Logistic Models",
    "section": "Deviance & Pseudo-R²",
    "text": "Deviance & Pseudo-R²\n\nnull&lt;-m1$null.deviance/-2\nmodel&lt;-m1$deviance/-2\n(null-model)/null\n\n[1] 0.1407346\n\n\nThis is the overall effect size of our model\n\nNot very high"
  },
  {
    "objectID": "slides/10_log_models.html#logistic-models-for-frequency-data",
    "href": "slides/10_log_models.html#logistic-models-for-frequency-data",
    "title": "10-Logistic Models",
    "section": "Logistic Models for frequency data",
    "text": "Logistic Models for frequency data\n\n\n\nCall:\nglm(formula = sex ~ ., family = \"binomial\", data = penguins)\n\nCoefficients:\n                    Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)       310.553424 632.100857   0.491  0.62321    \nspeciesChinstrap   -7.624848   1.714564  -4.447 8.70e-06 ***\nspeciesGentoo      -8.766260   2.679151  -3.272  0.00107 ** \nislandDream         0.394305   0.817853   0.482  0.62972    \nislandTorgersen    -0.513102   0.849231  -0.604  0.54571    \nbill_length_mm      0.627014   0.134709   4.655 3.25e-06 ***\nbill_depth_mm       1.613122   0.338498   4.766 1.88e-06 ***\nflipper_length_mm   0.037682   0.051547   0.731  0.46476    \nbody_mass_g         0.005717   0.001090   5.244 1.58e-07 ***\nyear               -0.195493   0.316257  -0.618  0.53648    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 461.61  on 332  degrees of freedom\nResidual deviance: 125.66  on 323  degrees of freedom\n  (11 observations deleted due to missingness)\nAIC: 145.66\n\nNumber of Fisher Scoring iterations: 7"
  },
  {
    "objectID": "slides/10_log_models.html#deviance-pseudo-r²-1",
    "href": "slides/10_log_models.html#deviance-pseudo-r²-1",
    "title": "10-Logistic Models",
    "section": "Deviance & Pseudo-R²",
    "text": "Deviance & Pseudo-R²\n\nnull2&lt;-m2$null.deviance/-2\nmodel2&lt;-m2$deviance/-2\n(null2-model2)/null2\n\n[1] 0.7277702\n\n\nThis is the overall effect size of our model\n\nFair enough"
  },
  {
    "objectID": "slides/10_log_models.html#final-model",
    "href": "slides/10_log_models.html#final-model",
    "title": "10-Logistic Models",
    "section": "Final Model",
    "text": "Final Model\n\nm3&lt;-glm(sex~bill_length_mm+\n          bill_depth_mm+\n          body_mass_g, \n        family = \"binomial\", \n        data=penguins)\nsummary(m3)\n\n\nCall:\nglm(formula = sex ~ bill_length_mm + bill_depth_mm + body_mass_g, \n    family = \"binomial\", data = penguins)\n\nCoefficients:\n                 Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)    -6.056e+01  7.081e+00  -8.552  &lt; 2e-16 ***\nbill_length_mm  9.151e-02  4.416e-02   2.072   0.0382 *  \nbill_depth_mm   2.063e+00  2.469e-01   8.356  &lt; 2e-16 ***\nbody_mass_g     5.061e-03  6.348e-04   7.971 1.57e-15 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 461.61  on 332  degrees of freedom\nResidual deviance: 159.89  on 329  degrees of freedom\n  (11 observations deleted due to missingness)\nAIC: 167.89\n\nNumber of Fisher Scoring iterations: 7"
  },
  {
    "objectID": "slides/10_log_models.html#deviance-pseudo-r²-2",
    "href": "slides/10_log_models.html#deviance-pseudo-r²-2",
    "title": "10-Logistic Models",
    "section": "Deviance & Pseudo-R²",
    "text": "Deviance & Pseudo-R²\n\nnull3&lt;-m3$null.deviance/-2\nmodel3&lt;-m3$deviance/-2\n(null3-model3)/null3\n\n[1] 0.6536294\n\n\nThis is the overall effect size of our model\n\nStill fair enough"
  },
  {
    "objectID": "slides/10_log_models.html#odds-ratio",
    "href": "slides/10_log_models.html#odds-ratio",
    "title": "10-Logistic Models",
    "section": "Odds ratio",
    "text": "Odds ratio"
  },
  {
    "objectID": "slides/10_log_models.html#example-1---penguins-sex",
    "href": "slides/10_log_models.html#example-1---penguins-sex",
    "title": "10-Logistic Models",
    "section": "Example 1 - Penguin’s sex",
    "text": "Example 1 - Penguin’s sex\nsex = -5.1625+0.0012*body mass\n\nif a penguin weights 0, than it has a negative probability of having a sex (meaningless)\nthe likelihood of being “male” increases by a factor of 0.0012 for each gram (g) of increase in weight."
  },
  {
    "objectID": "slides/10_log_models.html#example-1---penguins-sex-1",
    "href": "slides/10_log_models.html#example-1---penguins-sex-1",
    "title": "10-Logistic Models",
    "section": "Example 1 - Penguin’s sex",
    "text": "Example 1 - Penguin’s sex\n\npenguins %&gt;% \n  mutate(size=ifelse(body_mass_g&gt;4202, \"large\", \"small\"))-&gt;penguins2\n\n  xtabs(~size+sex, data=penguins2)\n\n       sex\nsize    female male\n  large     53   92\n  small    112   76\n\n\n\n(53/92)\n\n[1] 0.576087\n\n(112/76)\n\n[1] 1.473684\n\n(53/92)/(112/76)\n\n[1] 0.3909161\n\n\nCheck this video for a great explanation on logs ratio"
  },
  {
    "objectID": "slides/10_log_models.html#modeling-probabilities",
    "href": "slides/10_log_models.html#modeling-probabilities",
    "title": "10-Logistic Models",
    "section": "Modeling probabilities",
    "text": "Modeling probabilities"
  },
  {
    "objectID": "slides/10_log_models.html#review",
    "href": "slides/10_log_models.html#review",
    "title": "10-Logistic Models",
    "section": "Review",
    "text": "Review\n\nSeparate variables into meaningful groups\nCalculate odds and probabilities\nModel the likelihood of an “event”"
  },
  {
    "objectID": "slides/10_log_models.html#end-of-class-da",
    "href": "slides/10_log_models.html#end-of-class-da",
    "title": "10-Logistic Models",
    "section": "End of Class DA",
    "text": "End of Class DA\n\n\n\n\nResearch Methods & Data Analysis"
  },
  {
    "objectID": "slides/5.1_hypo_deduc.html#you-should-know-today",
    "href": "slides/5.1_hypo_deduc.html#you-should-know-today",
    "title": "5.1-Hypothetico-Deductive Reasoning",
    "section": "You should know today:",
    "text": "You should know today:\n\nUnderstand the basics of the logic of scientific thinking\nUse this logic to address you research\nRelate: questions, hypotheses & prediction"
  },
  {
    "objectID": "slides/5.1_hypo_deduc.html#how-science-works",
    "href": "slides/5.1_hypo_deduc.html#how-science-works",
    "title": "5.1-Hypothetico-Deductive Reasoning",
    "section": "How science works?",
    "text": "How science works?"
  },
  {
    "objectID": "slides/5.1_hypo_deduc.html#get-used-to-a-workflow",
    "href": "slides/5.1_hypo_deduc.html#get-used-to-a-workflow",
    "title": "5.1-Hypothetico-Deductive Reasoning",
    "section": "Get used to a workflow",
    "text": "Get used to a workflow\n\n\nQuestion: How can climate location affect sexual dimorphism in penguins?\nHypothesis: Colder temperature leads to larger bodies thus reducing dimorphism\nPrediction: Penguins in colder island have similar body measures"
  },
  {
    "objectID": "slides/5.1_hypo_deduc.html#lets-check-it-out",
    "href": "slides/5.1_hypo_deduc.html#lets-check-it-out",
    "title": "5.1-Hypothetico-Deductive Reasoning",
    "section": "Let’s check it out",
    "text": "Let’s check it out"
  },
  {
    "objectID": "slides/5.1_hypo_deduc.html#your-turn",
    "href": "slides/5.1_hypo_deduc.html#your-turn",
    "title": "5.1-Hypothetico-Deductive Reasoning",
    "section": "Your turn",
    "text": "Your turn\n\nMake a question\nCreate a hypothesis\nDraw a prediction\n\n\n\n\n−+\n02:00"
  },
  {
    "objectID": "slides/5.1_hypo_deduc.html#common-errors",
    "href": "slides/5.1_hypo_deduc.html#common-errors",
    "title": "5.1-Hypothetico-Deductive Reasoning",
    "section": "Common errors",
    "text": "Common errors\n\n\n\n\n\n“I have so many data and what to see what comes out of it”\n“I still don’t have a clear hypothesis or prediction but I started collecting my data”\n“My research doesn’t need a hypothesis”"
  },
  {
    "objectID": "slides/5.1_hypo_deduc.html#workflow-from-wikipedia",
    "href": "slides/5.1_hypo_deduc.html#workflow-from-wikipedia",
    "title": "5.1-Hypothetico-Deductive Reasoning",
    "section": "Workflow (from wikipedia)",
    "text": "Workflow (from wikipedia)\n\n\n1- Based on observation, previous collected data and literature, find a knowledge gap\n2- Form a hypothesis that explains the phenomenon\n3- Deduce some expected patterns, assuming your hypotheses is true\n4- Design a experiment to test your hypothesis"
  },
  {
    "objectID": "slides/5.1_hypo_deduc.html#section",
    "href": "slides/5.1_hypo_deduc.html#section",
    "title": "5.1-Hypothetico-Deductive Reasoning",
    "section": "",
    "text": "source: Crnkovic and Crnkovic 2014"
  },
  {
    "objectID": "slides/5.1_hypo_deduc.html#knowledge-vs-data",
    "href": "slides/5.1_hypo_deduc.html#knowledge-vs-data",
    "title": "5.1-Hypothetico-Deductive Reasoning",
    "section": "Knowledge vs Data",
    "text": "Knowledge vs Data\n\n\n\n\n\n\nsource: Kalinowski & Pelakh 2023"
  },
  {
    "objectID": "slides/5.1_hypo_deduc.html#how-science-advances",
    "href": "slides/5.1_hypo_deduc.html#how-science-advances",
    "title": "5.1-Hypothetico-Deductive Reasoning",
    "section": "How science advances?",
    "text": "How science advances?"
  },
  {
    "objectID": "slides/5.1_hypo_deduc.html#are-you-doing-science-right",
    "href": "slides/5.1_hypo_deduc.html#are-you-doing-science-right",
    "title": "5.1-Hypothetico-Deductive Reasoning",
    "section": "Are you doing science right?",
    "text": "Are you doing science right?\n\n\n\n\nResearch Methods & Data Analysis"
  },
  {
    "objectID": "slides/11_nonlinear.html#you-should-know-today",
    "href": "slides/11_nonlinear.html#you-should-know-today",
    "title": "11-Non-linear Models",
    "section": "You should know today:",
    "text": "You should know today:\n\nKnow when to use linear models\nUnderstand outputs of LM\nHow to prepare for LM\nMultiple linear models"
  },
  {
    "objectID": "slides/11_nonlinear.html#types-of-variables-review",
    "href": "slides/11_nonlinear.html#types-of-variables-review",
    "title": "11-Non-linear Models",
    "section": "Types of variables (review)",
    "text": "Types of variables (review)\n\n\nCategorical\n\n\nNumerical"
  },
  {
    "objectID": "slides/11_nonlinear.html#back-to-the-toolbox",
    "href": "slides/11_nonlinear.html#back-to-the-toolbox",
    "title": "11-Non-linear Models",
    "section": "Back to the toolbox",
    "text": "Back to the toolbox"
  },
  {
    "objectID": "slides/11_nonlinear.html#numerical-vs-numericalcategorical",
    "href": "slides/11_nonlinear.html#numerical-vs-numericalcategorical",
    "title": "11-Non-linear Models",
    "section": "Numerical vs Numerical/Categorical",
    "text": "Numerical vs Numerical/Categorical"
  },
  {
    "objectID": "slides/11_nonlinear.html#logistic-model",
    "href": "slides/11_nonlinear.html#logistic-model",
    "title": "11-Non-linear Models",
    "section": "Logistic Model",
    "text": "Logistic Model\n\nm1&lt;-glm(sex~body_mass_g,family= \"binomial\",data = penguins)\nsummary(m1)\n\n\nCall:\nglm(formula = sex ~ body_mass_g, family = \"binomial\", data = penguins)\n\nCoefficients:\n              Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept) -5.1625416  0.7243906  -7.127 1.03e-12 ***\nbody_mass_g  0.0012398  0.0001727   7.177 7.10e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 461.61  on 332  degrees of freedom\nResidual deviance: 396.64  on 331  degrees of freedom\n  (11 observations deleted due to missingness)\nAIC: 400.64\n\nNumber of Fisher Scoring iterations: 4"
  },
  {
    "objectID": "slides/11_nonlinear.html#understanding-the-outputs",
    "href": "slides/11_nonlinear.html#understanding-the-outputs",
    "title": "11-Non-linear Models",
    "section": "Understanding the outputs",
    "text": "Understanding the outputs\n\nsummary(m1)\n\n\nCall:\nglm(formula = sex ~ body_mass_g, family = \"binomial\", data = penguins)\n\nCoefficients:\n              Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept) -5.1625416  0.7243906  -7.127 1.03e-12 ***\nbody_mass_g  0.0012398  0.0001727   7.177 7.10e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 461.61  on 332  degrees of freedom\nResidual deviance: 396.64  on 331  degrees of freedom\n  (11 observations deleted due to missingness)\nAIC: 400.64\n\nNumber of Fisher Scoring iterations: 4"
  },
  {
    "objectID": "slides/11_nonlinear.html#formula-of-general-linear-models",
    "href": "slides/11_nonlinear.html#formula-of-general-linear-models",
    "title": "11-Non-linear Models",
    "section": "Formula of General Linear Models",
    "text": "Formula of General Linear Models\nCall:\nglm(formula = sex ~ body_mass_g, family = “binomial”, data = penguins)"
  },
  {
    "objectID": "slides/11_nonlinear.html#distribution-family",
    "href": "slides/11_nonlinear.html#distribution-family",
    "title": "11-Non-linear Models",
    "section": "Distribution Family",
    "text": "Distribution Family\nCall:\nglm(formula = sex ~ body_mass_g, family = “?????”, data = penguins)"
  },
  {
    "objectID": "slides/11_nonlinear.html#generalized-linear-models",
    "href": "slides/11_nonlinear.html#generalized-linear-models",
    "title": "11-Non-linear Models",
    "section": "Generalized Linear Models",
    "text": "Generalized Linear Models\n\nRange of Y is restricted (e.g. counts, proportions, binary, duration)\nEffects are no additive (interactions are present)\nVariance depends on th mean (larger mean =&gt; larger variance)\n\nGeneralized linear models specify a non-linear link function and variance function to allow for such things, while maintaining the simple interpretation of linear models."
  },
  {
    "objectID": "slides/11_nonlinear.html#visualisation",
    "href": "slides/11_nonlinear.html#visualisation",
    "title": "11-Non-linear Models",
    "section": "Visualisation",
    "text": "Visualisation\n\nlibrary(AER)    \nlibrary(tidyverse)\ndata(CASchools)\n\nCASchools %&gt;% \n  mutate(size=students/teachers) %&gt;% \n  mutate(score=(read+math)/2)-&gt;CASchools\nhead(CASchools)\n\n  district                          school  county grades students teachers\n1    75119              Sunol Glen Unified Alameda  KK-08      195    10.90\n2    61499            Manzanita Elementary   Butte  KK-08      240    11.15\n3    61549     Thermalito Union Elementary   Butte  KK-08     1550    82.90\n4    61457 Golden Feather Union Elementary   Butte  KK-08      243    14.00\n5    61523        Palermo Union Elementary   Butte  KK-08     1335    71.50\n6    62042         Burrel Union Elementary  Fresno  KK-08      137     6.40\n  calworks   lunch computer expenditure    income   english  read  math\n1   0.5102  2.0408       67    6384.911 22.690001  0.000000 691.6 690.0\n2  15.4167 47.9167      101    5099.381  9.824000  4.583333 660.5 661.9\n3  55.0323 76.3226      169    5501.955  8.978000 30.000002 636.3 650.9\n4  36.4754 77.0492       85    7101.831  8.978000  0.000000 651.9 643.5\n5  33.1086 78.4270      171    5235.988  9.080333 13.857677 641.8 639.9\n6  12.3188 86.9565       25    5580.147 10.415000 12.408759 605.7 605.4\n      size  score\n1 17.88991 690.80\n2 21.52466 661.20\n3 18.69723 643.60\n4 17.35714 647.70\n5 18.67133 640.85\n6 21.40625 605.55"
  },
  {
    "objectID": "slides/11_nonlinear.html#check-the-shape-of-the-correlation",
    "href": "slides/11_nonlinear.html#check-the-shape-of-the-correlation",
    "title": "11-Non-linear Models",
    "section": "Check the “shape” of the correlation",
    "text": "Check the “shape” of the correlation"
  },
  {
    "objectID": "slides/11_nonlinear.html#testing-a-linear-model",
    "href": "slides/11_nonlinear.html#testing-a-linear-model",
    "title": "11-Non-linear Models",
    "section": "Testing a linear model",
    "text": "Testing a linear model\n\n\n\nCall:\nlm(formula = score ~ income, data = CASchools)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-39.574  -8.803   0.603   9.032  32.530 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 625.3836     1.5324  408.11   &lt;2e-16 ***\nincome        1.8785     0.0905   20.76   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 13.39 on 418 degrees of freedom\nMultiple R-squared:  0.5076,    Adjusted R-squared:  0.5064 \nF-statistic: 430.8 on 1 and 418 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "slides/11_nonlinear.html#testing-a-quadratic-model",
    "href": "slides/11_nonlinear.html#testing-a-quadratic-model",
    "title": "11-Non-linear Models",
    "section": "Testing a quadratic model",
    "text": "Testing a quadratic model\n\n\n\nCall:\nlm(formula = score ~ income + I(income^2), data = CASchools)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-44.416  -9.048   0.440   8.347  31.639 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 607.30174    3.04622 199.362  &lt; 2e-16 ***\nincome        3.85099    0.30426  12.657  &lt; 2e-16 ***\nI(income^2)  -0.04231    0.00626  -6.758 4.71e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 12.72 on 417 degrees of freedom\nMultiple R-squared:  0.5562,    Adjusted R-squared:  0.554 \nF-statistic: 261.3 on 2 and 417 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "slides/11_nonlinear.html#visualising",
    "href": "slides/11_nonlinear.html#visualising",
    "title": "11-Non-linear Models",
    "section": "Visualising",
    "text": "Visualising"
  },
  {
    "objectID": "slides/11_nonlinear.html#comparing-models",
    "href": "slides/11_nonlinear.html#comparing-models",
    "title": "11-Non-linear Models",
    "section": "Comparing models",
    "text": "Comparing models\n\n\nAnalysis of Variance Table\n\nModel 1: score ~ income\nModel 2: score ~ income + I(income^2)\n  Res.Df   RSS Df Sum of Sq      F    Pr(&gt;F)    \n1    418 74905                                  \n2    417 67510  1    7394.9 45.677 4.713e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "slides/11_nonlinear.html#examples-of-quadratic-distribution",
    "href": "slides/11_nonlinear.html#examples-of-quadratic-distribution",
    "title": "11-Non-linear Models",
    "section": "Examples of quadratic distribution",
    "text": "Examples of quadratic distribution"
  },
  {
    "objectID": "slides/11_nonlinear.html#poisson-distributions",
    "href": "slides/11_nonlinear.html#poisson-distributions",
    "title": "11-Non-linear Models",
    "section": "Poisson distributions",
    "text": "Poisson distributions\n\n\n\n\n\\[\nλ=mean\n\\]\n\\[\nk = occurences\n\\]\n\\[\nprobability = {\\displaystyle {\\frac {\\lambda ^{k}e^{-\\lambda }}{k!}}.}\n\\]"
  },
  {
    "objectID": "slides/11_nonlinear.html#poisson-distributions-1",
    "href": "slides/11_nonlinear.html#poisson-distributions-1",
    "title": "11-Non-linear Models",
    "section": "Poisson distributions",
    "text": "Poisson distributions"
  },
  {
    "objectID": "slides/11_nonlinear.html#poisson-models",
    "href": "slides/11_nonlinear.html#poisson-models",
    "title": "11-Non-linear Models",
    "section": "Poisson Models",
    "text": "Poisson Models\n\n\n\nCall:\nglm(formula = breaks ~ wool + tension, family = poisson(link = \"log\"), \n    data = warpbreaks)\n\nCoefficients:\n            Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)  3.69196    0.04541  81.302  &lt; 2e-16 ***\nwoolB       -0.20599    0.05157  -3.994 6.49e-05 ***\ntensionM    -0.32132    0.06027  -5.332 9.73e-08 ***\ntensionH    -0.51849    0.06396  -8.107 5.21e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 297.37  on 53  degrees of freedom\nResidual deviance: 210.39  on 50  degrees of freedom\nAIC: 493.06\n\nNumber of Fisher Scoring iterations: 4"
  },
  {
    "objectID": "slides/11_nonlinear.html#interpreting-the-coefficients",
    "href": "slides/11_nonlinear.html#interpreting-the-coefficients",
    "title": "11-Non-linear Models",
    "section": "Interpreting the coefficients",
    "text": "Interpreting the coefficients\nIn the Poisson distribution formula, lambda (λ) is the mean number of events within a given interval of time or space\n\n\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n3.6919631\n0.04541069\n81.301626\n0.000000e+00\n\n\nwoolB\n-0.2059884\n0.05157117\n-3.994256\n6.489775e-05\n\n\ntensionM\n-0.3213204\n0.06026580\n-5.331721\n9.728642e-08\n\n\ntensionH\n-0.5184885\n0.06395944\n-8.106520\n5.209021e-16\n\n\n\n\n\n\n\n\\[\n\\lambda = e^{3.69-0.20x1-0.32x2-0.51x3}\n\\]\nNumber of breaks decreases by 0.81 when wool type changes from A to B"
  },
  {
    "objectID": "slides/11_nonlinear.html#poisson-models-predict",
    "href": "slides/11_nonlinear.html#poisson-models-predict",
    "title": "11-Non-linear Models",
    "section": "Poisson Models (predict)",
    "text": "Poisson Models (predict)\n\n\n       1 \n23.68056"
  },
  {
    "objectID": "slides/11_nonlinear.html#visulaising",
    "href": "slides/11_nonlinear.html#visulaising",
    "title": "11-Non-linear Models",
    "section": "Visulaising",
    "text": "Visulaising"
  },
  {
    "objectID": "slides/11_nonlinear.html#end-of-class-da",
    "href": "slides/11_nonlinear.html#end-of-class-da",
    "title": "11-Non-linear Models",
    "section": "End of Class DA",
    "text": "End of Class DA\n\n\n\n\nResearch Methods & Data Analysis"
  },
  {
    "objectID": "slides/08_corr_tests.html#you-should-know-today",
    "href": "slides/08_corr_tests.html#you-should-know-today",
    "title": "8-Correlation Tests",
    "section": "You should know today:",
    "text": "You should know today:\n\nKnow when to use correlation tests\nUnderstand covariances\nParametric nd non-parametric versions\nPearson’s and Spearman’s\nMultiple Correlations"
  },
  {
    "objectID": "slides/08_corr_tests.html#types-of-variables-review",
    "href": "slides/08_corr_tests.html#types-of-variables-review",
    "title": "8-Correlation Tests",
    "section": "Types of variables (review)",
    "text": "Types of variables (review)\n\n\nCategorical\n\n\nNumerical"
  },
  {
    "objectID": "slides/08_corr_tests.html#back-to-the-toolbox",
    "href": "slides/08_corr_tests.html#back-to-the-toolbox",
    "title": "8-Correlation Tests",
    "section": "Back to the toolbox",
    "text": "Back to the toolbox"
  },
  {
    "objectID": "slides/08_corr_tests.html#numerical-vs-numerical",
    "href": "slides/08_corr_tests.html#numerical-vs-numerical",
    "title": "8-Correlation Tests",
    "section": "Numerical vs Numerical",
    "text": "Numerical vs Numerical"
  },
  {
    "objectID": "slides/08_corr_tests.html#why-correlations",
    "href": "slides/08_corr_tests.html#why-correlations",
    "title": "8-Correlation Tests",
    "section": "Why correlations?",
    "text": "Why correlations?\n\nWhen you don’t expect effects\nWhen you can’t explain effects\nWhen you want to reduce dimensions of data"
  },
  {
    "objectID": "slides/08_corr_tests.html#is-it-logic-to-expect-an-effect",
    "href": "slides/08_corr_tests.html#is-it-logic-to-expect-an-effect",
    "title": "8-Correlation Tests",
    "section": "Is it logic to expect an effect?",
    "text": "Is it logic to expect an effect?"
  },
  {
    "objectID": "slides/08_corr_tests.html#is-it-logic-to-expect-an-effect-1",
    "href": "slides/08_corr_tests.html#is-it-logic-to-expect-an-effect-1",
    "title": "8-Correlation Tests",
    "section": "Is it logic to expect an effect?",
    "text": "Is it logic to expect an effect?"
  },
  {
    "objectID": "slides/08_corr_tests.html#pearsons-correlation",
    "href": "slides/08_corr_tests.html#pearsons-correlation",
    "title": "8-Correlation Tests",
    "section": "Pearson’s correlation",
    "text": "Pearson’s correlation\nAssumptions\n\nNormal distribution\n\n\ncor.test(mtcars$hp, mtcars$mpg)\n\n\n    Pearson's product-moment correlation\n\ndata:  mtcars$hp and mtcars$mpg\nt = -6.7424, df = 30, p-value = 1.788e-07\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.8852686 -0.5860994\nsample estimates:\n       cor \n-0.7761684"
  },
  {
    "objectID": "slides/08_corr_tests.html#spearmens-correlation",
    "href": "slides/08_corr_tests.html#spearmens-correlation",
    "title": "8-Correlation Tests",
    "section": "Spearmen’s correlation",
    "text": "Spearmen’s correlation\nAssumptions\n\nNon-Normal distribution\n\n\ncor.test(mtcars$hp, mtcars$mpg, method = \"spearman\")\n\n\n    Spearman's rank correlation rho\n\ndata:  mtcars$hp and mtcars$mpg\nS = 10337, p-value = 5.086e-12\nalternative hypothesis: true rho is not equal to 0\nsample estimates:\n       rho \n-0.8946646"
  },
  {
    "objectID": "slides/08_corr_tests.html#multiple-correlations",
    "href": "slides/08_corr_tests.html#multiple-correlations",
    "title": "8-Correlation Tests",
    "section": "Multiple correlations",
    "text": "Multiple correlations\n\nmtcars %&gt;% \n  select(mpg:qsec) %&gt;% \n  cor %&gt;% \n  round(.,2)-&gt;res\nres\n\n       mpg   cyl  disp    hp  drat    wt  qsec\nmpg   1.00 -0.85 -0.85 -0.78  0.68 -0.87  0.42\ncyl  -0.85  1.00  0.90  0.83 -0.70  0.78 -0.59\ndisp -0.85  0.90  1.00  0.79 -0.71  0.89 -0.43\nhp   -0.78  0.83  0.79  1.00 -0.45  0.66 -0.71\ndrat  0.68 -0.70 -0.71 -0.45  1.00 -0.71  0.09\nwt   -0.87  0.78  0.89  0.66 -0.71  1.00 -0.17\nqsec  0.42 -0.59 -0.43 -0.71  0.09 -0.17  1.00"
  },
  {
    "objectID": "slides/08_corr_tests.html#magnitude-of-correlations",
    "href": "slides/08_corr_tests.html#magnitude-of-correlations",
    "title": "8-Correlation Tests",
    "section": "Magnitude of correlations",
    "text": "Magnitude of correlations"
  },
  {
    "objectID": "slides/08_corr_tests.html#visualizing",
    "href": "slides/08_corr_tests.html#visualizing",
    "title": "8-Correlation Tests",
    "section": "Visualizing",
    "text": "Visualizing\n\nif (!require(\"corrplot\")) install.packages(\"corrplot\")\n\ncorrplot(res, type = \"upper\", order = \"hclust\", \n         tl.col = \"black\", tl.srt = 45)"
  },
  {
    "objectID": "slides/08_corr_tests.html#checking-p-values",
    "href": "slides/08_corr_tests.html#checking-p-values",
    "title": "8-Correlation Tests",
    "section": "Checking p-values",
    "text": "Checking p-values\n\nif (!require(\"Hmisc\")) install.packages(\"Hmisc\")\nres2&lt;-rcorr(res, type = c(\"pearson\", \"spearman\"))\nres2\n\n       mpg   cyl  disp    hp  drat    wt  qsec\nmpg   1.00 -0.99 -1.00 -0.97  0.95 -0.99  0.78\ncyl  -0.99  1.00  0.99  0.98 -0.93  0.97 -0.84\ndisp -1.00  0.99  1.00  0.97 -0.96  0.99 -0.79\nhp   -0.97  0.98  0.97  1.00 -0.86  0.92 -0.91\ndrat  0.95 -0.93 -0.96 -0.86  1.00 -0.97  0.60\nwt   -0.99  0.97  0.99  0.92 -0.97  1.00 -0.69\nqsec  0.78 -0.84 -0.79 -0.91  0.60 -0.69  1.00\n\nn= 7 \n\n\nP\n     mpg    cyl    disp   hp     drat   wt     qsec  \nmpg         0.0000 0.0000 0.0004 0.0011 0.0000 0.0377\ncyl  0.0000        0.0000 0.0000 0.0020 0.0004 0.0178\ndisp 0.0000 0.0000        0.0004 0.0007 0.0000 0.0350\nhp   0.0004 0.0000 0.0004        0.0126 0.0033 0.0043\ndrat 0.0011 0.0020 0.0007 0.0126        0.0002 0.1519\nwt   0.0000 0.0004 0.0000 0.0033 0.0002        0.0878\nqsec 0.0377 0.0178 0.0350 0.0043 0.1519 0.0878"
  },
  {
    "objectID": "slides/08_corr_tests.html#more-ways-to-evaluate-correlations",
    "href": "slides/08_corr_tests.html#more-ways-to-evaluate-correlations",
    "title": "8-Correlation Tests",
    "section": "More ways to evaluate correlations",
    "text": "More ways to evaluate correlations\n\ndata &lt;- iris[, 1:4] # Numerical variables\ngroups &lt;- iris[, 5] # Factor variable (groups)"
  },
  {
    "objectID": "slides/08_corr_tests.html#more-ways-to-evaluate-correlations-1",
    "href": "slides/08_corr_tests.html#more-ways-to-evaluate-correlations-1",
    "title": "8-Correlation Tests",
    "section": "More ways to evaluate correlations",
    "text": "More ways to evaluate correlations"
  },
  {
    "objectID": "slides/08_corr_tests.html#more-ways-to-evaluate-correlations-2",
    "href": "slides/08_corr_tests.html#more-ways-to-evaluate-correlations-2",
    "title": "8-Correlation Tests",
    "section": "More ways to evaluate correlations",
    "text": "More ways to evaluate correlations\n\nlibrary(psych)\n\ncorPlot(data, cex = 1.2)"
  },
  {
    "objectID": "slides/08_corr_tests.html#more-ways-to-evaluate-correlations-3",
    "href": "slides/08_corr_tests.html#more-ways-to-evaluate-correlations-3",
    "title": "8-Correlation Tests",
    "section": "More ways to evaluate correlations",
    "text": "More ways to evaluate correlations\n\npar(mfrow = c(2, 3))\n\n# Circles\ncorrplot(cor(data), method = \"circle\",\n        title = \"method = 'circle'\",\n        tl.pos = \"n\", mar = c(2, 1, 3, 1)) \n# Squares \ncorrplot(cor(data), method = \"square\",\n        title = \"method = 'square'\",\n        tl.pos = \"n\", mar = c(2, 1, 3, 1)) \n# Ellipses\ncorrplot(cor(data), method = \"ellipse\",\n         title = \"method = 'ellipse'\",\n         tl.pos = \"n\", mar = c(2, 1, 3, 1)) \n# Correlations\ncorrplot(cor(data), method = \"number\",\n         title = \"method = 'number'\",\n         tl.pos = \"n\", mar = c(2, 1, 3, 1)) \n# Pie charts\ncorrplot(cor(data), method = \"pie\",\n         title = \"method = 'pie'\",\n         tl.pos = \"n\", mar = c(2, 1, 3, 1)) \n# Colors\ncorrplot(cor(data), method = \"color\",\n         title = \"method = 'color'\",\n         tl.pos = \"n\", mar = c(2, 1, 3, 1))"
  },
  {
    "objectID": "slides/08_corr_tests.html#more-ways-to-evaluate-correlations-3-output",
    "href": "slides/08_corr_tests.html#more-ways-to-evaluate-correlations-3-output",
    "title": "8-Correlation Tests",
    "section": "More ways to evaluate correlations",
    "text": "More ways to evaluate correlations"
  },
  {
    "objectID": "slides/08_corr_tests.html#using-ggplotggally",
    "href": "slides/08_corr_tests.html#using-ggplotggally",
    "title": "8-Correlation Tests",
    "section": "Using ggplot+GGally",
    "text": "Using ggplot+GGally\n\nif (!require(\"GGally\")) install.packages(\"GGally\")\nlibrary(GGally)\n\nggpairs(penguins[,c(1,3:7)], ggplot2::aes(colour = species))"
  },
  {
    "objectID": "slides/08_corr_tests.html#using-ggplotggally-output",
    "href": "slides/08_corr_tests.html#using-ggplotggally-output",
    "title": "8-Correlation Tests",
    "section": "Using ggplot+GGally",
    "text": "Using ggplot+GGally"
  },
  {
    "objectID": "slides/08_corr_tests.html#correlations-are-powerful",
    "href": "slides/08_corr_tests.html#correlations-are-powerful",
    "title": "8-Correlation Tests",
    "section": "Correlations are powerful",
    "text": "Correlations are powerful\n\nDescribe data structure\nHelps to understand complex phenomena"
  },
  {
    "objectID": "slides/08_corr_tests.html#lets-examine",
    "href": "slides/08_corr_tests.html#lets-examine",
    "title": "8-Correlation Tests",
    "section": "Let’s examine",
    "text": "Let’s examine"
  },
  {
    "objectID": "slides/08_corr_tests.html#more-examples",
    "href": "slides/08_corr_tests.html#more-examples",
    "title": "8-Correlation Tests",
    "section": "More examples",
    "text": "More examples"
  },
  {
    "objectID": "slides/08_corr_tests.html#correlation-vs-causation",
    "href": "slides/08_corr_tests.html#correlation-vs-causation",
    "title": "8-Correlation Tests",
    "section": "Correlation vs Causation",
    "text": "Correlation vs Causation"
  },
  {
    "objectID": "slides/08_corr_tests.html#correlation-vs-causation-1",
    "href": "slides/08_corr_tests.html#correlation-vs-causation-1",
    "title": "8-Correlation Tests",
    "section": "Correlation vs Causation",
    "text": "Correlation vs Causation"
  },
  {
    "objectID": "slides/08_corr_tests.html#r-values-are-not-slopes",
    "href": "slides/08_corr_tests.html#r-values-are-not-slopes",
    "title": "8-Correlation Tests",
    "section": "r values are not slopes",
    "text": "r values are not slopes"
  },
  {
    "objectID": "slides/08_corr_tests.html#inappropriate-for-non-linear-correlations",
    "href": "slides/08_corr_tests.html#inappropriate-for-non-linear-correlations",
    "title": "8-Correlation Tests",
    "section": "Inappropriate for non-linear correlations",
    "text": "Inappropriate for non-linear correlations"
  },
  {
    "objectID": "slides/08_corr_tests.html#careful-with-outliers",
    "href": "slides/08_corr_tests.html#careful-with-outliers",
    "title": "8-Correlation Tests",
    "section": "Careful with outliers",
    "text": "Careful with outliers"
  },
  {
    "objectID": "slides/08_corr_tests.html#end-of-da-class",
    "href": "slides/08_corr_tests.html#end-of-da-class",
    "title": "8-Correlation Tests",
    "section": "End of DA class",
    "text": "End of DA class\n\n\n\n\nResearch Methods & Data Analysis"
  },
  {
    "objectID": "slides/06__freq_tests.html#you-should-know-today",
    "href": "slides/06__freq_tests.html#you-should-know-today",
    "title": "5-Freqency Tests",
    "section": "You should know today:",
    "text": "You should know today:\n\nKnow when to use frequency tests\nWork with tables and graphs\nUnderstand the logic of independence between variables"
  },
  {
    "objectID": "slides/06__freq_tests.html#types-of-variables-review",
    "href": "slides/06__freq_tests.html#types-of-variables-review",
    "title": "5-Freqency Tests",
    "section": "Types of variables (review)",
    "text": "Types of variables (review)\n\n\nCategorical\n\n\nNumerical"
  },
  {
    "objectID": "slides/06__freq_tests.html#back-to-the-toolbox",
    "href": "slides/06__freq_tests.html#back-to-the-toolbox",
    "title": "5-Freqency Tests",
    "section": "Back to the toolbox",
    "text": "Back to the toolbox"
  },
  {
    "objectID": "slides/06__freq_tests.html#lets-imagine-ladybirds",
    "href": "slides/06__freq_tests.html#lets-imagine-ladybirds",
    "title": "5-Freqency Tests",
    "section": "Let’s imagine Ladybirds",
    "text": "Let’s imagine Ladybirds\n\nLadybirdsCodeDataTable 1Table 2\n\n\n\n\n\n\n\n\n\n\nladybirds &lt;- tribble(\n  ~Habitat, ~Site, ~Colour, ~Number,\n  \"Rural\", \"R1\", \"Black\", 10,\n  \"Rural\", \"R2\", \"Black\", 3,\n  \"Rural\", \"R3\", \"Black\", 4,\n  \"Rural\", \"R4\", \"Black\", 7,\n  \"Rural\", \"R5\", \"Black\", 6,\n  \"Rural\", \"R1\", \"Red\", 15,\n  \"Rural\", \"R2\", \"Red\", 18,\n  \"Rural\", \"R3\", \"Red\", 9,\n  \"Rural\", \"R4\", \"Red\", 12,\n  \"Rural\", \"R5\", \"Red\", 16,\n  \"Industrial\", \"U1\", \"Black\", 32,\n  \"Industrial\", \"U2\", \"Black\", 25,\n  \"Industrial\", \"U3\", \"Black\", 25,\n  \"Industrial\", \"U4\", \"Black\", 17,\n  \"Industrial\", \"U5\", \"Black\", 16,\n  \"Industrial\", \"U1\", \"Red\", 17,\n  \"Industrial\", \"U2\", \"Red\", 23,\n  \"Industrial\", \"U3\", \"Red\", 21,\n  \"Industrial\", \"U4\", \"Red\", 9,\n  \"Industrial\", \"U5\",  \n \"Red\", 15\n)\n\n\n\n\n\n# A tibble: 20 × 4\n   Habitat    Site  Colour Number\n   &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;   &lt;dbl&gt;\n 1 Rural      R1    Black      10\n 2 Rural      R2    Black       3\n 3 Rural      R3    Black       4\n 4 Rural      R4    Black       7\n 5 Rural      R5    Black       6\n 6 Rural      R1    Red        15\n 7 Rural      R2    Red        18\n 8 Rural      R3    Red         9\n 9 Rural      R4    Red        12\n10 Rural      R5    Red        16\n11 Industrial U1    Black      32\n12 Industrial U2    Black      25\n13 Industrial U3    Black      25\n14 Industrial U4    Black      17\n15 Industrial U5    Black      16\n16 Industrial U1    Red        17\n17 Industrial U2    Red        23\n18 Industrial U3    Red        21\n19 Industrial U4    Red         9\n20 Industrial U5    Red        15\n\n\n\n\n\n\nladybirds%&gt;% \n  group_by(Habitat, Colour) %&gt;% \n  summarize(count = sum(Number)) |&gt; \n  kable()\n\n\n\n\n\nHabitat\nColour\ncount\n\n\n\n\nIndustrial\nBlack\n115\n\n\nIndustrial\nRed\n85\n\n\nRural\nBlack\n30\n\n\nRural\nRed\n70\n\n\n\n\n\n\n\n\n\nladybirds%&gt;% \n  group_by(Habitat, Colour) %&gt;% \n  summarize(count = sum(Number)) %&gt;% \n  spread(Colour, count, fill = 0) |&gt; \n  kable()\n\n\n\n\n\nHabitat\nBlack\nRed\n\n\n\n\nIndustrial\n115\n85\n\n\nRural\n30\n70"
  },
  {
    "objectID": "slides/06__freq_tests.html#is-there-an-association-between-colour-and-habitat",
    "href": "slides/06__freq_tests.html#is-there-an-association-between-colour-and-habitat",
    "title": "5-Freqency Tests",
    "section": "Is there an association between colour and habitat?",
    "text": "Is there an association between colour and habitat?"
  },
  {
    "objectID": "slides/06__freq_tests.html#tweaking-tables",
    "href": "slides/06__freq_tests.html#tweaking-tables",
    "title": "5-Freqency Tests",
    "section": "Tweaking tables",
    "text": "Tweaking tables\n\nCodeCode 2Code 3\n\n\n\n\nladybirds |&gt; \n  group_by(Habitat, Colour) |&gt; \n  summarize(count = sum(Number)) |&gt; \n  mutate(prop=count/sum(count)) |&gt;   # our new proportion variable\n  kable()\n\n\n\n\n\nHabitat\nColour\ncount\nprop\n\n\n\n\nIndustrial\nBlack\n115\n0.575\n\n\nIndustrial\nRed\n85\n0.425\n\n\nRural\nBlack\n30\n0.300\n\n\nRural\nRed\n70\n0.700\n\n\n\n\n\n\n\n\n\nladybirds |&gt; \n  group_by(Habitat, Colour) |&gt; \n  summarize(count = sum(Number)) |&gt; \n  mutate(prop=count/sum(count)) |&gt;   # our new proportion variable\n  select(Habitat, Colour, prop) |&gt; \n  spread(Habitat, prop) |&gt; \n  kable()\n\n\n\n\n\nColour\nIndustrial\nRural\n\n\n\n\nBlack\n0.575\n0.3\n\n\nRed\n0.425\n0.7\n\n\n\n\n\n\n\n\nlibrary(janitor)\nladybirds |&gt; \n  group_by(Habitat, Colour) %&gt;% \n  summarize(count = sum(Number)) %&gt;% \n  spread(Colour, count, fill = 0)|&gt; \n  adorn_totals(c(\"row\", \"col\")) |&gt; \n  kable()\n\n\n\n\nHabitat\nBlack\nRed\nTotal\n\n\n\n\nIndustrial\n115\n85\n200\n\n\nRural\n30\n70\n100\n\n\nTotal\n145\n155\n300"
  },
  {
    "objectID": "slides/06__freq_tests.html#proportions",
    "href": "slides/06__freq_tests.html#proportions",
    "title": "5-Freqency Tests",
    "section": "Proportions",
    "text": "Proportions\n\nTotalRowsColumns\n\n\n\nladybirds |&gt; \n  group_by(Habitat, Colour) %&gt;% \n  summarize(count = sum(Number)) %&gt;% \n  spread(Colour, count, fill = 0) |&gt; \n  column_to_rownames(\"Habitat\") |&gt; \n  proportions() |&gt; \n  kable()\n\n\n\n\n\nBlack\nRed\n\n\n\n\nIndustrial\n0.3833333\n0.2833333\n\n\nRural\n0.1000000\n0.2333333\n\n\n\n\n\n\n\n\nladybirds |&gt; \n  group_by(Habitat, Colour) %&gt;% \n  summarise(count = sum(Number)) %&gt;% \n  spread(Colour, count, fill = 0) |&gt; \n  column_to_rownames(\"Habitat\") |&gt; \n  as.matrix()-&gt;t\n  proportions(t,1) |&gt; \n    kable()\n\n\n\n\n\nBlack\nRed\n\n\n\n\nIndustrial\n0.575\n0.425\n\n\nRural\n0.300\n0.700\n\n\n\n\n\n\n\n\nladybirds |&gt; \n  group_by(Habitat, Colour) %&gt;% \n  summarise(count = sum(Number)) %&gt;% \n  spread(Colour, count, fill = 0) |&gt; \n  column_to_rownames(\"Habitat\") |&gt; \n  as.matrix()-&gt;t\n  proportions(t,2) |&gt; \n    kable()\n\n\n\n\n\nBlack\nRed\n\n\n\n\nIndustrial\n0.7931034\n0.5483871\n\n\nRural\n0.2068966\n0.4516129"
  },
  {
    "objectID": "slides/06__freq_tests.html#all-at-once",
    "href": "slides/06__freq_tests.html#all-at-once",
    "title": "5-Freqency Tests",
    "section": "All at once",
    "text": "All at once\n\nCrossTable(t)\n\n\n \n   Cell Contents\n|-------------------------|\n|                       N |\n| Chi-square contribution |\n|           N / Row Total |\n|           N / Col Total |\n|         N / Table Total |\n|-------------------------|\n\n \nTotal Observations in Table:  300 \n\n \n             |  \n             |     Black |       Red | Row Total | \n-------------|-----------|-----------|-----------|\n  Industrial |       115 |        85 |       200 | \n             |     3.477 |     3.253 |           | \n             |     0.575 |     0.425 |     0.667 | \n             |     0.793 |     0.548 |           | \n             |     0.383 |     0.283 |           | \n-------------|-----------|-----------|-----------|\n       Rural |        30 |        70 |       100 | \n             |     6.954 |     6.505 |           | \n             |     0.300 |     0.700 |     0.333 | \n             |     0.207 |     0.452 |           | \n             |     0.100 |     0.233 |           | \n-------------|-----------|-----------|-----------|\nColumn Total |       145 |       155 |       300 | \n             |     0.483 |     0.517 |           | \n-------------|-----------|-----------|-----------|"
  },
  {
    "objectID": "slides/06__freq_tests.html#end-of-da-class",
    "href": "slides/06__freq_tests.html#end-of-da-class",
    "title": "5-Freqency Tests",
    "section": "End of DA class",
    "text": "End of DA class\n\n\n\n\nResearch Methods & Data Analysis"
  },
  {
    "objectID": "slides/12_grouping.html#you-should-know-today",
    "href": "slides/12_grouping.html#you-should-know-today",
    "title": "12-Multivariate Analyses",
    "section": "You should know today:",
    "text": "You should know today:\n\nHow to make use of multivariate analyses\nUnderstand grouping techniques\nReduction of dimensions"
  },
  {
    "objectID": "slides/12_grouping.html#types-of-variables-review",
    "href": "slides/12_grouping.html#types-of-variables-review",
    "title": "12-Multivariate Analyses",
    "section": "Types of variables (review)",
    "text": "Types of variables (review)\n\n\nCategorical\n\n\nNumerical"
  },
  {
    "objectID": "slides/12_grouping.html#back-to-the-toolbox",
    "href": "slides/12_grouping.html#back-to-the-toolbox",
    "title": "12-Multivariate Analyses",
    "section": "Back to the toolbox",
    "text": "Back to the toolbox"
  },
  {
    "objectID": "slides/12_grouping.html#why-multivariate-analyses",
    "href": "slides/12_grouping.html#why-multivariate-analyses",
    "title": "12-Multivariate Analyses",
    "section": "Why Multivariate Analyses?",
    "text": "Why Multivariate Analyses?"
  },
  {
    "objectID": "slides/12_grouping.html#why-multivariate-analyses-1",
    "href": "slides/12_grouping.html#why-multivariate-analyses-1",
    "title": "12-Multivariate Analyses",
    "section": "Why Multivariate Analyses?",
    "text": "Why Multivariate Analyses?\n\nUncover patterns, trends and dependencies on data\nGrouping\nReduction in dimensionality"
  },
  {
    "objectID": "slides/12_grouping.html#when-ma-is-important",
    "href": "slides/12_grouping.html#when-ma-is-important",
    "title": "12-Multivariate Analyses",
    "section": "When MA is important?",
    "text": "When MA is important?"
  },
  {
    "objectID": "slides/12_grouping.html#when-ma-is-important-1",
    "href": "slides/12_grouping.html#when-ma-is-important-1",
    "title": "12-Multivariate Analyses",
    "section": "When MA is important?",
    "text": "When MA is important?"
  },
  {
    "objectID": "slides/12_grouping.html#types-of-ma",
    "href": "slides/12_grouping.html#types-of-ma",
    "title": "12-Multivariate Analyses",
    "section": "Types of MA",
    "text": "Types of MA\n\n\nsource"
  },
  {
    "objectID": "slides/12_grouping.html#grouping",
    "href": "slides/12_grouping.html#grouping",
    "title": "12-Multivariate Analyses",
    "section": "Grouping",
    "text": "Grouping"
  },
  {
    "objectID": "slides/12_grouping.html#cluster-analysis",
    "href": "slides/12_grouping.html#cluster-analysis",
    "title": "12-Multivariate Analyses",
    "section": "Cluster Analysis",
    "text": "Cluster Analysis"
  },
  {
    "objectID": "slides/12_grouping.html#cluster-analysis-1",
    "href": "slides/12_grouping.html#cluster-analysis-1",
    "title": "12-Multivariate Analyses",
    "section": "Cluster Analysis",
    "text": "Cluster Analysis"
  },
  {
    "objectID": "slides/12_grouping.html#cluster-analysis-2",
    "href": "slides/12_grouping.html#cluster-analysis-2",
    "title": "12-Multivariate Analyses",
    "section": "CLuster Analysis",
    "text": "CLuster Analysis"
  },
  {
    "objectID": "slides/12_grouping.html#cluster-analysis-k-means",
    "href": "slides/12_grouping.html#cluster-analysis-k-means",
    "title": "12-Multivariate Analyses",
    "section": "Cluster Analysis (K-means)",
    "text": "Cluster Analysis (K-means)\n\nset.seed(55)\ncluster.iris &lt;- kmeans(iris[, 3:4], 3, nstart = 20)\ncluster.iris\n\nK-means clustering with 3 clusters of sizes 50, 52, 48\n\nCluster means:\n  Petal.Length Petal.Width\n1     1.462000    0.246000\n2     4.269231    1.342308\n3     5.595833    2.037500\n\nClustering vector:\n  [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [38] 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n [75] 2 2 2 3 2 2 2 2 2 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 2 3 3 3 3\n[112] 3 3 3 3 3 3 3 3 2 3 3 3 3 3 3 2 3 3 3 3 3 3 3 3 3 3 3 2 3 3 3 3 3 3 3 3 3\n[149] 3 3\n\nWithin cluster sum of squares by cluster:\n[1]  2.02200 13.05769 16.29167\n (between_SS / total_SS =  94.3 %)\n\nAvailable components:\n\n[1] \"cluster\"      \"centers\"      \"totss\"        \"withinss\"     \"tot.withinss\"\n[6] \"betweenss\"    \"size\"         \"iter\"         \"ifault\""
  },
  {
    "objectID": "slides/12_grouping.html#cluster-analysis-k-means-1",
    "href": "slides/12_grouping.html#cluster-analysis-k-means-1",
    "title": "12-Multivariate Analyses",
    "section": "Cluster Analysis (K-means)",
    "text": "Cluster Analysis (K-means)\n\ntable(cluster.iris$cluster, iris$Species)\n\n   \n    setosa versicolor virginica\n  1     50          0         0\n  2      0         48         4\n  3      0          2        46"
  },
  {
    "objectID": "slides/12_grouping.html#distance-methods",
    "href": "slides/12_grouping.html#distance-methods",
    "title": "12-Multivariate Analyses",
    "section": "Distance methods",
    "text": "Distance methods\nEuclidean\n\ndist(iris[,1:4])\n\n            1         2         3         4         5         6         7\n2   0.5385165                                                            \n3   0.5099020 0.3000000                                                  \n4   0.6480741 0.3316625 0.2449490                                        \n5   0.1414214 0.6082763 0.5099020 0.6480741                              \n6   0.6164414 1.0908712 1.0862780 1.1661904 0.6164414                    \n7   0.5196152 0.5099020 0.2645751 0.3316625 0.4582576 0.9949874          \n8   0.1732051 0.4242641 0.4123106 0.5000000 0.2236068 0.7000000 0.4242641\n9   0.9219544 0.5099020 0.4358899 0.3000000 0.9219544 1.4594520 0.5477226\n10  0.4690416 0.1732051 0.3162278 0.3162278 0.5291503 1.0099505 0.4795832\n11  0.3741657 0.8660254 0.8831761 1.0000000 0.4242641 0.3464102 0.8660254\n12  0.3741657 0.4582576 0.3741657 0.3741657 0.3464102 0.8124038 0.3000000\n13  0.5916080 0.1414214 0.2645751 0.2645751 0.6403124 1.1618950 0.4898979\n14  0.9949874 0.6782330 0.5000000 0.5196152 0.9746794 1.5716234 0.6164414\n15  0.8831761 1.3601471 1.3638182 1.5297059 0.9165151 0.6782330 1.3601471\n16  1.1045361 1.6278821 1.5874508 1.7146428 1.0862780 0.6164414 1.4933185\n17  0.5477226 1.0535654 1.0099505 1.1661904 0.5477226 0.4000000 0.9539392\n18  0.1000000 0.5477226 0.5196152 0.6557439 0.1732051 0.5916080 0.5099020\n19  0.7416198 1.1747340 1.2369317 1.3228757 0.7937254 0.3316625 1.2083046\n20  0.3316625 0.8366600 0.7549834 0.8660254 0.2645751 0.3872983 0.6480741\n21  0.4358899 0.7071068 0.8306624 0.8774964 0.5385165 0.5385165 0.8602325\n22  0.3000000 0.7615773 0.7000000 0.8062258 0.2645751 0.4123106 0.6000000\n23  0.6480741 0.7810250 0.5099020 0.7071068 0.5656854 1.1224972 0.4582576\n24  0.4690416 0.5567764 0.6480741 0.6480741 0.5291503 0.6782330 0.6244998\n25  0.5916080 0.6480741 0.6403124 0.5385165 0.5744563 0.8306624 0.5477226\n26  0.5477226 0.2236068 0.4690416 0.4242641 0.6324555 1.0099505 0.6082763\n27  0.3162278 0.5000000 0.5099020 0.5477226 0.3464102 0.6480741 0.4582576\n28  0.1414214 0.5916080 0.6164414 0.7211103 0.2449490 0.5291503 0.6244998\n29  0.1414214 0.5000000 0.5477226 0.6782330 0.2828427 0.6480741 0.6082763\n30  0.5385165 0.3464102 0.3000000 0.1732051 0.5385165 1.0148892 0.3162278\n31  0.5385165 0.2449490 0.3316625 0.2236068 0.5744563 1.0246951 0.4242641\n32  0.3872983 0.6782330 0.7810250 0.8774964 0.5000000 0.5385165 0.8124038\n33  0.6244998 1.1489125 1.0535654 1.1704700 0.5567764 0.4582576 0.9486833\n34  0.8062258 1.3416408 1.2845233 1.4247807 0.7810250 0.4795832 1.2083046\n35  0.4582576 0.1414214 0.3000000 0.3000000 0.5196152 0.9848858 0.4472136\n36  0.3741657 0.3000000 0.3162278 0.5099020 0.4472136 0.9695360 0.5000000\n37  0.4123106 0.7874008 0.8544004 1.0049876 0.5196152 0.6082763 0.9165151\n38  0.2449490 0.6082763 0.4690416 0.6000000 0.1414214 0.7211103 0.4123106\n39  0.8660254 0.5099020 0.3605551 0.3000000 0.8544004 1.4177447 0.4690416\n40  0.1414214 0.4582576 0.4898979 0.5830952 0.2449490 0.6480741 0.5196152\n41  0.1732051 0.5291503 0.4358899 0.6082763 0.1732051 0.7000000 0.4242641\n42  1.3490738 0.8185353 0.9273618 0.8366600 1.4000000 1.8814888 1.1090537\n43  0.7681146 0.5477226 0.3000000 0.3000000 0.7280110 1.3000000 0.3162278\n44  0.4582576 0.6782330 0.6557439 0.7000000 0.4582576 0.6082763 0.5477226\n45  0.6164414 0.9848858 0.9591663 0.9695360 0.5830952 0.3741657 0.8185353\n46  0.5916080 0.1414214 0.2645751 0.2645751 0.6403124 1.1269428 0.4472136\n47  0.3605551 0.8485281 0.7810250 0.8660254 0.3000000 0.3872983 0.6782330\n48  0.5830952 0.3605551 0.1414214 0.1414214 0.5656854 1.1224972 0.2236068\n49  0.3000000 0.8124038 0.8062258 0.9219544 0.3316625 0.3605551 0.7745967\n50  0.2236068 0.3162278 0.3316625 0.4582576 0.3000000 0.8062258 0.4242641\n51  4.0037482 4.0963398 4.2766810 4.1773197 4.0607881 3.6124784 4.2308392\n52  3.6166283 3.6864617 3.8496753 3.7336309 3.6633318 3.2465366 3.7854986\n53  4.1641326 4.2367440 4.4158804 4.3058100 4.2190046 3.7868192 4.3669211\n54  3.0935417 2.9698485 3.1543621 2.9849623 3.1480152 2.9444864 3.1272992\n55  3.7920970 3.8118237 3.9974992 3.8729833 3.8496753 3.4698703 3.9560081\n56  3.4161382 3.3911650 3.5510562 3.3926391 3.4568772 3.1543621 3.4899857\n57  3.7854986 3.8600518 4.0112342 3.8897301 3.8249183 3.4073450 3.9344631\n58  2.3452079 2.1470911 2.3065125 2.1118712 2.3874673 2.3280893 2.2781571\n59  3.7496667 3.7881394 3.9749214 3.8548671 3.8078866 3.4146742 3.9357337\n60  2.8879058 2.8053520 2.9495762 2.7784888 2.9223278 2.7055499 2.8827071\n61  2.7037012 2.4617067 2.6476405 2.4515301 2.7586228 2.7147744 2.6495283\n62  3.2280025 3.2449961 3.4029399 3.2680269 3.2710854 2.9189039 3.3361655\n63  3.1464265 3.0413813 3.2588341 3.1080541 3.2186954 2.9832868 3.2634338\n64  3.7000000 3.7121422 3.8794329 3.7376463 3.7456642 3.3896903 3.8209946\n65  2.5806976 2.5592968 2.7202941 2.5806976 2.6267851 2.3366643 2.6627054\n66  3.6276714 3.7000000 3.8807216 3.7762415 3.6851052 3.2588341 3.8353618\n67  3.4351128 3.4336569 3.5749126 3.4205263 3.4669872 3.1464265 3.4942810\n68  3.0099834 2.9715316 3.1527766 3.0000000 3.0626786 2.7784888 3.1160873\n69  3.7682887 3.6918830 3.8961519 3.7496667 3.8340579 3.5468296 3.8794329\n70  2.8827071 2.7928480 2.9782545 2.8160256 2.9376862 2.7073973 2.9495762\n71  3.8535698 3.8935845 4.0311289 3.8923001 3.8845849 3.5085610 3.9420807\n72  3.0757113 3.0740852 3.2588341 3.1304952 3.1336879 2.7928480 3.2202484\n73  4.0472213 4.0187063 4.2071368 4.0620192 4.1036569 3.7709415 4.1701319\n74  3.6578682 3.6565011 3.8314488 3.6851052 3.7067506 3.3674916 3.7828561\n75  3.4161382 3.4467376 3.6318040 3.5114100 3.4741906 3.0935417 3.5916570\n76  3.5972211 3.6510273 3.8340579 3.7229021 3.6551334 3.2465366 3.7907783\n77  4.0472213 4.0804412 4.2731721 4.1545156 4.1085277 3.7121422 4.2391037\n78  4.2449971 4.2953463 4.4698993 4.3497126 4.2965102 3.8832976 4.4147480\n79  3.5312887 3.5383612 3.7027017 3.5623026 3.5763109 3.2264532 3.6414283\n80  2.4939928 2.4186773 2.6153394 2.4698178 2.5573424 2.3194827 2.5980762\n81  2.8178006 2.7000000 2.8879058 2.7202941 2.8740216 2.6758176 2.8653098\n82  2.7018512 2.5787594 2.7712813 2.6038433 2.7604347 2.5729361 2.7549955\n83  2.8948230 2.8548205 3.0364453 2.8913665 2.9495762 2.6608269 2.9983329\n84  4.1352146 4.1170378 4.2825226 4.1279535 4.1785165 3.8470768 4.2225585\n85  3.4117444 3.3985291 3.5298725 3.3674916 3.4380227 3.1400637 3.4423829\n86  3.5199432 3.5972211 3.7322915 3.6069378 3.5510562 3.1448370 3.6414283\n87  3.9115214 3.9786933 4.1545156 4.0422766 3.9648455 3.5411862 4.1024383\n88  3.6180105 3.5580894 3.7669616 3.6262929 3.6864617 3.3867388 3.7549967\n89  3.0000000 2.9983329 3.1464265 2.9966648 3.0364453 2.7239677 3.0740852\n90  3.0215890 2.9291637 3.1032241 2.9376862 3.0708305 2.8407745 3.0626786\n91  3.3120990 3.2434549 3.4073450 3.2357379 3.3541020 3.1032241 3.3555923\n92  3.5958309 3.6221541 3.7854986 3.6482873 3.6400549 3.2726136 3.7229021\n93  3.0099834 2.9546573 3.1400637 2.9899833 3.0659419 2.7892651 3.1064449\n94  2.3874673 2.1794495 2.3537205 2.1633308 2.4372115 2.3748684 2.3388031\n95  3.1527766 3.1032241 3.2680269 3.1080541 3.1968735 2.9223278 3.2140317\n96  3.0740852 3.0789609 3.2326460 3.0838288 3.1128765 2.7910571 3.1654384\n97  3.1256999 3.1144823 3.2726136 3.1224990 3.1670175 2.8548205 3.2093613\n98  3.3451457 3.3645208 3.5425979 3.4132096 3.3985291 3.0347982 3.4957117\n99  2.0904545 1.9131126 2.0856654 1.9157244 2.1424285 2.0566964 2.0639767\n100 3.0577770 3.0298515 3.1953091 3.0446675 3.1032241 2.8053520 3.1400637\n101 5.2848841 5.3385391 5.4726593 5.3357286 5.3131911 4.9061186 5.3758720\n102 4.2083251 4.1809090 4.3347434 4.1773197 4.2461747 3.9255573 4.2638011\n103 5.3018865 5.3572381 5.5290144 5.4064776 5.3507009 4.9223978 5.4680892\n104 4.6904158 4.7085029 4.8682646 4.7222876 4.7307505 4.3566042 4.7989582\n105 5.0566788 5.0911688 5.2469038 5.1097945 5.0960769 4.6978719 5.1710734\n106 6.0950800 6.1595454 6.3364028 6.2153037 6.1457302 5.7052607 6.2801274\n107 3.5916570 3.4799425 3.6083237 3.4205263 3.6166283 3.4263683 3.5312887\n108 5.6364883 5.6868269 5.8660038 5.7384667 5.6877060 5.2659282 5.8137767\n109 5.0477718 5.0408333 5.2249402 5.0813384 5.1009803 4.7349762 5.1797683\n110 5.6391489 5.7471732 5.8940648 5.7844619 5.6762664 5.2057660 5.8077534\n111 4.3566042 4.4192760 4.5738387 4.4519659 4.3977267 3.9774364 4.4977772\n112 4.5199558 4.5210618 4.6936127 4.5530210 4.5683695 4.2011903 4.6368092\n113 4.8538644 4.9020404 5.0695167 4.9457052 4.9010203 4.4833024 5.0049975\n114 4.1904654 4.1340053 4.2918527 4.1303753 4.2308392 3.9370039 4.2272923\n115 4.4170126 4.4022721 4.5442271 4.3965896 4.4508426 4.1146081 4.4609416\n116 4.6260134 4.6808119 4.8270074 4.7010637 4.6626173 4.2497059 4.7423623\n117 4.6454279 4.6829478 4.8456166 4.7095647 4.6882833 4.2918527 4.7780749\n118 6.2401923 6.3694584 6.5207362 6.4140471 6.2785349 5.7913729 6.4397205\n119 6.4984614 6.5314623 6.7178866 6.5901442 6.5536250 6.1343296 6.6708320\n120 4.1412558 4.0620192 4.2508823 4.0877867 4.1964271 3.9179076 4.2190046\n121 5.1215232 5.1903757 5.3488316 5.2297227 5.1643005 4.7275787 5.2744668\n122 4.0286474 4.0024992 4.1436699 3.9862263 4.0607881 3.7483330 4.0620192\n123 6.2112801 6.2617889 6.4467046 6.3229740 6.2657801 5.8360946 6.3992187\n124 4.1097445 4.1060930 4.2813549 4.1436699 4.1605288 3.8013156 4.2284749\n125 4.9699095 5.0428167 5.1942276 5.0695167 5.0079936 4.5760245 5.1137071\n126 5.3122500 5.3898052 5.5587768 5.4387499 5.3591044 4.9173163 5.4963624\n127 3.9774364 3.9812058 4.1496988 4.0124805 4.0249224 3.6633318 4.0902323\n128 4.0074930 4.0311289 4.1856899 4.0472213 4.0472213 3.6742346 4.1121770\n129 4.8404545 4.8518038 5.0149776 4.8733972 4.8836462 4.5066617 4.9477268\n130 5.0970580 5.1584882 5.3385391 5.2172790 5.1497573 4.7222876 5.2886671\n131 5.5461698 5.5919585 5.7775427 5.6550862 5.6017854 5.1788030 5.7314920\n132 6.0141500 6.1546730 6.3126856 6.2153037 6.0572271 5.5596762 6.2401923\n133 4.8805737 4.8918299 5.0537115 4.9132474 4.9234135 4.5453273 4.9849774\n134 4.1605288 4.1689327 4.3416587 4.1988094 4.2083251 3.8457769 4.2871902\n135 4.5705580 4.5475268 4.7169906 4.5552168 4.6141088 4.2883563 4.6626173\n136 5.7887823 5.8600341 6.0406953 5.9321160 5.8438001 5.3916602 5.9883220\n137 4.8918299 4.9598387 5.0921508 4.9628621 4.9203658 4.5022217 4.9939964\n138 4.6065171 4.6508064 4.8062459 4.6690470 4.6454279 4.2473521 4.7318073\n139 3.8961519 3.9153544 4.0669399 3.9268308 3.9344631 3.5693137 3.9912404\n140 4.7968740 4.8600412 5.0269275 4.9101935 4.8445846 4.4124823 4.9618545\n141 5.0199602 5.0724747 5.2287666 5.1048996 5.0616203 4.6411206 5.1526692\n142 4.6368092 4.7021272 4.8682646 4.7602521 4.6861498 4.2497059 4.8031240\n143 4.2083251 4.1809090 4.3347434 4.1773197 4.2461747 3.9255573 4.2638011\n144 5.2573758 5.3207142 5.4753995 5.3497664 5.2971691 4.8682646 5.3972215\n145 5.1361464 5.2067264 5.3535035 5.2325902 5.1730069 4.7391982 5.2678269\n146 4.6540305 4.7000000 4.8641546 4.7455242 4.7010637 4.2848571 4.7968740\n147 4.2766810 4.2497059 4.4305756 4.2883563 4.3301270 3.9887341 4.3840620\n148 4.4598206 4.4988888 4.6615448 4.5332108 4.5044423 4.1024383 4.5934736\n149 4.6508064 4.7180504 4.8487112 4.7191101 4.6786750 4.2649736 4.7497368\n150 4.1400483 4.1533119 4.2988371 4.1496988 4.1737274 3.8183766 4.2178193\n            8         9        10        11        12        13        14\n2                                                                        \n3                                                                        \n4                                                                        \n5                                                                        \n6                                                                        \n7                                                                        \n8                                                                        \n9   0.7874008                                                            \n10  0.3316625 0.5567764                                                  \n11  0.5000000 1.2845233 0.7874008                                        \n12  0.2236068 0.6708204 0.3464102 0.6782330                              \n13  0.4690416 0.4242641 0.1732051 0.9327379 0.4582576                    \n14  0.9055385 0.3464102 0.7280110 1.3674794 0.8185353 0.5830952          \n15  1.0440307 1.7916473 1.3114877 0.5830952 1.2328828 1.4317821 1.8083141\n16  1.2369317 1.9974984 1.5556349 0.7874008 1.3638182 1.6941074 2.0420578\n17  0.7000000 1.4317821 1.0099505 0.3464102 0.8602325 1.1269428 1.4662878\n18  0.2000000 0.9273618 0.5000000 0.3872983 0.3872983 0.6164414 1.0099505\n19  0.8366600 1.6124515 1.1000000 0.3872983 0.9949874 1.2569805 1.7320508\n20  0.4242641 1.1489125 0.7549834 0.3316625 0.5196152 0.8831761 1.2165525\n21  0.4472136 1.1575837 0.6244998 0.3605551 0.6082763 0.7874008 1.3190906\n22  0.3741657 1.0862780 0.7000000 0.3605551 0.4795832 0.8246211 1.1747340\n23  0.6708204 0.8306624 0.7745967 0.9486833 0.6633250 0.7549834 0.6855655\n24  0.3872983 0.9110434 0.5291503 0.6164414 0.4472136 0.6557439 1.1180340\n25  0.4472136 0.8124038 0.5196152 0.7810250 0.3000000 0.6480741 1.0295630\n26  0.4123106 0.6403124 0.2000000 0.8124038 0.4472136 0.3000000 0.8660254\n27  0.2236068 0.8306624 0.4472136 0.5477226 0.2828427 0.5744563 0.9949874\n28  0.2236068 1.0049876 0.5099020 0.2828427 0.4242641 0.6557439 1.1090537\n29  0.2236068 0.9433981 0.4472136 0.3741657 0.4472136 0.5744563 1.0344080\n30  0.3741657 0.4690416 0.2645751 0.8660254 0.2236068 0.3162278 0.6782330\n31  0.3741657 0.4898979 0.1732051 0.8544004 0.3000000 0.2449490 0.7211103\n32  0.4472136 1.1401754 0.6557439 0.3605551 0.6403124 0.7874008 1.2727922\n33  0.7348469 1.4491377 1.0440307 0.4582576 0.8185353 1.1747340 1.4764823\n34  0.9486833 1.7029386 1.2609520 0.5196152 1.0816654 1.3928388 1.7262677\n35  0.3162278 0.5477226 0.1000000 0.7810250 0.3316625 0.2000000 0.7348469\n36  0.3605551 0.7000000 0.3464102 0.7071068 0.4898979 0.3605551 0.7416198\n37  0.5477226 1.2569805 0.7549834 0.3000000 0.7681146 0.8717798 1.3190906\n38  0.2645751 0.8660254 0.5099020 0.5291503 0.3162278 0.6082763 0.9000000\n39  0.7483315 0.1414214 0.5567764 1.2369317 0.6403124 0.4242641 0.2449490\n40  0.1000000 0.8660254 0.3741657 0.4242641 0.3162278 0.5196152 0.9848858\n41  0.2449490 0.8602325 0.5000000 0.5000000 0.3872983 0.5830952 0.9055385\n42  1.2288206 0.6244998 0.9380832 1.6792856 1.1832160 0.7937254 0.7810250\n43  0.6633250 0.3162278 0.5567764 1.1357817 0.5385165 0.4690416 0.3162278\n44  0.4242641 0.9591663 0.6557439 0.6082763 0.4582576 0.7615773 1.1135529\n45  0.6082763 1.2609520 0.8831761 0.5477226 0.6164414 1.0344080 1.4177447\n46  0.4690416 0.4242641 0.2645751 0.9327379 0.4582576 0.2000000 0.6164414\n47  0.4242641 1.1575837 0.7416198 0.3316625 0.5000000 0.8831761 1.2409674\n48  0.4582576 0.3605551 0.3464102 0.9486833 0.3464102 0.3000000 0.4795832\n49  0.4242641 1.2083046 0.7280110 0.1000000 0.5916080 0.8717798 1.2884099\n50  0.1414214 0.7211103 0.2645751 0.5744563 0.3000000 0.3741657 0.8246211\n51  3.9648455 4.3794977 4.0435133 3.8065733 3.9912404 4.1785165 4.6882833\n52  3.5623026 3.9230090 3.6359318 3.4554305 3.5637059 3.7643060 4.2391037\n53  4.1170378 4.4977772 4.1856899 3.9824616 4.1327957 4.3162484 4.8135226\n54  2.9866369 3.0886890 2.9478806 3.0708305 2.9444864 3.0298515 3.4322005\n55  3.7296112 4.0435133 3.7709415 3.6496575 3.7336309 3.8897301 4.3692105\n56  3.3256578 3.5383612 3.3421550 3.3331667 3.2848135 3.4496377 3.8729833\n57  3.7282704 4.0767634 3.8065733 3.6290495 3.7188708 3.9344631 4.3931765\n58  2.2113344 2.1794495 2.1307276 2.4124676 2.1307276 2.1886069 2.5238859\n59  3.6918830 4.0360872 3.7389838 3.5916570 3.7013511 3.8639358 4.3577517\n60  2.7802878 2.8930952 2.7748874 2.8705400 2.7166155 2.8618176 3.2295511\n61  2.5690465 2.4939928 2.4556058 2.7730849 2.5000000 2.5019992 2.8390139\n62  3.1543621 3.4336569 3.2031235 3.1176915 3.1336879 3.3181320 3.7589892\n63  3.0545049 3.2326460 3.0133038 3.0822070 3.0463092 3.1064449 3.5707142\n64  3.6249138 3.9012818 3.6619667 3.5791060 3.6041643 3.7788887 4.2308392\n65  2.4959968 2.7367864 2.5258662 2.5099801 2.4698178 2.6324893 3.0643107\n66  3.5818989 3.9711459 3.6523965 3.4496377 3.6027767 3.7828561 4.2836900\n67  3.3481338 3.5707142 3.3852622 3.3496268 3.3015148 3.4942810 3.9000000\n68  2.9206164 3.1511903 2.9223278 2.9257478 2.8948230 3.0315013 3.4856850\n69  3.6837481 3.8768544 3.6687873 3.6851052 3.6742346 3.7643060 4.2154478\n70  2.7820855 2.9427878 2.7586228 2.8372522 2.7477263 2.8530685 3.2832910\n71  3.7815341 4.0570926 3.8457769 3.7349699 3.7483330 3.9623226 4.3794977\n72  3.0049958 3.2969683 3.0364453 2.9597297 3.0033315 3.1511903 3.6235342\n73  3.9686270 4.2083251 3.9799497 3.9370039 3.9547440 4.0877867 4.5442271\n74  3.5791060 3.8457769 3.6027767 3.5411862 3.5580894 3.7188708 4.1773197\n75  3.3555923 3.6905284 3.4014703 3.2695565 3.3630343 3.5242020 4.0124805\n76  3.5454196 3.9102430 3.6055513 3.4322005 3.5608988 3.7322915 4.2272923\n77  3.9912404 4.3324358 4.0348482 3.8858718 4.0049969 4.1581246 4.6551047\n78  4.1892720 4.5287967 4.2497059 4.0841156 4.1928511 4.3737855 4.8507731\n79  3.4554305 3.7229021 3.4942810 3.4190642 3.4336569 3.6083237 4.0521599\n80  2.4020824 2.6134269 2.3874673 2.4372115 2.3874673 2.4879711 2.9478806\n81  2.7110883 2.8337255 2.6720778 2.7928480 2.6720778 2.7586228 3.1764760\n82  2.5942244 2.7184554 2.5495098 2.6795522 2.5573424 2.6362853 3.0610456\n83  2.8089144 3.0413813 2.8178006 2.8142495 2.7892651 2.9240383 3.3749074\n84  4.0509258 4.2720019 4.0718546 4.0348482 4.0174619 4.1797129 4.6076024\n85  3.3181320 3.5085610 3.3496268 3.3436507 3.2588341 3.4539832 3.8379682\n86  3.4583233 3.7920970 3.5425979 3.3778692 3.4365681 3.6687873 4.1060930\n87  3.8613469 4.2320208 3.9293765 3.7389838 3.8729833 4.0583248 4.5486262\n88  3.5383612 3.7656341 3.5284558 3.5199432 3.5369478 3.6304270 4.1012193\n89  2.9137605 3.1543621 2.9495762 2.9154759 2.8740216 3.0610456 3.4828150\n90  2.9189039 3.0561414 2.9000000 2.9849623 2.8757608 2.9899833 3.3970576\n91  3.2093613 3.3615473 3.1984371 3.2603681 3.1575307 3.2954514 3.7013511\n92  3.5242020 3.8183766 3.5707142 3.4684290 3.5057096 3.6905284 4.1448764\n93  2.9206164 3.1320920 2.9189039 2.9359837 2.8982753 3.0215890 3.4684290\n94  2.2561028 2.2293497 2.1679483 2.4494897 2.1863211 2.2248595 2.5748786\n95  3.0577770 3.2449961 3.0626786 3.0886890 3.0166206 3.1638584 3.5818989\n96  2.9899833 3.2465366 3.0248967 2.9782545 2.9546573 3.1400637 3.5749126\n97  3.0397368 3.2771939 3.0675723 3.0380915 3.0049958 3.1780497 3.6083237\n98  3.2771939 3.5860842 3.3181320 3.2140317 3.2726136 3.4380227 3.9115214\n99  1.9697716 2.0049938 1.9104973 2.1424285 1.9157244 1.9748418 2.3452079\n100 2.9698485 3.1937439 2.9883106 2.9782545 2.9376862 3.0951575 3.5270384\n101 5.2191953 5.4972721 5.2924474 5.1487863 5.1874849 5.4092513 5.8189346\n102 4.1206796 4.3104524 4.1436699 4.1243181 4.0779897 4.2449971 4.6454279\n103 5.2478567 5.5821143 5.3113087 5.1332251 5.2488094 5.4350713 5.9059292\n104 4.6162756 4.8795492 4.6583259 4.5628938 4.5891176 4.7738873 5.2105662\n105 4.9899900 5.2706736 5.0467812 4.9183331 4.9689033 5.1633323 5.5982140\n106 6.0448325 6.3953108 6.1081912 5.9118525 6.0506198 6.2353829 6.7186308\n107 3.4741906 3.5028560 3.4525353 3.5972211 3.3882149 3.5256205 3.8379682\n108 5.5803226 5.9143892 5.6329388 5.4635154 5.5812185 5.7584720 6.2401923\n109 4.9749372 5.2316345 4.9979996 4.9173163 4.9618545 5.1097945 5.5668663\n110 5.5973208 5.9757845 5.6973678 5.4497706 5.5982140 5.8283788 6.2872888\n111 4.3000000 4.6292548 4.3749286 4.2023803 4.2918527 4.4977772 4.9487372\n112 4.4474712 4.7053161 4.4821870 4.3965896 4.4305756 4.5934736 5.0378567\n113 4.7968740 5.1176166 4.8600412 4.6968074 4.7937459 4.9809638 5.4415071\n114 4.0975602 4.2485292 4.1060930 4.1255303 4.0521599 4.1988094 4.5858478\n115 4.3358967 4.5276926 4.3760713 4.3324358 4.2953463 4.4743715 4.8559242\n116 4.5661800 4.8692915 4.6411206 4.4833024 4.5497253 4.7592016 5.1894123\n117 4.5793013 4.8774994 4.6324939 4.5011110 4.5628938 4.7528939 5.2048055\n118 6.2040309 6.6174013 6.3071388 6.0282667 6.2112801 6.4459289 6.9260378\n119 6.4420494 6.7557383 6.4876806 6.3300869 6.4459289 6.6075714 7.0851958\n120 4.0472213 4.2071368 4.0286474 4.0681691 4.0162171 4.1231056 4.5497253\n121 5.0695167 5.4074023 5.1468437 4.9547957 5.0665570 5.2706736 5.7271284\n122 3.9395431 4.1158231 3.9686270 3.9560081 3.8897301 4.0669399 4.4474712\n123 6.1587336 6.4984614 6.2112801 6.0315835 6.1660360 6.3364028 6.8242216\n124 4.0373258 4.2965102 4.0706265 3.9912404 4.0236799 4.1809090 4.6281746\n125 4.9142650 5.2488094 4.9919936 4.8062459 4.9030603 5.1176166 5.5686623\n126 5.2621288 5.6258333 5.3329167 5.1283526 5.2649786 5.4635154 5.9455866\n127 3.9051248 4.1677332 3.9446166 3.8600518 3.8884444 4.0558600 4.4977772\n128 3.9357337 4.2083251 3.9874804 3.8858718 3.9115214 4.1024383 4.5354162\n129 4.7686476 5.0259327 4.8114447 4.7148701 4.7465777 4.9234135 5.3572381\n130 5.0447993 5.4009258 5.1029403 4.9173163 5.0517324 5.2316345 5.7227616\n131 5.4927225 5.8300943 5.5443665 5.3721504 5.5009090 5.6683331 6.1554854\n132 5.9849812 6.4265076 6.0917978 5.7887823 6.0041652 6.2337790 6.7305275\n133 4.8093659 5.0645829 4.8538644 4.7560488 4.7874837 4.9648766 5.3953684\n134 4.0865633 4.3588989 4.1194660 4.0336088 4.0681691 4.2355637 4.6904158\n135 4.4833024 4.6968074 4.4933284 4.4665423 4.4463468 4.6021734 5.0338852\n136 5.7463032 6.1155539 5.8180753 5.5991071 5.7645468 5.9447456 6.4342832\n137 4.8311489 5.1322510 4.9142650 4.7486840 4.8052055 5.0338852 5.4497706\n138 4.5398238 4.8383882 4.5978256 4.4631827 4.5188494 4.7191101 5.1643005\n139 3.8223030 4.0853396 3.8729833 3.7815341 3.7947332 3.9862263 4.4124823\n140 4.7455242 5.0892043 4.8176758 4.6292548 4.7486840 4.9416596 5.4092513\n141 4.9628621 5.2735187 5.0338852 4.8682646 4.9537864 5.1526692 5.5955339\n142 4.5902070 4.9386233 4.6690470 4.4698993 4.6000000 4.7906158 5.2545219\n143 4.1206796 4.3104524 4.1436699 4.1243181 4.0779897 4.2449971 4.6454279\n144 5.2009614 5.5235858 5.2744668 5.0970580 5.1903757 5.3972215 5.8455111\n145 5.0823223 5.4064776 5.1652686 4.9779514 5.0714889 5.2867760 5.7245087\n146 4.5989129 4.9142650 4.6669048 4.5033321 4.5978256 4.7843495 5.2354560\n147 4.2000000 4.4294469 4.2201896 4.1701319 4.1844952 4.3243497 4.7644517\n148 4.3977267 4.7010637 4.4575778 4.3162484 4.3874822 4.5760245 5.0259327\n149 4.5891176 4.8887626 4.6722586 4.5110974 4.5617979 4.7916594 5.2057660\n150 4.0607881 4.3023250 4.1060930 4.0323690 4.0224371 4.2178193 4.6314145\n           15        16        17        18        19        20        21\n2                                                                        \n3                                                                        \n4                                                                        \n5                                                                        \n6                                                                        \n7                                                                        \n8                                                                        \n9                                                                        \n10                                                                       \n11                                                                       \n12                                                                       \n13                                                                       \n14                                                                       \n15                                                                       \n16  0.5477226                                                            \n17  0.4690416 0.6164414                                                  \n18  0.8888194 1.0908712 0.5196152                                        \n19  0.5567764 0.6403124 0.5196152 0.7348469                              \n20  0.7937254 0.8544004 0.3872983 0.3162278 0.6324555                    \n21  0.8774964 1.0816654 0.6708204 0.4472136 0.5099020 0.5477226          \n22  0.8426150 0.9219544 0.4123106 0.2449490 0.6480741 0.1414214 0.5099020\n23  1.2806248 1.4628739 0.9273618 0.6557439 1.3228757 0.7416198 1.0816654\n24  1.1489125 1.2727922 0.7874008 0.4123106 0.8062258 0.5744563 0.4358899\n25  1.3601471 1.4177447 1.0049876 0.6000000 1.0099505 0.6480741 0.6324555\n26  1.3416408 1.5811388 1.0488088 0.5567764 1.0723805 0.8185353 0.5744563\n27  1.0954451 1.2247449 0.7071068 0.2645751 0.8185353 0.4358899 0.4582576\n28  0.8366600 1.0488088 0.5291503 0.1732051 0.6244998 0.3316625 0.3000000\n29  0.8717798 1.1401754 0.5830952 0.1732051 0.7141428 0.4358899 0.3605551\n30  1.4177447 1.5779734 1.0535654 0.5477226 1.1747340 0.7348469 0.7348469\n31  1.4035669 1.5968719 1.0630146 0.5477226 1.1489125 0.7745967 0.6782330\n32  0.8062258 1.0440307 0.5385165 0.3464102 0.5477226 0.5099020 0.2828427\n33  0.6855655 0.6557439 0.4582576 0.6480741 0.6480741 0.3741657 0.7615773\n34  0.4123106 0.3605551 0.3872983 0.8124038 0.5477226 0.5830952 0.8602325\n35  1.3076697 1.5394804 0.9848858 0.4690416 1.0862780 0.7348469 0.6164414\n36  1.1313708 1.4352700 0.8366600 0.3872983 1.0535654 0.6855655 0.6708204\n37  0.5916080 0.9643651 0.4582576 0.4242641 0.5477226 0.5477226 0.4242641\n38  1.0099505 1.1747340 0.6633250 0.3000000 0.9000000 0.3605551 0.6244998\n39  1.7233688 1.9313208 1.3601471 0.8717798 1.5811388 1.0862780 1.1489125\n40  0.9695360 1.1832160 0.6480741 0.1732051 0.7549834 0.4123106 0.3605551\n41  0.9539392 1.1618950 0.5744563 0.1414214 0.8602325 0.3741657 0.5830952\n42  2.1447611 2.4289916 1.8384776 1.3453624 1.9621417 1.6278821 1.4798649\n43  1.6155494 1.7916473 1.2369317 0.7745967 1.4899664 0.9486833 1.0954451\n44  1.1000000 1.1618950 0.6708204 0.3741657 0.8246211 0.4472136 0.5830952\n45  1.0295630 0.9380832 0.6782330 0.5916080 0.6403124 0.4123106 0.5744563\n46  1.4317821 1.6703293 1.0908712 0.5830952 1.2409674 0.8602325 0.7874008\n47  0.8306624 0.8774964 0.4795832 0.3741657 0.6164414 0.1414214 0.5099020\n48  1.4560220 1.6431677 1.0862780 0.5916080 1.2922848 0.7937254 0.8774964\n49  0.6557439 0.8306624 0.3605551 0.3162278 0.4690416 0.2449490 0.3741657\n50  1.0816654 1.3228757 0.7549834 0.2449490 0.9165151 0.5291503 0.5099020\n51  3.9711459 3.7907783 3.9509493 3.9749214 3.5014283 3.9268308 3.6110940\n52  3.6851052 3.4842503 3.5972211 3.5818989 3.1827661 3.5341194 3.2511536\n53  4.1713307 3.9874804 4.1303753 4.1340053 3.6891733 4.0902323 3.7775654\n54  3.4684290 3.3926391 3.2664966 3.0594117 2.9291637 3.1080541 2.7784888\n55  3.8961519 3.7443290 3.8105118 3.7589892 3.3896903 3.7429935 3.4161382\n56  3.6810325 3.5171011 3.5142567 3.3852622 3.1368774 3.3704599 3.0822070\n57  3.8665230 3.6400549 3.7643060 3.7496667 3.3615473 3.6905284 3.4322005\n58  2.9017236 2.8705400 2.6191602 2.3130067 2.3769729 2.3937418 2.1095023\n59  3.8236109 3.6715120 3.7603191 3.7215588 3.3211444 3.6972963 3.3630343\n60  3.2832910 3.1464265 3.0397368 2.8478062 2.7404379 2.8618176 2.6095977\n61  3.2511536 3.2572995 2.9949958 2.6758176 2.7313001 2.7820855 2.4494897\n62  3.4205263 3.2403703 3.2680269 3.1890437 2.8930952 3.1638584 2.8896367\n63  3.4292856 3.3970576 3.3015148 3.1224990 2.9034462 3.1796226 2.7802878\n64  3.8716921 3.6945906 3.7483330 3.6687873 3.3436507 3.6414283 3.3436507\n65  2.8670542 2.7349589 2.6720778 2.5396850 2.3302360 2.5436195 2.2605309\n66  3.6469165 3.4785054 3.5972211 3.5958309 3.1606961 3.5594943 3.2419130\n67  3.6905284 3.4899857 3.5071356 3.3985291 3.1511903 3.3660065 3.1192948\n68  3.2771939 3.1654384 3.1304952 2.9849623 2.7331301 2.9916551 2.6551836\n69  3.9974992 3.9115214 3.8704005 3.7349699 3.4770677 3.7696154 3.4073450\n70  3.2233523 3.1416556 3.0413813 2.8530685 2.6795522 2.8879058 2.5495098\n71  4.0211939 3.7854986 3.8665230 3.8131352 3.5014283 3.7603191 3.5298725\n72  3.2526912 3.1272992 3.1304952 3.0413813 2.7294688 3.0413813 2.7110883\n73  4.2284749 4.0914545 4.1158231 4.0162171 3.7054015 4.0162171 3.6810325\n74  3.8444766 3.6878178 3.7282704 3.6318040 3.3120990 3.6124784 3.2939338\n75  3.5199432 3.3749074 3.4365681 3.3852622 3.0099834 3.3674916 3.0364453\n76  3.6496575 3.4899857 3.5860842 3.5651087 3.1543621 3.5369478 3.2140317\n77  4.1036569 3.9572718 4.0521599 4.0187063 3.6097091 3.9987498 3.6565011\n78  4.3011626 4.1109610 4.2284749 4.2107007 3.8065733 4.1725292 3.8716921\n79  3.7188708 3.5425979 3.5791060 3.4957117 3.1906112 3.4727511 3.1843367\n80  2.8106939 2.7568098 2.6419690 2.4637370 2.2737634 2.5079872 2.1470911\n81  3.1968735 3.1336879 3.0000000 2.7874720 2.6551836 2.8372522 2.4959968\n82  3.0886890 3.0397368 2.8948230 2.6739484 2.5475478 2.7294688 2.3769729\n83  3.1591138 3.0495901 3.0000000 2.8618176 2.6210685 2.8757608 2.5475478\n84  4.3474130 4.1689327 4.2047592 4.1024383 3.8144462 4.0828911 3.7907783\n85  3.7067506 3.5014283 3.5014283 3.3749074 3.1638584 3.3421550 3.1128765\n86  3.6400549 3.3955854 3.5057096 3.4813790 3.1272992 3.4146742 3.1874755\n87  3.9446166 3.7603191 3.8858718 3.8794329 3.4539832 3.8379682 3.5312887\n88  3.8196859 3.7403208 3.7134889 3.5888717 3.3015148 3.6193922 3.2434549\n89  3.2649655 3.0886890 3.0822070 2.9647934 2.7221315 2.9410882 2.6776856\n90  3.3749074 3.2726136 3.1733263 2.9866369 2.8319605 3.0166206 2.7055499\n91  3.6455452 3.5114100 3.4568772 3.2832910 3.0951575 3.2893768 2.9899833\n92  3.7536649 3.5679126 3.6318040 3.5637059 3.2280025 3.5298725 3.2403703\n93  3.2863353 3.1843367 3.1272992 2.9782545 2.7477263 2.9983329 2.6627054\n94  2.9291637 2.9154759 2.6608269 2.3558438 2.4062419 2.4474477 2.1377558\n95  3.4554305 3.3166248 3.2710854 3.1192948 2.9103264 3.1224990 2.8266588\n96  3.3181320 3.1448370 3.1543621 3.0430248 2.7748874 3.0166206 2.7386128\n97  3.3808283 3.2171416 3.2109189 3.0919250 2.8390139 3.0757113 2.7928480\n98  3.4914181 3.3391616 3.3837849 3.3136083 2.9698485 3.2954514 2.9765752\n99  2.6057628 2.5903668 2.3302360 2.0493902 2.0928450 2.1400935 1.8439089\n100 3.3271610 3.1827661 3.1543621 3.0232433 2.7856777 3.0199338 2.7239677\n101 5.3916602 5.1215232 5.2602281 5.2421370 4.8928519 5.1749396 4.9598387\n102 4.4485953 4.2555846 4.2766810 4.1689327 3.9166312 4.1496988 3.8858718\n103 5.3282267 5.1156622 5.2678269 5.2668776 4.8456166 5.2191953 4.9295030\n104 4.8352870 4.6238512 4.7180504 4.6572524 4.3162484 4.6162756 4.3393548\n105 5.1623638 4.9325450 5.0507425 5.0179677 4.6583259 4.9699095 4.7095647\n106 6.0835845 5.8711157 6.0522723 6.0646517 5.6124861 6.0116553 5.7113921\n107 4.0249224 3.8652296 3.7603191 3.5510562 3.4828150 3.5623026 3.3391616\n108 5.6595053 5.4598535 5.6187187 5.6089215 5.1749396 5.5623736 5.2516664\n109 5.1749396 5.0059964 5.0852729 5.0169712 4.6636895 4.9989999 4.6765372\n110 5.6053546 5.3347915 5.5479726 5.5991071 5.1468437 5.5181519 5.2848841\n111 4.4249294 4.1952354 4.3243497 4.3162484 3.9306488 4.2626283 4.0062451\n112 4.6636895 4.4799554 4.5486262 4.4833024 4.1496988 4.4609416 4.1641326\n113 4.9091751 4.6968074 4.8270074 4.8155997 4.4192760 4.7717921 4.4911023\n114 4.4654227 4.2918527 4.2778499 4.1484937 3.9331921 4.1460825 3.8768544\n115 4.6357308 4.4192760 4.4508426 4.3680659 4.1206796 4.3428102 4.1133928\n116 4.7138095 4.4698993 4.5934736 4.5814845 4.2201896 4.5265881 4.2906876\n117 4.7476310 4.5343136 4.6497312 4.6119410 4.2391037 4.5661800 4.2860238\n118 6.1562976 5.8855756 6.1400326 6.2088646 5.7105166 6.1163715 5.8694122\n119 6.5169011 6.3253458 6.4768820 6.4668385 6.0398675 6.4311741 6.1139185\n120 4.4056782 4.2883563 4.2602817 4.1109610 3.8704005 4.1303753 3.7920970\n121 5.1487863 4.9122296 5.0705029 5.0813384 4.6690470 5.0239427 4.7644517\n122 4.2906876 4.0853396 4.0951190 3.9849718 3.7603191 3.9623226 3.7255872\n123 6.2080593 6.0133186 6.1822326 6.1830413 5.7349804 6.1392182 5.8215118\n124 4.2649736 4.0951190 4.1436699 4.0718546 3.7496667 4.0570926 3.7549967\n125 5.0159745 4.7686476 4.9295030 4.9325450 4.5265881 4.8672374 4.6162756\n126 5.3103672 5.0892043 5.2706736 5.2829916 4.8321838 5.2220686 4.9325450\n127 4.1376322 3.9572718 4.0074930 3.9382737 3.6207734 3.9179076 3.6290495\n128 4.1641326 3.9547440 4.0274061 3.9686270 3.6455452 3.9306488 3.6674242\n129 4.9769469 4.7696960 4.8569538 4.8020829 4.4654227 4.7686476 4.4922155\n130 5.1068581 4.9132474 5.0734604 5.0705029 4.6249324 5.0229473 4.7085029\n131 5.5587768 5.3721504 5.5226805 5.5163394 5.0803543 5.4781384 5.1584882\n132 5.8932164 5.6364883 5.9016947 5.9849812 5.4607692 5.8940648 5.6338264\n133 5.0159745 4.8062459 4.8928519 4.8404545 4.5066617 4.8072861 4.5354162\n134 4.3116122 4.1340053 4.2035699 4.1303753 3.7894591 4.1036569 3.7973675\n135 4.7801674 4.6054316 4.6551047 4.5453273 4.2449971 4.5232732 4.2166337\n136 5.7471732 5.5434646 5.7227616 5.7532599 5.2915026 5.7061370 5.4055527\n137 4.9809638 4.7085029 4.8528342 4.8476799 4.4877611 4.7770284 4.5672749\n138 4.7138095 4.4877611 4.6086874 4.5727453 4.2035699 4.5199558 4.2532341\n139 4.0693980 3.8600518 3.9217343 3.8561639 3.5482390 3.8196859 3.5623026\n140 4.8238988 4.6076024 4.7528939 4.7581509 4.3428102 4.7095647 4.4317040\n141 5.0813384 4.8476799 4.9819675 4.9769469 4.5945620 4.9264592 4.6722586\n142 4.6518813 4.4384682 4.5760245 4.5923850 4.1821047 4.5486262 4.2790186\n143 4.4485953 4.2555846 4.2766810 4.1689327 3.9166312 4.1496988 3.8858718\n144 5.3047149 5.0616203 5.2172790 5.2182373 4.8176758 5.1584882 4.9040799\n145 5.1807335 4.9254441 5.0813384 5.0921508 4.7000000 5.0289164 4.7947888\n146 4.7138095 4.5011110 4.6173586 4.6097722 4.2296572 4.5705580 4.3023250\n147 4.4530888 4.2976738 4.3255058 4.2379240 3.9370039 4.2355637 3.9242834\n148 4.5530210 4.3416587 4.4485953 4.4204072 4.0521599 4.3794977 4.1060930\n149 4.7507894 4.4799554 4.6162756 4.6065171 4.2544095 4.5365185 4.3289722\n150 4.3335897 4.1133928 4.1785165 4.1024383 3.8065733 4.0607881 3.8118237\n           22        23        24        25        26        27        28\n2                                                                        \n3                                                                        \n4                                                                        \n5                                                                        \n6                                                                        \n7                                                                        \n8                                                                        \n9                                                                        \n10                                                                       \n11                                                                       \n12                                                                       \n13                                                                       \n14                                                                       \n15                                                                       \n16                                                                       \n17                                                                       \n18                                                                       \n19                                                                       \n20                                                                       \n21                                                                       \n22                                                                       \n23  0.7416198                                                            \n24  0.4582576 0.9591663                                                  \n25  0.6164414 0.9433981 0.4795832                                        \n26  0.7416198 0.9380832 0.4472136 0.5385165                              \n27  0.3316625 0.7745967 0.2000000 0.4123106 0.4472136                    \n28  0.3000000 0.7874008 0.4242641 0.5744563 0.5477226 0.3162278          \n29  0.3872983 0.7483315 0.4472136 0.6403124 0.4898979 0.3464102 0.1414214\n30  0.6782330 0.7280110 0.5196152 0.3741657 0.3605551 0.4123106 0.5916080\n31  0.7071068 0.8062258 0.4795832 0.4242641 0.2236068 0.4123106 0.5744563\n32  0.4242641 0.9848858 0.3872983 0.7483315 0.6082763 0.4123106 0.3000000\n33  0.5099020 0.9327379 0.9219544 0.9055385 1.1269428 0.7937254 0.6082763\n34  0.6782330 1.1532563 1.0723805 1.1747340 1.3152946 0.9848858 0.7681146\n35  0.6633250 0.7681146 0.4582576 0.5099020 0.1732051 0.3872983 0.5000000\n36  0.6244998 0.6000000 0.6000000 0.7549834 0.4472136 0.4898979 0.4690416\n37  0.5291503 0.9539392 0.6708204 0.9273618 0.7681146 0.6244998 0.3605551\n38  0.3872983 0.5099020 0.6164414 0.5567764 0.6480741 0.4242641 0.3464102\n39  1.0295630 0.7000000 0.9110434 0.8246211 0.6708204 0.8062258 0.9643651\n40  0.3605551 0.7348469 0.3741657 0.5000000 0.4242641 0.2449490 0.1414214\n41  0.3162278 0.5196152 0.5000000 0.6480741 0.5916080 0.3316625 0.3000000\n42  1.5394804 1.3416408 1.2489996 1.2922848 0.9165151 1.2489996 1.4071247\n43  0.9055385 0.5385165 0.8660254 0.7483315 0.7000000 0.7280110 0.8774964\n44  0.3162278 0.8306624 0.2645751 0.5477226 0.6403124 0.2236068 0.4582576\n45  0.4123106 1.0677078 0.5477226 0.5385165 0.8831761 0.5099020 0.5477226\n46  0.7745967 0.7549834 0.5567764 0.6480741 0.3000000 0.5000000 0.6557439\n47  0.2449490 0.8062258 0.5916080 0.5830952 0.8062258 0.4582576 0.3316625\n48  0.7416198 0.5656854 0.6633250 0.5744563 0.4898979 0.5291503 0.6782330\n49  0.2828427 0.8660254 0.5744563 0.7071068 0.7681146 0.4795832 0.2236068\n50  0.4690416 0.6403124 0.4358899 0.5477226 0.3605551 0.3000000 0.3000000\n51  3.8858718 4.5880279 3.6646964 3.7629775 3.8845849 3.8275318 3.8742741\n52  3.4856850 4.1641326 3.2465366 3.3241540 3.4785054 3.4088121 3.4957117\n53  4.0459857 4.7370877 3.8105118 3.8974351 4.0249224 3.9749214 4.0373258\n54  3.0298515 3.5651087 2.6627054 2.7055499 2.7766887 2.8337255 2.9983329\n55  3.6864617 4.3474130 3.4088121 3.4971417 3.6027767 3.5805028 3.6715120\n56  3.3136083 3.9127995 3.0149627 3.0232433 3.1859065 3.1733263 3.3090784\n57  3.6441734 4.3162484 3.4132096 3.4727511 3.6537652 3.5707142 3.6674242\n58  2.3086793 2.7313001 1.9131126 1.9000000 1.9748418 2.0639767 2.2759613\n59  3.6482873 4.3197222 3.3852622 3.4626579 3.5749126 3.5524639 3.6249138\n60  2.7874720 3.3196385 2.4535688 2.4677925 2.6191602 2.6115130 2.8000000\n61  2.6944387 3.1000000 2.2781571 2.2803509 2.2912878 2.4351591 2.6324893\n62  3.1032241 3.7389838 2.8248894 2.8896367 3.0430248 2.9899833 3.1176915\n63  3.1096624 3.6823905 2.7495454 2.8160256 2.8354894 2.9257478 3.0364453\n64  3.5888717 4.2272923 3.3120990 3.3496268 3.5028560 3.4741906 3.5846897\n65  2.4718414 3.0757113 2.1587033 2.2338308 2.3622024 2.3280893 2.4779023\n66  3.5114100 4.2023803 3.2710854 3.3749074 3.4899857 3.4380227 3.5014283\n67  3.3090784 3.9115214 3.0298515 3.0413813 3.2341923 3.1843367 3.3316662\n68  2.9342802 3.5355339 2.6191602 2.6400758 2.7604347 2.7820855 2.8982753\n69  3.6972963 4.2965102 3.3555923 3.4423829 3.4899857 3.5355339 3.6578682\n70  2.8178006 3.3808283 2.4677925 2.5019992 2.5903668 2.6362853 2.7802878\n71  3.7067506 4.3416587 3.4568772 3.4957117 3.6945906 3.6124784 3.7456642\n72  2.9782545 3.6193922 2.6795522 2.7694765 2.8670542 2.8530685 2.9597297\n73  3.9560081 4.5825757 3.6496575 3.7080992 3.8105118 3.8209946 3.9319207\n74  3.5623026 4.1928511 3.2771939 3.3000000 3.4438351 3.4380227 3.5411862\n75  3.3136083 3.9786933 3.0413813 3.1272992 3.2357379 3.2109189 3.2939338\n76  3.4856850 4.1665333 3.2310989 3.3301652 3.4409301 3.4000000 3.4727511\n77  3.9484174 4.6216880 3.6823905 3.7696154 3.8678159 3.8522721 3.9217343\n78  4.1218928 4.7979162 3.8704005 3.9534795 4.0865633 4.0373258 4.1231056\n79  3.4146742 4.0484565 3.1320920 3.1843367 3.3331667 3.2969683 3.4190642\n80  2.4351591 3.0166206 2.0832667 2.1563859 2.2135944 2.2583180 2.3874673\n81  2.7622455 3.3015148 2.3958297 2.4310492 2.5019992 2.5651511 2.7202941\n82  2.6551836 3.1906112 2.2847319 2.3173260 2.3790755 2.4535688 2.6038433\n83  2.8089144 3.4146742 2.4859606 2.5475478 2.6495283 2.6570661 2.7856777\n84  4.0261644 4.6411206 3.7336309 3.7589892 3.9115214 3.8961519 4.0249224\n85  3.2848135 3.8652296 3.0033315 2.9949958 3.2031235 3.1527766 3.3136083\n86  3.3674916 4.0261644 3.1416556 3.1874755 3.3955854 3.2939338 3.4073450\n87  3.7907783 4.4766059 3.5496479 3.6373067 3.7682887 3.7148351 3.7868192\n88  3.5524639 4.1653331 3.2202484 3.3045423 3.3511192 3.3985291 3.5028560\n89  2.8827071 3.4899857 2.5961510 2.6172505 2.7964263 2.7531800 2.8948230\n90  2.9427878 3.4971417 2.5942244 2.6305893 2.7331301 2.7622455 2.9240383\n91  3.2280025 3.7907783 2.9034462 2.8948230 3.0413813 3.0610456 3.2109189\n92  3.4785054 4.1243181 3.2109189 3.2526912 3.4132096 3.3719431 3.4799425\n93  2.9308702 3.5270384 2.6000000 2.6551836 2.7495454 2.7712813 2.9017236\n94  2.3600847 2.7892651 1.9544820 1.9621417 2.0049938 2.1118712 2.3151674\n95  3.0577770 3.6414283 2.7386128 2.7622455 2.9017236 2.9017236 3.0495901\n96  2.9631065 3.5791060 2.6814175 2.6944387 2.8722813 2.8372522 2.9647934\n97  3.0166206 3.6262929 2.7221315 2.7495454 2.9103264 2.8827071 3.0182777\n98  3.2403703 3.8923001 2.9614186 3.0298515 3.1543621 3.1288976 3.2264532\n99  2.0445048 2.5039968 1.6401219 1.7088007 1.7406895 1.8083141 2.0174241\n100 2.9563491 3.5594943 2.6476405 2.6870058 2.8266588 2.8124722 2.9512709\n101 5.1244512 5.7680153 4.8918299 4.9355851 5.1410116 5.0467812 5.1759057\n102 4.0865633 4.6850827 3.7907783 3.8236109 3.9837169 3.9534795 4.1048752\n103 5.1710734 5.8506410 4.9284886 5.0059964 5.1487863 5.0941143 5.1797683\n104 4.5661800 5.2057660 4.3011626 4.3301270 4.5011110 4.4609416 4.5760245\n105 4.9173163 5.5686623 4.6636895 4.7180504 4.8877398 4.8259714 4.9426713\n106 5.9699246 6.6580778 5.7367238 5.8051701 5.9472683 5.9000000 5.9690870\n107 3.4885527 3.9749214 3.1559468 3.1352831 3.3045423 3.3045423 3.5128336\n108 5.5208695 6.1991935 5.2773099 5.3310412 5.4726593 5.4396691 5.5108983\n109 4.9446941 5.5874860 4.6583259 4.7106263 4.8311489 4.8270074 4.9295030\n110 5.4763126 6.1692787 5.2782573 5.3600373 5.5443665 5.4350713 5.5190579\n111 4.2107007 4.8805737 3.9724048 4.0509258 4.2166337 4.1352146 4.2402830\n112 4.4022721 5.0428167 4.1194660 4.1833001 4.3162484 4.2883563 4.4056782\n113 4.7191101 5.3907328 4.4698993 4.5530210 4.6968074 4.6368092 4.7349762\n114 4.0755368 4.6540305 3.7603191 3.8039453 3.9420807 3.9268308 4.0914545\n115 4.2731721 4.8713448 3.9887341 4.0546270 4.2154478 4.1533119 4.3185646\n116 4.4710178 5.1283526 4.2308392 4.3092923 4.4833024 4.3931765 4.5144213\n117 4.5177428 5.1749396 4.2638011 4.3092923 4.4743715 4.4249294 4.5276926\n118 6.0868711 6.7926431 5.9076222 5.9674115 6.1595454 6.0580525 6.1139185\n119 6.3827894 7.0590368 6.1261734 6.2016127 6.3206012 6.2952363 6.3741666\n120 4.0644803 4.6486557 3.7296112 3.7656341 3.8587563 3.9000000 4.0336088\n121 4.9739320 5.6524331 4.7423623 4.8270074 4.9869831 4.9061186 5.0029991\n122 3.8961519 4.4821870 3.6041643 3.6386811 3.8118237 3.7643060 3.9306488\n123 6.0967204 6.7808554 5.8532043 5.9203040 6.0481402 6.0183054 6.0844063\n124 3.9949969 4.6335731 3.7054015 3.7815341 3.9025633 3.8768544 3.9962482\n125 4.8218254 5.4954527 4.5956501 4.6551047 4.8373546 4.7539457 4.8518038\n126 5.1836281 5.8719673 4.9598387 5.0169712 5.1768716 5.1185936 5.1865210\n127 3.8561639 4.4944410 3.5721142 3.6455452 3.7788887 3.7416574 3.8652296\n128 3.8742741 4.5144213 3.6083237 3.6619667 3.8288379 3.7709415 3.8961519\n129 4.7116876 5.3525695 4.4395946 4.4966654 4.6486557 4.6054316 4.7275787\n130 4.9829710 5.6674509 4.7455242 4.8052055 4.9436828 4.9071377 4.9699095\n131 5.4323107 6.1139185 5.1826634 5.2583267 5.3795911 5.3497664 5.4203321\n132 5.8668561 6.5825527 5.6947344 5.7671483 5.9439044 5.8455111 5.8847260\n133 4.7486840 5.3888774 4.4766059 4.5398238 4.6904158 4.6432747 4.7686476\n134 4.0521599 4.6936127 3.7749172 3.8131352 3.9585351 3.9382737 4.0435133\n135 4.4743715 5.0842895 4.1844952 4.1785165 4.3370497 4.3416587 4.4575778\n136 5.6586217 6.3553127 5.4267854 5.5335341 5.6524331 5.5955339 5.6630381\n137 4.7265209 5.3786615 4.5022217 4.5585085 4.7634021 4.6572524 4.7822589\n138 4.4732538 5.1283526 4.2261093 4.2626283 4.4429720 4.3840620 4.4899889\n139 3.7616486 4.3954522 3.4928498 3.5454196 3.7148351 3.6551334 3.7868192\n140 4.6583259 5.3394756 4.4192760 4.5122057 4.6551047 4.5858478 4.6765372\n141 4.8713448 5.5371473 4.6281746 4.7148701 4.8723711 4.7937459 4.9050994\n142 4.4911023 5.1730069 4.2520583 4.3760713 4.5033321 4.4226689 4.5188494\n143 4.0865633 4.6850827 3.7907783 3.8236109 3.9837169 3.9534795 4.1048752\n144 5.1097945 5.7810034 4.8764741 4.9446941 5.1166395 5.0378567 5.1400389\n145 4.9769469 5.6462377 4.7497368 4.8321838 5.0079936 4.9112117 5.0219518\n146 4.5110974 5.1788030 4.2591079 4.3669211 4.5011110 4.4294469 4.5387223\n147 4.1689327 4.7947888 3.8639358 3.9446166 4.0484565 4.0385641 4.1653331\n148 4.3243497 4.9849774 4.0681691 4.1448764 4.2953463 4.2343831 4.3439613\n149 4.4855323 5.1351728 4.2602817 4.3150898 4.5221676 4.4147480 4.5420260\n150 4.0062451 4.6281746 3.7389838 3.7643060 3.9522146 3.8961519 4.0323690\n           29        30        31        32        33        34        35\n2                                                                        \n3                                                                        \n4                                                                        \n5                                                                        \n6                                                                        \n7                                                                        \n8                                                                        \n9                                                                        \n10                                                                       \n11                                                                       \n12                                                                       \n13                                                                       \n14                                                                       \n15                                                                       \n16                                                                       \n17                                                                       \n18                                                                       \n19                                                                       \n20                                                                       \n21                                                                       \n22                                                                       \n23                                                                       \n24                                                                       \n25                                                                       \n26                                                                       \n27                                                                       \n28                                                                       \n29                                                                       \n30  0.5744563                                                            \n31  0.5385165 0.1414214                                                  \n32  0.3000000 0.7615773 0.7071068                                        \n33  0.7141428 1.0392305 1.0862780 0.7874008                              \n34  0.8544004 1.2961481 1.3190906 0.8366600 0.3464102                    \n35  0.4358899 0.2449490 0.1414214 0.6164414 1.0488088 1.2569805          \n36  0.3464102 0.5000000 0.4582576 0.5744563 0.9746794 1.1357817 0.3316625\n37  0.3316625 0.9055385 0.8602325 0.3162278 0.7071068 0.7071068 0.7483315\n38  0.3741657 0.5000000 0.5567764 0.6244998 0.5916080 0.8544004 0.5196152\n39  0.9000000 0.4690416 0.5099020 1.1135529 1.3784049 1.6309506 0.5477226\n40  0.1414214 0.4582576 0.4358899 0.3605551 0.7141428 0.9000000 0.3605551\n41  0.2645751 0.5291503 0.5477226 0.4690416 0.6928203 0.8717798 0.4690416\n42  1.3114877 0.9746794 0.9110434 1.4387495 1.9519221 2.1517435 0.9219544\n43  0.8306624 0.4242641 0.5099020 1.0583005 1.2247449 1.4899664 0.5477226\n44  0.5000000 0.5830952 0.6000000 0.4690416 0.8124038 0.9695360 0.5830952\n45  0.6782330 0.8062258 0.8426150 0.6403124 0.5916080 0.7810250 0.8544004\n46  0.5744563 0.3162278 0.2449490 0.7348469 1.1916375 1.3928388 0.2000000\n47  0.4582576 0.7211103 0.7615773 0.5477226 0.3464102 0.6000000 0.7348469\n48  0.6324555 0.2236068 0.3000000 0.8544004 1.0908712 1.3453624 0.3316625\n49  0.3316625 0.7874008 0.7874008 0.3741657 0.4242641 0.5477226 0.7211103\n50  0.2236068 0.3741657 0.3464102 0.4690416 0.8366600 1.0295630 0.2449490\n51  3.9509493 4.0422766 3.9874804 3.7202150 3.9974992 3.9471509 4.0124805\n52  3.5749126 3.6041643 3.5594943 3.3541020 3.6345564 3.6207734 3.5986108\n53  4.1133928 4.1749251 4.1218928 3.8871583 4.1725292 4.1364236 4.1533119\n54  3.0446675 2.9017236 2.8460499 2.8774989 3.3196385 3.4029399 2.9086079\n55  3.7389838 3.7536649 3.6972963 3.5199432 3.8665230 3.8587563 3.7349699\n56  3.3808283 3.2832910 3.2434549 3.2031235 3.5185224 3.5805028 3.3075671\n57  3.7509999 3.7603191 3.7229021 3.5355339 3.7868192 3.7815341 3.7682887\n58  2.3108440 2.0518285 2.0074860 2.2022716 2.6514147 2.8017851 2.0904545\n59  3.6959437 3.7296112 3.6728735 3.4799425 3.8013156 3.7881394 3.7080992\n60  2.8600699 2.6888659 2.6551836 2.7000000 3.0675723 3.1670175 2.7294688\n61  2.6551836 2.4041631 2.3452079 2.5455844 3.0430248 3.1843367 2.4207437\n62  3.1906112 3.1511903 3.1096624 2.9849623 3.3090784 3.3361655 3.1606961\n63  3.0789609 3.0149627 2.9410882 2.9000000 3.3630343 3.4132096 2.9849623\n64  3.6592349 3.6193922 3.5749126 3.4612137 3.7656341 3.7920970 3.6276714\n65  2.5416530 2.4718414 2.4269322 2.3473389 2.7294688 2.7838822 2.4799194\n66  3.5749126 3.6455452 3.5902646 3.3451457 3.6537652 3.6180105 3.6180105\n67  3.4088121 3.3090784 3.2787193 3.2264532 3.5114100 3.5707142 3.3451457\n68  2.9631065 2.8896367 2.8372522 2.7874720 3.1448370 3.2046841 2.8930952\n69  3.7067506 3.6537652 3.5874782 3.5057096 3.9458839 3.9736633 3.6318040\n70  2.8337255 2.7202941 2.6645825 2.6645825 3.0789609 3.1559468 2.7239677\n71  3.8275318 3.7735925 3.7443290 3.6249138 3.8832976 3.9089641 3.8026307\n72  3.0232433 3.0149627 2.9580399 2.8124722 3.1921779 3.2078030 2.9983329\n73  3.9949969 3.9534795 3.8974351 3.7934153 4.1581246 4.1797129 3.9458839\n74  3.6138622 3.5679126 3.5199432 3.4249088 3.7349699 3.7696154 3.5735137\n75  3.3630343 3.3882149 3.3316662 3.1464265 3.4871192 3.4813790 3.3674916\n76  3.5440090 3.5958309 3.5397740 3.3181320 3.6428011 3.6180105 3.5707142\n77  3.9899875 4.0311289 3.9711459 3.7696154 4.1024383 4.0804412 4.0037482\n78  4.1976184 4.2249260 4.1749251 3.9736633 4.2743421 4.2532341 4.2130749\n79  3.4914181 3.4467376 3.4029399 3.2893768 3.6110940 3.6386811 3.4554305\n80  2.4372115 2.3685439 2.3043437 2.2561028 2.7037012 2.7658633 2.3515952\n81  2.7676705 2.6324893 2.5748786 2.6057628 3.0446675 3.1320920 2.6362853\n82  2.6495283 2.5159491 2.4556058 2.4919872 2.9376862 3.0282008 2.5159491\n83  2.8460499 2.7838822 2.7294688 2.6551836 3.0479501 3.0967725 2.7802878\n84  4.0963398 4.0187063 3.9761791 3.9051248 4.2201896 4.2602817 4.0360872\n85  3.3911650 3.2603681 3.2357379 3.2202484 3.4942810 3.5707142 3.3090784\n86  3.4942810 3.4785054 3.4496377 3.2863353 3.5185224 3.5298725 3.5014283\n87  3.8626416 3.9127995 3.8613469 3.6373067 3.9306488 3.9025633 3.8948684\n88  3.5538711 3.5242020 3.4554305 3.3526109 3.7815341 3.8026307 3.4957117\n89  2.9698485 2.8827071 2.8478062 2.7874720 3.0935417 3.1543621 2.9103264\n90  2.9782545 2.8460499 2.7964263 2.8071338 3.2155870 3.2954514 2.8600699\n91  3.2756679 3.1368774 3.0951575 3.1144823 3.4583233 3.5440090 3.1654384\n92  3.5566838 3.5270384 3.4842503 3.3555923 3.6496575 3.6715120 3.5355339\n93  2.9597297 2.8861739 2.8301943 2.7730849 3.1733263 3.2264532 2.8827071\n94  2.3452079 2.1047565 2.0518285 2.2293497 2.7073973 2.8478062 2.1283797\n95  3.1144823 3.0049958 2.9614186 2.9376862 3.2939338 3.3630343 3.0248967\n96  3.0413813 2.9664794 2.9291637 2.8600699 3.1559468 3.2124757 2.9899833\n97  3.0903074 3.0099834 2.9698485 2.9051678 3.2280025 3.2832910 3.0298515\n98  3.2969683 3.2924155 3.2403703 3.0886890 3.4234486 3.4351128 3.2832910\n99  2.0469489 1.8493242 1.7944358 1.9078784 2.4124676 2.5337719 1.8601075\n100 3.0182777 2.9359837 2.8913665 2.8319605 3.1843367 3.2403703 2.9495762\n101 5.2602281 5.2172790 5.1903757 5.0477718 5.2782573 5.2820451 5.2478567\n102 4.1749251 4.0743098 4.0373258 3.9824616 4.3034870 4.3497126 4.1012193\n103 5.2564246 5.2820451 5.2345009 5.0299105 5.3084838 5.2782573 5.2744668\n104 4.6540305 4.6054316 4.5661800 4.4530888 4.7275787 4.7465777 4.6227697\n105 5.0209561 4.9919936 4.9537864 4.8062459 5.0793700 5.0793700 5.0059964\n106 6.0473135 6.0876925 6.0382117 5.8223707 6.0811183 6.0415230 6.0761830\n107 3.5721142 3.3451457 3.3211444 3.4278273 3.7696154 3.8871583 3.4073450\n108 5.5883808 5.6124861 5.5623736 5.3721504 5.6373753 5.6124861 5.6035703\n109 4.9979996 4.9689033 4.9162994 4.7906158 5.1176166 5.1234754 4.9648766\n110 5.6053546 5.6524331 5.6169387 5.3712196 5.5830099 5.5344376 5.6559703\n111 4.3197222 4.3278170 4.2883563 4.0951190 4.3669211 4.3508620 4.3324358\n112 4.4754888 4.4407207 4.3931765 4.2638011 4.5912961 4.6000000 4.4429720\n113 4.8104054 4.8238988 4.7780749 4.5836667 4.8754487 4.8528342 4.8197510\n114 4.1545156 4.0360872 3.9962482 3.9635842 4.3208795 4.3737855 4.0607881\n115 4.3874822 4.2965102 4.2638011 4.1809090 4.5055521 4.5365185 4.3243497\n116 4.5934736 4.5814845 4.5464272 4.3692105 4.6400431 4.6292548 4.5945620\n117 4.6065171 4.5880279 4.5464272 4.3965896 4.6679760 4.6701178 4.5967380\n118 6.2048368 6.2745518 6.2377881 5.9774577 6.1473572 6.0901560 6.2745518\n119 6.4459289 6.4699304 6.4156060 6.2209324 6.5192024 6.4853681 6.4544558\n120 4.0902323 3.9924930 3.9370039 3.9064050 4.2965102 4.3474130 3.9949969\n121 5.0823223 5.1048996 5.0635956 4.8518038 5.1166395 5.0852729 5.1048996\n122 4.0012498 3.8858718 3.8548671 3.8105118 4.1255303 4.1785165 3.9217343\n123 6.1595454 6.1975802 6.1441029 5.9371710 6.2120850 6.1749494 6.1814238\n124 4.0632499 4.0323690 3.9824616 3.8496753 4.1976184 4.2071368 4.0298883\n125 4.9355851 4.9426713 4.9061186 4.7148701 4.9527770 4.9345719 4.9527770\n126 5.2687759 5.3075418 5.2621288 5.0487622 5.2867760 5.2545219 5.3018865\n127 3.9344631 3.9000000 3.8535698 3.7215588 4.0583248 4.0706265 3.9025633\n128 3.9724048 3.9306488 3.8923001 3.7643060 4.0583248 4.0755368 3.9458839\n129 4.8010416 4.7602521 4.7180504 4.5891176 4.8928519 4.9010203 4.7707442\n130 5.0477718 5.0882217 5.0368641 4.8301139 5.0941143 5.0645829 5.0744458\n131 5.4936327 5.5308227 5.4763126 5.2697249 5.5614746 5.5272054 5.5127126\n132 5.9741108 6.0728906 6.0315835 5.7428216 5.9160798 5.8446557 6.0613530\n133 4.8414874 4.8010416 4.7592016 4.6270941 4.9345719 4.9406477 4.8114447\n134 4.1170378 4.0816663 4.0348482 3.9166312 4.2213742 4.2402830 4.0865633\n135 4.5310043 4.4452222 4.4022721 4.3520110 4.6432747 4.6904158 4.4654227\n136 5.7367238 5.8051701 5.7515215 5.4972721 5.7844619 5.7253821 5.7810034\n137 4.8672374 4.8414874 4.8145612 4.6497312 4.8785244 4.8744230 4.8682646\n138 4.5716518 4.5464272 4.5088801 4.3646306 4.6184413 4.6249324 4.5617979\n139 3.8626416 3.8118237 3.7749172 3.6565011 3.9534795 3.9761791 3.8301436\n140 4.7528939 4.7853944 4.7391982 4.5210618 4.8062459 4.7728398 4.7770284\n141 4.9819675 4.9849774 4.9446941 4.7528939 5.0348784 5.0129831 4.9889879\n142 4.5912961 4.6378875 4.5902070 4.3485630 4.6572524 4.6119410 4.6227697\n143 4.1749251 4.0743098 4.0373258 3.9824616 4.3034870 4.3497126 4.1012193\n144 5.2211110 5.2258971 5.1874849 4.9969991 5.2507142 5.2297227 5.2335456\n145 5.1029403 5.1097945 5.0744458 4.8733972 5.1273775 5.1019604 5.1195703\n146 4.6108568 4.6270941 4.5814845 4.3760713 4.6893496 4.6615448 4.6206060\n147 4.2272923 4.1833001 4.1303753 4.0149720 4.3886217 4.4022721 4.1785165\n148 4.4192760 4.4136153 4.3703547 4.1976184 4.4944410 4.4855323 4.4158804\n149 4.6270941 4.5978256 4.5716518 4.4113490 4.6411206 4.6411206 4.6260134\n150 4.1109610 4.0360872 4.0037482 3.9153544 4.1892720 4.2249260 4.0657103\n           36        37        38        39        40        41        42\n2                                                                        \n3                                                                        \n4                                                                        \n5                                                                        \n6                                                                        \n7                                                                        \n8                                                                        \n9                                                                        \n10                                                                       \n11                                                                       \n12                                                                       \n13                                                                       \n14                                                                       \n15                                                                       \n16                                                                       \n17                                                                       \n18                                                                       \n19                                                                       \n20                                                                       \n21                                                                       \n22                                                                       \n23                                                                       \n24                                                                       \n25                                                                       \n26                                                                       \n27                                                                       \n28                                                                       \n29                                                                       \n30                                                                       \n31                                                                       \n32                                                                       \n33                                                                       \n34                                                                       \n35                                                                       \n36                                                                       \n37  0.5916080                                                            \n38  0.4690416 0.6244998                                                  \n39  0.6403124 1.2083046 0.7937254                                        \n40  0.3741657 0.4582576 0.3162278 0.8306624                              \n41  0.3316625 0.5099020 0.2645751 0.7874008 0.2645751                    \n42  1.0392305 1.5652476 1.3784049 0.7141428 1.2727922 1.3000000          \n43  0.6082763 1.1401754 0.6557439 0.2000000 0.7549834 0.6782330 0.9110434\n44  0.6403124 0.7071068 0.5567764 0.9273618 0.4358899 0.4242641 1.3674794\n45  0.9486833 0.8062258 0.6480741 1.2369317 0.6000000 0.6855655 1.7262677\n46  0.3605551 0.8717798 0.6403124 0.4242641 0.5196152 0.5477226 0.7681146\n47  0.7280110 0.5830952 0.3605551 1.1045361 0.4123106 0.4472136 1.6462078\n48  0.4472136 0.9539392 0.5099020 0.3000000 0.5477226 0.5196152 0.9165151\n49  0.6557439 0.3464102 0.4358899 1.1575837 0.3605551 0.4242641 1.6278821\n50  0.2236068 0.5477226 0.3316625 0.6782330 0.1732051 0.2449490 1.1269428\n51  4.2059482 3.9166312 4.1412558 4.4497191 3.9153544 4.1060930 4.4530888\n52  3.8131352 3.5818989 3.7389838 3.9962482 3.5242020 3.7054015 4.0124805\n53  4.3588989 4.0951190 4.2965102 4.5727453 4.0718546 4.2626283 4.5607017\n54  3.1796226 3.1527766 3.2015621 3.1937439 2.9715316 3.1591138 3.0479501\n55  3.9572718 3.7509999 3.9242834 4.1267421 3.6905284 3.8820098 4.0718546\n56  3.5707142 3.4612137 3.5114100 3.6304270 3.3060551 3.4957117 3.5958309\n57  3.9887341 3.7682887 3.8974351 4.1496988 3.6945906 3.8704005 4.1821047\n58  2.3874673 2.4919872 2.4207437 2.2912878 2.2181073 2.3895606 2.1587033\n59  3.9268308 3.6972963 3.8807216 4.1170378 3.6496575 3.8483763 4.0816663\n60  3.0033315 2.9883106 2.9732137 2.9883106 2.7748874 2.9410882 2.9359837\n61  2.7147744 2.8248894 2.7910571 2.6153394 2.5709920 2.7531800 2.3811762\n62  3.3970576 3.2419130 3.3406586 3.5142567 3.1272992 3.3030289 3.5071356\n63  3.2372828 3.1416556 3.2771939 3.3361655 3.0232433 3.2357379 3.1685959\n64  3.8716921 3.7040518 3.8091994 3.9874804 3.5958309 3.7868192 3.9610605\n65  2.7239677 2.6210685 2.6944387 2.8195744 2.4738634 2.6476405 2.8035692\n66  3.8183766 3.5566838 3.7656341 4.0435133 3.5355339 3.7242449 4.0373258\n67  3.6027767 3.4914181 3.5242020 3.6565011 3.3316662 3.5057096 3.6578682\n68  3.1527766 3.0347982 3.1176915 3.2449961 2.8948230 3.1000000 3.1906112\n69  3.8755645 3.7563280 3.9012818 3.9761791 3.6523965 3.8483763 3.8183766\n70  2.9916551 2.9291637 2.9916551 3.0430248 2.7622455 2.9597297 2.9410882\n71  4.0410395 3.8807216 3.9509493 4.1352146 3.7589892 3.9242834 4.1557190\n72  3.2280025 3.0577770 3.2062439 3.3808283 2.9698485 3.1606961 3.3316662\n73  4.1904654 4.0360872 4.1689327 4.3023250 3.9370039 4.1340053 4.2047592\n74  3.8236109 3.6619667 3.7656341 3.9357337 3.5496479 3.7509999 3.8961519\n75  3.5874782 3.3734256 3.5482390 3.7709415 3.3151169 3.5099858 3.7376463\n76  3.7788887 3.5369478 3.7336309 3.9862263 3.5014283 3.6918830 3.9648455\n77  4.2190046 3.9837169 4.1833001 4.4147480 3.9471509 4.1460825 4.3588989\n78  4.4294469 4.1988094 4.3726422 4.6076024 4.1496988 4.3347434 4.5803930\n79  3.6972963 3.5411862 3.6428011 3.8078866 3.4278273 3.6110940 3.7802116\n80  2.6038433 2.5159491 2.6191602 2.7073973 2.3748684 2.5748786 2.6191602\n81  2.9086079 2.8757608 2.9257478 2.9376862 2.6944387 2.8896367 2.8106939\n82  2.7892651 2.7586228 2.8106939 2.8231188 2.5768197 2.7766887 2.6944387\n83  3.0298515 2.9137605 3.0133038 3.1320920 2.7820855 2.9748950 3.0692019\n84  4.2918527 4.1581246 4.2379240 4.3646306 4.0274061 4.2154478 4.3058100\n85  3.5749126 3.4914181 3.4899857 3.5958309 3.3075671 3.4770677 3.6027767\n86  3.7269290 3.5298725 3.6207734 3.8626416 3.4307434 3.5972211 3.9230090\n87  4.1036569 3.8535698 4.0422766 4.3069711 3.8183766 4.0062451 4.2988371\n88  3.7349699 3.5916570 3.7536649 3.8626416 3.5028560 3.7067506 3.7215588\n89  3.1654384 3.0512293 3.0951575 3.2388269 2.8948230 3.0740852 3.2465366\n90  3.1288976 3.0822070 3.1256999 3.1559468 2.9034462 3.0886890 3.0545049\n91  3.4423829 3.3793490 3.4014703 3.4612137 3.1953091 3.3882149 3.3926391\n92  3.7749172 3.5972211 3.7054015 3.9012818 3.4942810 3.6823905 3.8923001\n93  3.1368774 3.0315013 3.1272992 3.2264532 2.8948230 3.0903074 3.1432467\n94  2.4207437 2.5159491 2.4738634 2.3430749 2.2583180 2.4351591 2.1771541\n95  3.2893768 3.2046841 3.2526912 3.3391616 3.0397368 3.2264532 3.2832910\n96  3.2449961 3.1144823 3.1701735 3.3316662 2.9681644 3.1559468 3.3391616\n97  3.2848135 3.1654384 3.2264532 3.3645208 3.0182777 3.2031235 3.3481338\n98  3.5142567 3.3256578 3.4684290 3.6687873 3.2419130 3.4351128 3.6400549\n99  2.1330729 2.2045408 2.1931712 2.1071308 1.9672316 2.1307276 1.9824228\n100 3.2046841 3.0951575 3.1638584 3.2832910 2.9478806 3.1336879 3.2449961\n101 5.4799635 5.2971691 5.3823787 5.5749439 5.1951901 5.3535035 5.5830099\n102 4.3577517 4.2497059 4.3069711 4.4022721 4.1024383 4.2755117 4.3416587\n103 5.4909016 5.2516664 5.4267854 5.6621551 5.2086467 5.3907328 5.6258333\n104 4.8682646 4.6957428 4.7937459 4.9668904 4.5891176 4.7738873 4.9335586\n105 5.2392748 5.0497525 5.1662365 5.3535035 4.9608467 5.1341991 5.3244718\n106 6.2904690 6.0299254 6.2201286 6.4761099 6.0024995 6.1919302 6.4366140\n107 3.6932371 3.7215588 3.6578682 3.6041643 3.4785054 3.6345564 3.5213634\n108 5.8266629 5.5821143 5.7576037 5.9983331 5.5398556 5.7358522 5.9539903\n109 5.2057660 5.0249378 5.1672043 5.3244718 4.9416596 5.1371198 5.2325902\n110 5.8566202 5.5883808 5.7567352 6.0440053 5.5587768 5.7210139 6.0712437\n111 4.5497253 4.3324358 4.4743715 4.7042534 4.2661458 4.4350874 4.7053161\n112 4.6808119 4.5099889 4.6378875 4.7937459 4.4170126 4.6000000 4.7254629\n113 5.0378567 4.8155997 4.9779514 5.1971146 4.7602521 4.9365980 5.1633323\n114 4.3197222 4.2391037 4.2918527 4.3439613 4.0816663 4.2508823 4.2497059\n115 4.5661800 4.4564560 4.5199558 4.6130250 4.3185646 4.4698993 4.5596052\n116 4.8145612 4.6162756 4.7391982 4.9446941 4.5365185 4.6957428 4.9416596\n117 4.8311489 4.6314145 4.7560488 4.9608467 4.5475268 4.7318073 4.9376108\n118 6.4730209 6.1717096 6.3545259 6.6850580 6.1611687 6.3364028 6.7275553\n119 6.6745786 6.4358372 6.6279710 6.8425142 6.4007812 6.5924199 6.7594378\n120 4.2579338 4.1617304 4.2532341 4.3104524 4.0236799 4.2213742 4.1701319\n121 5.3169540 5.0813384 5.2430907 5.4827001 5.0328918 5.2019227 5.4708317\n122 4.1773197 4.0865633 4.1218928 4.2047592 3.9255573 4.0865633 4.1605288\n123 6.3984373 6.1424751 6.3387696 6.5825527 6.1155539 6.3111013 6.5222695\n124 4.2649736 4.0987803 4.2320208 4.3840620 4.0062451 4.1880783 4.3139309\n125 5.1730069 4.9446941 5.0813384 5.3244718 4.8805737 5.0527220 5.3329167\n126 5.5172457 5.2564246 5.4313902 5.7035077 5.2211110 5.4101756 5.6956123\n127 4.1376322 3.9736633 4.0963398 4.2532341 3.8755645 4.0533936 4.2000000\n128 4.1833001 4.0162171 4.1158231 4.2906876 3.9089641 4.0828911 4.2731721\n129 5.0089919 4.8373546 4.9527770 5.1127292 4.7402532 4.9173163 5.0586559\n130 5.2915026 5.0348784 5.2211110 5.4817880 5.0019996 5.1990384 5.4516053\n131 5.7288742 5.4799635 5.6762664 5.9135438 5.4497706 5.6435804 5.8532043\n132 6.2489999 5.9245253 6.1359596 6.4915329 5.9371710 6.1155539 6.5352888\n133 5.0477718 4.8774994 4.9939964 5.1507281 4.7812132 4.9547957 5.0950957\n134 4.3301270 4.1545156 4.2720019 4.4474712 4.0558600 4.2497059 4.4011362\n135 4.7296934 4.5934736 4.6658333 4.7937459 4.4598206 4.6604721 4.7275787\n136 5.9791304 5.7043843 5.9270566 6.1919302 5.7000000 5.8804762 6.1457302\n137 5.0921508 4.8969378 4.9929951 5.2057660 4.8052055 4.9598387 5.2297227\n138 4.7979162 4.6010868 4.7116876 4.9203658 4.5099889 4.6914816 4.9132474\n139 4.0693980 3.9127995 4.0024992 4.1677332 3.7973675 3.9686270 4.1521079\n140 4.9869831 4.7476310 4.9244289 5.1652686 4.7063787 4.8805737 5.1429563\n141 5.2057660 4.9929951 5.1400389 5.3507009 4.9295030 5.0941143 5.3272882\n142 4.8207883 4.5793013 4.7728398 5.0109879 4.5497253 4.7127487 4.9839743\n143 4.3577517 4.2497059 4.3069711 4.4022721 4.1024383 4.2755117 4.3416587\n144 5.4534393 5.2297227 5.3721504 5.6008928 5.1672043 5.3376025 5.5910643\n145 5.3329167 5.1117512 5.2516664 5.4799635 5.0497525 5.2086467 5.4808758\n146 4.8311489 4.6162756 4.7833043 4.9909919 4.5628938 4.7275787 4.9537864\n147 4.4170126 4.2684892 4.4011362 4.5210618 4.1701319 4.3520110 4.4192760\n148 4.6400431 4.4384682 4.5793013 4.7812132 4.3646306 4.5387223 4.7528939\n149 4.8507731 4.6604721 4.7507894 4.9618545 4.5639895 4.7180504 4.9909919\n150 4.3150898 4.1725292 4.2355637 4.3874822 4.0398020 4.2130749 4.3749286\n           43        44        45        46        47        48        49\n2                                                                        \n3                                                                        \n4                                                                        \n5                                                                        \n6                                                                        \n7                                                                        \n8                                                                        \n9                                                                        \n10                                                                       \n11                                                                       \n12                                                                       \n13                                                                       \n14                                                                       \n15                                                                       \n16                                                                       \n17                                                                       \n18                                                                       \n19                                                                       \n20                                                                       \n21                                                                       \n22                                                                       \n23                                                                       \n24                                                                       \n25                                                                       \n26                                                                       \n27                                                                       \n28                                                                       \n29                                                                       \n30                                                                       \n31                                                                       \n32                                                                       \n33                                                                       \n34                                                                       \n35                                                                       \n36                                                                       \n37                                                                       \n38                                                                       \n39                                                                       \n40                                                                       \n41                                                                       \n42                                                                       \n43                                                                       \n44  0.8366600                                                            \n45  1.1180340 0.4795832                                                  \n46  0.4690416 0.6480741 0.9949874                                        \n47  0.9695360 0.5099020 0.3605551 0.8831761                              \n48  0.2236068 0.6708204 0.9486833 0.3000000 0.8062258                    \n49  1.0488088 0.5477226 0.5000000 0.8717798 0.2449490 0.8660254          \n50  0.6164414 0.4898979 0.7416198 0.3741657 0.5477226 0.4123106 0.5099020\n51  4.4452222 3.7868192 3.5791060 4.1206796 3.8755645 4.2532341 3.8496753\n52  3.9912404 3.3570821 3.1654384 3.6945906 3.4856850 3.8131352 3.4856850\n53  4.5727453 3.9331921 3.7336309 4.2555846 4.0385641 4.3863424 4.0211939\n54  3.2434549 2.8178006 2.7622455 2.9563491 3.0626786 3.0967725 3.0757113\n55  4.1412558 3.5425979 3.3852622 3.8223030 3.6945906 3.9623226 3.6810325\n56  3.6469165 3.1432467 2.9883106 3.3852622 3.3136083 3.4914181 3.3436507\n57  4.1400483 3.5128336 3.3120990 3.8626416 3.6414283 3.9686270 3.6551334\n58  2.3515952 2.0663978 2.0784610 2.1142375 2.3515952 2.2315914 2.3937418\n59  4.1267421 3.5227830 3.3406586 3.8065733 3.6428011 3.9420807 3.6262929\n60  3.0149627 2.5709920 2.4939928 2.7766887 2.8195744 2.8809721 2.8653098\n61  2.6981475 2.4535688 2.4839485 2.4372115 2.7386128 2.5787594 2.7604347\n62  3.5199432 2.9376862 2.7892651 3.2388269 3.1192948 3.3555923 3.1352831\n63  3.3896903 2.9342802 2.8530685 3.0545049 3.1256999 3.2186954 3.1032241\n64  3.9974992 3.4380227 3.2634338 3.7148351 3.5860842 3.8301436 3.6000000\n65  2.8337255 2.2825424 2.1817424 2.5475478 2.5039968 2.6720778 2.5199206\n66  4.0435133 3.3955854 3.2093613 3.7188708 3.5114100 3.8548671 3.4885527\n67  3.6619667 3.1352831 2.9765752 3.4190642 3.3151169 3.5128336 3.3570821\n68  3.2695565 2.7730849 2.6267851 2.9782545 2.9308702 3.1016125 2.9410882\n69  4.0211939 3.5142567 3.4263683 3.6945906 3.7242449 3.8548671 3.7080992\n70  3.0822070 2.6267851 2.5357445 2.7892651 2.8354894 2.9240383 2.8460499\n71  4.1303753 3.5468296 3.3719431 3.8807216 3.7148351 3.9761791 3.7496667\n72  3.3985291 2.8195744 2.6870058 3.0805844 2.9949958 3.2218007 2.9849623\n73  4.3301270 3.7934153 3.6523965 4.0236799 3.9635842 4.1617304 3.9610605\n74  3.9509493 3.4161382 3.2372828 3.6646964 3.5510562 3.7815341 3.5623026\n75  3.7815341 3.1780497 3.0116441 3.4612137 3.3166248 3.5986108 3.3015148\n76  3.9912404 3.3600595 3.1843367 3.6674242 3.4885527 3.8052595 3.4684290\n77  4.4283180 3.8223030 3.6469165 4.1000000 3.9458839 4.2426407 3.9230090\n78  4.6119410 3.9887341 3.8078866 4.3046487 4.1243181 4.4339599 4.1170378\n79  3.8183766 3.2526912 3.0967725 3.5355339 3.4234486 3.6537652 3.4380227\n80  2.7440845 2.2516660 2.1725561 2.4228083 2.4596748 2.5729361 2.4515301\n81  2.9849623 2.5592968 2.4939928 2.6925824 2.7874720 2.8319605 2.7982137\n82  2.8722813 2.4556058 2.3916521 2.5748786 2.6776856 2.7166155 2.6851443\n83  3.1575307 2.6324893 2.5179357 2.8548205 2.8266588 2.9899833 2.8301943\n84  4.3829214 3.8587563 3.7013511 4.1121770 4.0286474 4.2261093 4.0509258\n85  3.6013886 3.1032241 2.9495762 3.3778692 3.2908965 3.4612137 3.3451457\n86  3.8470768 3.2280025 3.0282008 3.5916570 3.3674916 3.6837481 3.3970576\n87  4.3069711 3.6701499 3.4785054 3.9937451 3.7881394 4.1231056 3.7749172\n88  3.9038443 3.3852622 3.2787193 3.5693137 3.5693137 3.7296112 3.5468296\n89  3.2449961 2.7110883 2.5573424 2.9883106 2.8896367 3.0886890 2.9240383\n90  3.1937439 2.7386128 2.6589472 2.9154759 2.9698485 3.0446675 2.9899833\n91  3.4899857 3.0430248 2.9137605 3.2341923 3.2310989 3.3421550 3.2649655\n92  3.9064050 3.3316662 3.1511903 3.6249138 3.4756294 3.7376463 3.4899857\n93  3.2572995 2.7513633 2.6419690 2.9546573 2.9478806 3.0919250 2.9512709\n94  2.4103942 2.1189620 2.1400935 2.1517435 2.4062419 2.2847319 2.4351591\n95  3.3630343 2.8722813 2.7495454 3.0935417 3.0708305 3.2093613 3.0967725\n96  3.3376639 2.8035692 2.6324893 3.0757113 2.9597297 3.1764760 2.9899833\n97  3.3763886 2.8460499 2.6962938 3.1080541 3.0232433 3.2171416 3.0495901\n98  3.6796739 3.0951575 2.9308702 3.3734256 3.2434549 3.5028560 3.2403703\n99  2.1633308 1.7944358 1.8411953 1.8814888 2.1118712 2.0273135 2.1307276\n100 3.3015148 2.7784888 2.6476405 3.0232433 2.9698485 3.1416556 2.9899833\n101 5.5677644 4.9699095 4.7864392 5.3235327 5.1322510 5.4175640 5.1672043\n102 4.4204072 3.9012818 3.7669616 4.1641326 4.1036569 4.2743421 4.1352146\n103 5.6656862 5.0398413 4.8507731 5.3646994 5.1710734 5.4909016 5.1672043\n104 4.9749372 4.4147480 4.2308392 4.7063787 4.5617979 4.8145612 4.5836667\n105 5.3572381 4.7644517 4.5880279 5.0852729 4.9234135 5.1971146 4.9416596\n106 6.4791975 5.8532043 5.6453521 6.1741396 5.9581876 6.3000000 5.9497899\n107 3.6373067 3.2603681 3.1906112 3.4394767 3.5199432 3.5270384 3.5846897\n108 6.0049979 5.4018515 5.1932649 5.7026310 5.5045436 5.8266629 5.4990908\n109 5.3469618 4.7927028 4.6281746 5.0467812 4.9446941 5.1788030 4.9446941\n110 6.0274373 5.3581713 5.1478151 5.7489129 5.4763126 5.8566202 5.4836119\n111 4.7000000 4.0681691 3.8884444 4.4170126 4.2201896 4.5321077 4.2296572\n112 4.8104054 4.2402830 4.0877867 4.5188494 4.4136153 4.6465041 4.4204072\n113 5.2009614 4.5771170 4.4022721 4.9040799 4.7275787 5.0299105 4.7275787\n114 4.3714986 3.8742741 3.7709415 4.1121770 4.1048752 4.2308392 4.1340053\n115 4.6260134 4.0767634 3.9661064 4.3749286 4.3104524 4.4866469 4.3428102\n116 4.9406477 4.3162484 4.1496988 4.6701178 4.4888751 4.7812132 4.5066617\n117 4.9648766 4.3760713 4.1856899 4.6850827 4.5133136 4.7979162 4.5265881\n118 6.6640828 5.9958319 5.7480431 6.3835727 6.0638272 6.4853681 6.0671245\n119 6.8571131 6.2513998 6.0671245 6.5436993 6.3796552 6.6805688 6.3671030\n120 4.3520110 3.8807216 3.7669616 4.0595566 4.0767634 4.1964271 4.0841156\n121 5.4790510 4.8373546 4.6529560 5.1903757 4.9819675 5.3094256 4.9859803\n122 4.2190046 3.7013511 3.5791060 3.9774364 3.9217343 4.0804412 3.9623226\n123 6.5916614 5.9791304 5.7758116 6.2793312 6.0835845 6.4109282 6.0704201\n124 4.4022721 3.8288379 3.6891733 4.1036569 4.0124805 4.2367440 4.0149720\n125 5.3169540 4.6893496 4.4877611 5.0428167 4.8197510 5.1497573 4.8342528\n126 5.7000000 5.0724747 4.8518038 5.4046276 5.1662365 5.5208695 5.1643005\n127 4.2673177 3.6891733 3.5468296 3.9761791 3.8742741 4.1036569 3.8820098\n128 4.2953463 3.7134889 3.5496479 4.0236799 3.8845849 4.1352146 3.9051248\n129 5.1244512 4.5497253 4.3897608 4.8456166 4.7222876 4.9648766 4.7370877\n130 5.4854353 4.8713448 4.6583259 5.1778374 4.9648766 5.3028294 4.9547957\n131 5.9236813 5.3094256 5.1166395 5.6080300 5.4249424 5.7428216 5.4101756\n132 6.4699304 5.7879185 5.5362442 6.1757591 5.8412327 6.2841069 5.8326666\n133 5.1623638 4.5836667 4.4294469 4.8836462 4.7634021 5.0039984 4.7780749\n134 4.4609416 3.9038443 3.7269290 4.1737274 4.0472213 4.2930176 4.0570926\n135 4.8145612 4.3197222 4.1388404 4.5497253 4.4586994 4.6572524 4.4833024\n136 6.1951594 5.5389530 5.3525695 5.8736701 5.6621551 6.0124870 5.6409219\n137 5.1942276 4.5760245 4.3920383 4.9457052 4.7370877 5.0408333 4.7686476\n138 4.9203658 4.3324358 4.1352146 4.6508064 4.4665423 4.7560488 4.4866469\n139 4.1725292 3.5958309 3.4380227 3.9051248 3.7749172 4.0149720 3.7986840\n140 5.1652686 4.5232732 4.3439613 4.8641546 4.6669048 4.9909919 4.6626173\n141 5.3507009 4.7212287 4.5541190 5.0665570 4.8877398 5.1865210 4.8959167\n142 5.0109879 4.3485630 4.1928511 4.7021272 4.5155288 4.8373546 4.5044423\n143 4.4204072 3.9012818 3.7669616 4.1641326 4.1036569 4.2743421 4.1352146\n144 5.5973208 4.9709154 4.7812132 5.3188345 5.1137071 5.4313902 5.1254268\n145 5.4726593 4.8321838 4.6540305 5.1990384 4.9909919 5.3103672 5.0049975\n146 4.9949975 4.3577517 4.2071368 4.6957428 4.5354162 4.8270074 4.5332108\n147 4.5475268 3.9924930 3.8716921 4.2449971 4.1928511 4.3852024 4.1928511\n148 4.7853944 4.1737274 4.0062451 4.4966654 4.3358967 4.6184413 4.3428102\n149 4.9497475 4.3335897 4.1509035 4.7031904 4.4966654 4.7968740 4.5299007\n150 4.3920383 3.8405729 3.6715120 4.1412558 4.0112342 4.2402830 4.0459857\n           50        51        52        53        54        55        56\n2                                                                        \n3                                                                        \n4                                                                        \n5                                                                        \n6                                                                        \n7                                                                        \n8                                                                        \n9                                                                        \n10                                                                       \n11                                                                       \n12                                                                       \n13                                                                       \n14                                                                       \n15                                                                       \n16                                                                       \n17                                                                       \n18                                                                       \n19                                                                       \n20                                                                       \n21                                                                       \n22                                                                       \n23                                                                       \n24                                                                       \n25                                                                       \n26                                                                       \n27                                                                       \n28                                                                       \n29                                                                       \n30                                                                       \n31                                                                       \n32                                                                       \n33                                                                       \n34                                                                       \n35                                                                       \n36                                                                       \n37                                                                       \n38                                                                       \n39                                                                       \n40                                                                       \n41                                                                       \n42                                                                       \n43                                                                       \n44                                                                       \n45                                                                       \n46                                                                       \n47                                                                       \n48                                                                       \n49                                                                       \n50                                                                       \n51  4.0422766                                                            \n52  3.6428011 0.6403124                                                  \n53  4.1940434 0.2645751 0.6480741                                        \n54  3.0364453 1.8867962 1.3820275 1.8574176                              \n55  3.7986840 0.6557439 0.4242641 0.5830952 1.2845233                    \n56  3.4000000 1.3784049 0.8306624 1.3152946 0.7348469 0.8306624          \n57  3.8131352 0.7348469 0.2645751 0.6708204 1.4899664 0.5567764 0.8602325\n58  2.2516660 2.6776856 2.1400935 2.7018512 0.9746794 2.1587033 1.5264338\n59  3.7643060 0.5196152 0.4242641 0.5099020 1.3892444 0.2449490 0.9110434\n60  2.8442925 2.0322401 1.4352700 2.0149442 0.5196152 1.4832397 0.7937254\n61  2.5961510 2.6532998 2.1563859 2.6514147 0.8246211 2.0856654 1.4899664\n62  3.2295511 1.2288206 0.6164414 1.2247449 0.8544004 0.7483315 0.4582576\n63  3.1000000 1.6278821 1.2884099 1.6370706 0.5916080 1.1045361 0.8888194\n64  3.7013511 0.9486833 0.4795832 0.8544004 1.1045361 0.4358899 0.4690416\n65  2.5632011 1.8083141 1.2569805 1.8601075 0.7280110 1.3638182 0.9110434\n66  3.6565011 0.4358899 0.3464102 0.5477226 1.5000000 0.4242641 1.0535654\n67  3.4278273 1.4317821 0.8246211 1.3638182 0.8888194 0.9273618 0.3000000\n68  2.9883106 1.4866069 1.0099505 1.5033296 0.5916080 1.0000000 0.5196152\n69  3.7349699 1.3000000 1.0198039 1.2083046 0.8888194 0.6782330 0.8062258\n70  2.8390139 1.7832555 1.2845233 1.7916473 0.3162278 1.2449900 0.7071068\n71  3.8652296 1.1747340 0.6557439 1.0535654 1.3638182 0.8062258 0.7348469\n72  3.0708305 1.2124356 0.7348469 1.2569805 0.7810250 0.7483315 0.6403124\n73  4.0336088 1.0148892 0.8124038 0.8485281 1.2369317 0.4690416 0.8062258\n74  3.6537652 1.0049876 0.6164414 0.9273618 1.0535654 0.5099020 0.4582576\n75  3.4263683 0.7874008 0.4123106 0.8306624 1.1224972 0.3872983 0.7348469\n76  3.6180105 0.5385165 0.3162278 0.6000000 1.3674794 0.3162278 0.9327379\n77  4.0607881 0.4582576 0.6480741 0.3464102 1.6093477 0.3741657 1.1445523\n78  4.2649736 0.5567764 0.6480741 0.3162278 1.7578396 0.5291503 1.2041595\n79  3.5298725 1.0677078 0.5000000 1.0049876 0.9486833 0.5196152 0.3741657\n80  2.4556058 1.9104973 1.4491377 1.9748418 0.6855655 1.4628739 1.0630146\n81  2.7622455 1.9467922 1.4491377 1.9544820 0.3000000 1.4000000 0.8544004\n82  2.6438608 2.0124612 1.5297059 2.0346990 0.4358899 1.4899664 0.9643651\n83  2.8722813 1.5394804 1.0295630 1.5684387 0.5196152 1.0392305 0.6244998\n84  4.1243181 1.2041595 0.8831761 1.0099505 1.3076697 0.7211103 0.7416198\n85  3.3985291 1.6278821 1.0198039 1.5556349 0.8888194 1.1224972 0.4123106\n86  3.5468296 1.0583005 0.4582576 1.0344080 1.3416408 0.7937254 0.7348469\n87  3.9382737 0.3316625 0.3741657 0.2828427 1.6155494 0.3741657 1.0816654\n88  3.5916570 1.1832160 0.9327379 1.1357817 0.8944272 0.6082763 0.7874008\n89  2.9916551 1.5394804 0.9380832 1.5427249 0.7141428 1.0677078 0.4582576\n90  2.9765752 1.8000000 1.2609520 1.7804494 0.2000000 1.2206556 0.6164414\n91  3.2771939 1.6552945 1.1269428 1.5968719 0.5099020 1.0816654 0.3162278\n92  3.6027767 0.9273618 0.3872983 0.8660254 1.1045361 0.4582576 0.4690416\n93  2.9816103 1.5264338 1.0295630 1.5362291 0.4358899 0.9899495 0.5567764\n94  2.2912878 2.6324893 2.1118712 2.6570661 0.9110434 2.1071308 1.5066519\n95  3.1256999 1.5716234 1.0099505 1.5427249 0.4582576 1.0099505 0.3316625\n96  3.0692019 1.4212670 0.8426150 1.4247807 0.7615773 0.9643651 0.3741657\n97  3.1144823 1.4282857 0.8426150 1.4177447 0.6633250 0.9219544 0.3162278\n98  3.3496268 0.9486833 0.4582576 0.9643651 0.9695360 0.4795832 0.5477226\n99  2.0049938 2.6608269 2.1424285 2.7147744 1.1135529 2.1840330 1.6552945\n100 3.0397368 1.4899664 0.9219544 1.4866069 0.5477226 0.9643651 0.4000000\n101 5.3047149 1.8439089 1.8083141 1.6155494 2.6608269 1.8027756 2.0736441\n102 4.1928511 1.4491377 1.0630146 1.2529964 1.3490738 0.9539392 0.8602325\n103 5.3254108 1.4071247 1.6881943 1.1874342 2.7018512 1.5652476 2.1447611\n104 4.6957428 1.2449900 1.1832160 0.9899495 1.9519221 1.0677078 1.3527749\n105 5.0695167 1.4628739 1.4933185 1.2124356 2.3537205 1.4035669 1.7832555\n106 6.1237244 2.1213203 2.5000000 1.9364917 3.5071356 2.3685439 2.9495762\n107 3.5369478 2.2427661 1.6673332 2.1354157 0.9000000 1.6431677 0.9433981\n108 5.6586217 1.7029386 2.0566964 1.5000000 3.0232433 1.9052559 2.4617067\n109 5.0447993 1.3964240 1.5362291 1.1401754 2.2293497 1.2884099 1.7406895\n110 5.6841886 1.8357560 2.0880613 1.6673332 3.2295511 2.0928450 2.6248809\n111 4.3806392 0.8774964 0.7874008 0.6782330 1.8734994 0.8124038 1.2845233\n112 4.5188494 1.1045361 1.0246951 0.8544004 1.7378147 0.8185353 1.2247449\n113 4.8733972 1.1000000 1.2489996 0.8602325 2.2516660 1.1401754 1.7000000\n114 4.1629317 1.6217275 1.2165525 1.4352700 1.2529964 1.0677078 0.9110434\n115 4.4068129 1.6613248 1.3000000 1.4662878 1.6613248 1.2449900 1.2569805\n116 4.6465041 1.2369317 1.1313708 1.0295630 2.0760539 1.1401754 1.5132746\n117 4.6593991 1.0440307 1.0677078 0.7874008 1.9974984 0.9695360 1.3892444\n118 6.2952363 2.3430749 2.7166155 2.2045408 3.8974351 2.7092434 3.2634338\n119 6.5145990 2.5495098 2.9068884 2.3515952 3.7868192 2.7221315 3.2863353\n120 4.1060930 1.4491377 1.1874342 1.2767145 1.1401754 0.8774964 0.8602325\n121 5.1497573 1.3490738 1.5264338 1.1357817 2.5806976 1.4730920 2.0099751\n122 4.0124805 1.5874508 1.1000000 1.4247807 1.2489996 1.0723805 0.8124038\n123 6.2345810 2.2383029 2.6343880 2.0542639 3.5874782 2.4698178 3.0545049\n124 4.1060930 0.9695360 0.7141428 0.7810250 1.3638182 0.4795832 0.8831761\n125 4.9989999 1.2609520 1.3784049 1.0392305 2.4433583 1.3638182 1.8248288\n126 5.3450912 1.3747727 1.7262677 1.1832160 2.8195744 1.6431677 2.2158520\n127 3.9761791 0.9848858 0.6164414 0.8246211 1.2767145 0.4690416 0.7681146\n128 4.0137264 1.0246951 0.6164414 0.8602325 1.3820275 0.6164414 0.7810250\n129 4.8435524 1.3490738 1.3152946 1.0908712 2.0639767 1.1704700 1.5297059\n130 5.1234754 1.1532563 1.5427249 0.9591663 2.5903668 1.4071247 2.0174241\n131 5.5668663 1.5905974 1.9697716 1.3928388 2.9376862 1.7944358 2.4103942\n132 6.0745370 2.1023796 2.5436195 1.9974984 3.7762415 2.5396850 3.1527766\n133 4.8836462 1.4035669 1.3638182 1.1489125 2.1047565 1.2247449 1.5842980\n134 4.1617304 0.9055385 0.7280110 0.7000000 1.4628739 0.5385165 0.8717798\n135 4.5585085 1.4071247 1.2922848 1.1789826 1.7378147 1.1000000 1.1916375\n136 5.8206529 1.8165902 2.2203603 1.6522712 3.2771939 2.0904545 2.7568098\n137 4.9173163 1.5297059 1.4387495 1.3228757 2.3706539 1.4866069 1.7720045\n138 4.6227697 1.0816654 1.0488088 0.8366600 1.9874607 1.0000000 1.3527749\n139 3.9000000 1.1000000 0.6164414 0.9591663 1.2767145 0.6480741 0.6855655\n140 4.8228622 1.0000000 1.1958261 0.7810250 2.2803509 1.1180340 1.7262677\n141 5.0408333 1.3820275 1.4560220 1.1575837 2.4186773 1.3928388 1.8734994\n142 4.6636895 0.9949874 1.1224972 0.8246211 2.1931712 1.0677078 1.7000000\n143 4.1928511 1.4491377 1.0630146 1.2529964 1.3490738 0.9539392 0.8602325\n144 5.2829916 1.5132746 1.6613248 1.2884099 2.6664583 1.6062378 2.0808652\n145 5.1643005 1.5198684 1.5937377 1.3114877 2.6019224 1.5811388 2.0322401\n146 4.6722586 1.0908712 1.1224972 0.8831761 2.0904545 1.0392305 1.5905974\n147 4.2638011 1.1489125 0.9539392 0.9433981 1.4282857 0.6708204 1.0295630\n148 4.4743715 0.9486833 0.8888194 0.7141428 1.8493242 0.8062258 1.2884099\n149 4.6754679 1.4071247 1.2369317 1.2124356 2.1587033 1.3152946 1.5556349\n150 4.1412558 1.2529964 0.8602325 1.0677078 1.4525839 0.8602325 0.8306624\n           57        58        59        60        61        62        63\n2                                                                        \n3                                                                        \n4                                                                        \n5                                                                        \n6                                                                        \n7                                                                        \n8                                                                        \n9                                                                        \n10                                                                       \n11                                                                       \n12                                                                       \n13                                                                       \n14                                                                       \n15                                                                       \n16                                                                       \n17                                                                       \n18                                                                       \n19                                                                       \n20                                                                       \n21                                                                       \n22                                                                       \n23                                                                       \n24                                                                       \n25                                                                       \n26                                                                       \n27                                                                       \n28                                                                       \n29                                                                       \n30                                                                       \n31                                                                       \n32                                                                       \n33                                                                       \n34                                                                       \n35                                                                       \n36                                                                       \n37                                                                       \n38                                                                       \n39                                                                       \n40                                                                       \n41                                                                       \n42                                                                       \n43                                                                       \n44                                                                       \n45                                                                       \n46                                                                       \n47                                                                       \n48                                                                       \n49                                                                       \n50                                                                       \n51                                                                       \n52                                                                       \n53                                                                       \n54                                                                       \n55                                                                       \n56                                                                       \n57                                                                       \n58  2.2561028                                                            \n59  0.5916080 2.2181073                                                  \n60  1.5000000 0.8366600 1.5811388                                        \n61  2.2759613 0.4582576 2.1610183 0.9219544                              \n62  0.7141428 1.5556349 0.8366600 0.8246211 1.5968719                    \n63  1.4662878 1.3190906 1.1401754 1.0295630 1.1357817 0.9695360          \n64  0.4898979 1.9519221 0.5196152 1.2206556 1.9026298 0.5567764 1.0723805\n65  1.3964240 0.9591663 1.4142136 0.5477226 1.1269428 0.7071068 0.9486833\n66  0.5744563 2.2583180 0.3162278 1.6309506 2.2516660 0.8366600 1.2727922\n67  0.7937254 1.5937377 1.0295630 0.7874008 1.6155494 0.4242641 1.1401754\n68  1.1532563 1.2409674 1.0099505 0.7483315 1.2206556 0.6000000 0.5477226\n69  1.1269428 1.8493242 0.8366600 1.2727922 1.6522712 0.9055385 0.7348469\n70  1.4212670 0.9327379 1.3000000 0.5385165 0.8831761 0.7681146 0.5196152\n71  0.4690416 2.1283797 0.9327379 1.3076697 2.1400935 0.7000000 1.5132746\n72  0.9327379 1.4764823 0.7874008 0.9165151 1.4798649 0.4000000 0.6782330\n73  0.8306624 2.1863211 0.6164414 1.5033296 2.0371549 0.9486833 1.1135529\n74  0.6708204 1.8973666 0.5291503 1.2247449 1.8248288 0.6480741 0.9486833\n75  0.6480741 1.8947295 0.3605551 1.2845233 1.8708287 0.5567764 0.9110434\n76  0.5567764 2.1494185 0.2449490 1.5165751 2.1283797 0.7348469 1.1489125\n77  0.7416198 2.4859606 0.3162278 1.8384776 2.3937418 1.1045361 1.3416408\n78  0.5916080 2.6419690 0.5830952 1.9078784 2.5748786 1.1489125 1.6186414\n79  0.5477226 1.7748239 0.6403124 1.0246951 1.7492856 0.3316625 0.9949874\n80  1.6278821 0.8485281 1.4832397 0.7615773 0.9219544 0.9695360 0.7071068\n81  1.5842980 0.7874008 1.4628739 0.5291503 0.7141428 0.9165151 0.5830952\n82  1.6763055 0.7211103 1.5362291 0.6164414 0.6708204 1.0099505 0.6164414\n83  1.1874342 1.1401754 1.0862780 0.6324555 1.1532563 0.5291503 0.5830952\n84  0.7810250 2.2135944 0.8602325 1.4560220 2.1000000 0.9591663 1.3490738\n85  0.9746794 1.5165751 1.2247449 0.7071068 1.5524175 0.5830952 1.2247449\n86  0.3741657 2.0024984 0.8426150 1.2369317 2.0784610 0.5196152 1.4317821\n87  0.4582576 2.4372115 0.3162278 1.7492856 2.4062419 0.9486833 1.4282857\n88  1.0862780 1.8083141 0.7000000 1.2767145 1.6370706 0.8544004 0.5916080\n89  1.0148892 1.2569805 1.1224972 0.5477226 1.3453624 0.3741657 0.9486833\n90  1.3638182 0.9746794 1.3152946 0.3872983 0.9165151 0.7000000 0.6557439\n91  1.1747340 1.2845233 1.1618950 0.6244998 1.2083046 0.6708204 0.7810250\n92  0.4242641 1.9104973 0.5196152 1.1789826 1.8920888 0.4582576 1.0816654\n93  1.1789826 1.1747340 1.0488088 0.6480741 1.1357817 0.5477226 0.4898979\n94  2.2383029 0.1414214 2.1679483 0.8485281 0.3605551 1.5362291 1.2247449\n95  1.0908712 1.2165525 1.0954451 0.5099020 1.1958261 0.4690416 0.7348469\n96  0.9273618 1.3601471 0.9949874 0.6855655 1.4212670 0.3605551 0.9000000\n97  0.9273618 1.3379088 0.9848858 0.6244998 1.3711309 0.3000000 0.8426150\n98  0.6480741 1.7406895 0.5000000 1.1000000 1.7262677 0.3872983 0.8426150\n99  2.2847319 0.3872983 2.2383029 0.9746794 0.7211103 1.5779734 1.3820275\n100 1.0295630 1.2369317 1.0344080 0.5567764 1.2569805 0.3605551 0.7416198\n101 1.5811388 3.5085610 1.9104973 2.6814175 3.4467376 2.1189620 2.7477263\n102 0.9273618 2.2248595 1.1357817 1.4317821 2.1213203 1.0344080 1.5198684\n103 1.5556349 3.6290495 1.6093477 2.8618176 3.5185224 2.1656408 2.5826343\n104 1.0049876 2.8530685 1.1575837 2.0736441 2.7477263 1.4899664 1.9442222\n105 1.3038405 3.2572995 1.5066519 2.4556058 3.1591138 1.8466185 2.3600847\n106 2.3748684 4.4440972 2.3769729 3.6918830 4.3104524 3.0016662 3.3421550\n107 1.6278821 1.3928388 1.7944358 0.7615773 1.3228757 1.1747340 1.4282857\n108 1.9390719 3.9560081 1.9052559 3.2202484 3.8183766 2.5436195 2.8478062\n109 1.4317821 3.1843367 1.3638182 2.4617067 3.0116441 1.8814888 2.1118712\n110 1.9157244 4.1012193 2.1307276 3.2954514 4.0509258 2.5806976 3.1717503\n111 0.6082763 2.7276363 0.9165151 1.9339080 2.6925824 1.2083046 1.8601075\n112 0.9055385 2.6739484 0.9643651 1.9104973 2.5495098 1.3076697 1.7058722\n113 1.1090537 3.1654384 1.2247449 2.3874673 3.0740852 1.6911535 2.1771541\n114 1.1180340 2.1307276 1.2727922 1.3638182 1.9974984 1.0862780 1.4764823\n115 1.1401754 2.4839485 1.4525839 1.6763055 2.4083189 1.2922848 1.8894444\n116 0.9327379 2.9291637 1.2727922 2.1118712 2.8861739 1.4628739 2.1307276\n117 0.9000000 2.8982753 1.0392305 2.1213203 2.8089144 1.4628739 1.9442222\n118 2.5632011 4.7749346 2.6907248 3.9924930 4.7127487 3.2588341 3.7656341\n119 2.7892651 4.7465777 2.7549955 4.0087405 4.5716518 3.3660065 3.6262929\n120 1.1832160 2.0952327 1.0246951 1.4525839 1.8814888 1.1357817 1.1180340\n121 1.3638182 3.4770677 1.5459625 2.6814175 3.4029399 1.9824228 2.5278449\n122 0.9695360 2.0518285 1.2609520 1.2369317 1.9899749 0.9327379 1.5264338\n123 2.5238859 4.5343136 2.4738634 3.8026307 4.3783559 3.1272992 3.3970576\n124 0.6633250 2.2912878 0.6855655 1.5394804 2.1863211 0.9110434 1.3379088\n125 1.1874342 3.3196385 1.4212670 2.5179357 3.2603681 1.8275667 2.4083189\n126 1.5968719 3.7229021 1.6309506 2.9698485 3.6290495 2.2494444 2.6608269\n127 0.5567764 2.1771541 0.6782330 1.4071247 2.1000000 0.7615773 1.2961481\n128 0.4582576 2.2360680 0.7745967 1.4352700 2.1931712 0.7874008 1.4491377\n129 1.1489125 2.9849623 1.3000000 2.1977261 2.8670542 1.6155494 2.0712315\n130 1.4525839 3.5014283 1.3784049 2.7820855 3.3896903 2.0639767 2.3832751\n131 1.8734994 3.8807216 1.8055470 3.1527766 3.7376463 2.4617067 2.7459060\n132 2.4207437 4.6443514 2.4959968 3.8871583 4.5891176 3.1192948 3.5958309\n133 1.1958261 3.0232433 1.3638182 2.2315914 2.9068884 1.6552945 2.1260292\n134 0.6480741 2.3685439 0.6244998 1.6340135 2.2671568 1.0049876 1.3820275\n135 1.1747340 2.6324893 1.1618950 1.9261360 2.4779023 1.4730920 1.7000000\n136 2.1213203 4.2107007 2.1142375 3.4626579 4.0914545 2.7367864 3.1032241\n137 1.2083046 3.1953091 1.5968719 2.3643181 3.1654384 1.7578396 2.4596748\n138 0.8544004 2.8670542 1.0677078 2.0784610 2.7946377 1.4282857 1.9646883\n139 0.4795832 2.1118712 0.8124038 1.3038405 2.0808652 0.6782330 1.3856406\n140 1.0677078 3.1796226 1.1874342 2.4062419 3.1048349 1.6763055 2.1886069\n141 1.2845233 3.3136083 1.5033296 2.5099801 3.2357379 1.8493242 2.4124676\n142 1.0246951 3.0692019 1.1747340 2.3021729 3.0116441 1.5684387 2.1260292\n143 0.9273618 2.2248595 1.1357817 1.4317821 2.1213203 1.0344080 1.5198684\n144 1.4798649 3.5637059 1.6792856 2.7604347 3.4828150 2.0928450 2.6343880\n145 1.4035669 3.4727511 1.6792856 2.6570661 3.4161382 1.9949937 2.6153394\n146 0.9949874 2.9832868 1.1747340 2.2000000 2.9103264 1.5099669 2.0639767\n147 0.9055385 2.3811762 0.8774964 1.6462078 2.2360680 1.1000000 1.4106736\n148 0.7348469 2.7440845 0.9327379 1.9570386 2.6720778 1.2688578 1.8248288\n149 1.0000000 2.9647934 1.4317821 2.1330729 2.9495762 1.5264338 2.2649503\n150 0.6708204 2.2891046 1.0000000 1.4764823 2.2383029 0.9486833 1.5811388\n           64        65        66        67        68        69        70\n2                                                                        \n3                                                                        \n4                                                                        \n5                                                                        \n6                                                                        \n7                                                                        \n8                                                                        \n9                                                                        \n10                                                                       \n11                                                                       \n12                                                                       \n13                                                                       \n14                                                                       \n15                                                                       \n16                                                                       \n17                                                                       \n18                                                                       \n19                                                                       \n20                                                                       \n21                                                                       \n22                                                                       \n23                                                                       \n24                                                                       \n25                                                                       \n26                                                                       \n27                                                                       \n28                                                                       \n29                                                                       \n30                                                                       \n31                                                                       \n32                                                                       \n33                                                                       \n34                                                                       \n35                                                                       \n36                                                                       \n37                                                                       \n38                                                                       \n39                                                                       \n40                                                                       \n41                                                                       \n42                                                                       \n43                                                                       \n44                                                                       \n45                                                                       \n46                                                                       \n47                                                                       \n48                                                                       \n49                                                                       \n50                                                                       \n51                                                                       \n52                                                                       \n53                                                                       \n54                                                                       \n55                                                                       \n56                                                                       \n57                                                                       \n58                                                                       \n59                                                                       \n60                                                                       \n61                                                                       \n62                                                                       \n63                                                                       \n64                                                                       \n65  1.2124356                                                            \n66  0.7000000 1.3784049                                                  \n67  0.5567764 0.9273618 1.1135529                                        \n68  0.8062258 0.6480741 1.1045361 0.7348469                              \n69  0.7416198 1.3038405 1.0392305 1.0000000 0.9055385                    \n70  1.0677078 0.5385165 1.3820275 0.8774964 0.3605551 0.9848858          \n71  0.5477226 1.3674794 0.9848858 0.5567764 1.1789826 1.1269428 1.3711309\n72  0.7141428 0.6480741 0.7874008 0.7615773 0.4472136 0.8124038 0.6244998\n73  0.5000000 1.5427249 0.8831761 0.9486833 1.0862780 0.5099020 1.2845233\n74  0.2236068 1.2165525 0.7615773 0.6480741 0.7071068 0.7071068 0.9949874\n75  0.5099020 1.0630146 0.3872983 0.8544004 0.7280110 0.7810250 1.0000000\n76  0.5916080 1.2884099 0.1414214 1.0099505 0.9899495 0.9055385 1.2609520\n77  0.7141428 1.7029386 0.5099020 1.2569805 1.2884099 0.9055385 1.5588457\n78  0.7416198 1.8275667 0.6782330 1.2247449 1.4832397 1.0862780 1.7406895\n79  0.2449490 1.0049876 0.7416198 0.4123106 0.7000000 0.7280110 0.9165151\n80  1.3601471 0.4472136 1.4899664 1.1916375 0.6164414 1.2884099 0.4358899\n81  1.2288206 0.5830952 1.5427249 1.0099505 0.5291503 1.0862780 0.1732051\n82  1.3304135 0.6000000 1.6062378 1.1224972 0.5830952 1.1916375 0.2645751\n83  0.9000000 0.4242641 1.1224972 0.7615773 0.2828427 0.9273618 0.3000000\n84  0.5000000 1.5937377 1.0862780 0.7874008 1.1832160 0.8124038 1.3747727\n85  0.7416198 0.9486833 1.3114877 0.2000000 0.8124038 1.1313708 0.9000000\n86  0.5830952 1.1445523 0.7937254 0.5744563 1.0246951 1.2206556 1.2569805\n87  0.6403124 1.5811388 0.3162278 1.1224972 1.2569805 1.0488088 1.5394804\n88  0.7071068 1.2206556 0.9000000 1.0148892 0.7681146 0.2645751 0.9055385\n89  0.7937254 0.5099020 1.1489125 0.4472136 0.4690416 1.0954451 0.5744563\n90  1.0099505 0.5744563 1.4035669 0.7416198 0.4795832 0.9327379 0.2449490\n91  0.7615773 0.8660254 1.3152946 0.5196152 0.4795832 0.8660254 0.5291503\n92  0.1414214 1.1269428 0.6403124 0.5196152 0.7681146 0.8185353 1.0392305\n93  0.8426150 0.5477226 1.1224972 0.7348469 0.2449490 0.8124038 0.2645751\n94  1.9209373 0.9486833 2.2135944 1.5937377 1.2000000 1.7720045 0.8774964\n95  0.7416198 0.6324555 1.1916375 0.4690416 0.3741657 0.8602325 0.4123106\n96  0.6782330 0.6244998 1.0440307 0.4358899 0.3872983 1.0344080 0.6000000\n97  0.6480741 0.6082763 1.0440307 0.3872983 0.3872983 0.9327379 0.5477226\n98  0.4242641 0.9219544 0.5567764 0.6708204 0.5744563 0.7549834 0.8485281\n99  2.0346990 0.9000000 2.2293497 1.7058722 1.3228757 1.9261360 1.0295630\n100 0.7348469 0.5196152 1.0908712 0.5000000 0.3316625 0.9000000 0.4242641\n101 1.7606817 2.8017851 1.9924859 1.9570386 2.5436195 2.1142375 2.7386128\n102 0.7348469 1.6401219 1.3076697 0.8062258 1.3453624 0.9643651 1.4696938\n103 1.7146428 2.8618176 1.7058722 2.1377558 2.4959968 1.9416488 2.7386128\n104 1.0049876 2.1771541 1.3416408 1.3416408 1.7832555 1.3416408 2.0074860\n105 1.4212670 2.5436195 1.6278821 1.7291616 2.2158520 1.7058722 2.4248711\n106 2.5219040 3.6945906 2.4799194 2.9614186 3.2848135 2.7147744 3.5411862\n107 1.3152946 1.2727922 1.9235384 0.8831761 1.2247449 1.3490738 1.1000000\n108 2.0396078 3.2295511 2.0420578 2.4959968 2.7874720 2.2427661 3.0495901\n109 1.3747727 2.5416530 1.5748016 1.8000000 2.0928450 1.4560220 2.3043437\n110 2.2068076 3.2771939 2.1447611 2.5455844 3.0033315 2.5534291 3.2511536\n111 0.8774964 1.9078784 0.9486833 1.2083046 1.6552945 1.3038405 1.8841444\n112 0.8602325 1.9824228 1.1445523 1.2369317 1.6155494 1.0440307 1.8110770\n113 1.2767145 2.3874673 1.3114877 1.6733201 2.0639767 1.5362291 2.2912878\n114 0.8774964 1.6186414 1.4422205 0.8717798 1.3638182 0.9165151 1.4247807\n115 1.1224972 1.8734994 1.5459625 1.1180340 1.7233688 1.3000000 1.8055470\n116 1.1618950 2.1494185 1.3114877 1.4000000 1.9339080 1.5231546 2.1283797\n117 0.9848858 2.1633308 1.1916375 1.3784049 1.7832555 1.3490738 2.0273135\n118 2.8301943 3.9547440 2.7239677 3.2218007 3.6083237 3.1843367 3.8923001\n119 2.8809721 4.0484565 2.8827071 3.3120990 3.6262929 2.9681644 3.8548671\n120 0.7745967 1.6278821 1.2922848 1.0246951 1.1618950 0.5385165 1.2727922\n121 1.5937377 2.6814175 1.5968719 1.9519221 2.3895606 1.8894444 2.6191602\n122 0.8124038 1.4798649 1.3820275 0.6708204 1.3000000 1.0630146 1.3784049\n123 2.6324893 3.8105118 2.5961510 3.0886890 3.3734256 2.7748874 3.6262929\n124 0.5291503 1.5716234 0.8544004 0.9110434 1.2369317 0.7141428 1.4212670\n125 1.4177447 2.5337719 1.4899664 1.7606817 2.2226111 1.8055470 2.4677925\n126 1.7748239 2.9427878 1.7262677 2.2226111 2.5416530 2.0832667 2.8195744\n127 0.4358899 1.4352700 0.8124038 0.7615773 1.1401754 0.7348469 1.3228757\n128 0.4582576 1.4832397 0.8831761 0.7071068 1.2083046 0.9486833 1.4106736\n129 1.1832160 2.3000000 1.4525839 1.5000000 1.9570386 1.4035669 2.1494185\n130 1.5716234 2.7386128 1.5033296 2.0639767 2.3021729 1.8275667 2.5826343\n131 1.9773720 3.1400637 1.9287302 2.4494897 2.7166155 2.1260292 2.9681644\n132 2.7018512 3.7986840 2.5079872 3.1288976 3.4510868 3.0512293 3.7469988\n133 1.2449900 2.3366643 1.5033296 1.5427249 2.0149442 1.4491377 2.1977261\n134 0.4690416 1.6703293 0.8660254 0.9433981 1.2288206 0.8544004 1.4764823\n135 0.9486833 2.0856654 1.4317821 1.2767145 1.5842980 1.1789826 1.8000000\n136 2.3108440 3.4161382 2.1702534 2.7586228 3.0643107 2.4677925 3.3075671\n137 1.4491377 2.4392622 1.6401219 1.6340135 2.2248595 1.8627936 2.4248711\n138 0.9643651 2.1307276 1.2083046 1.3190906 1.7663522 1.3928388 2.0124612\n139 0.4358899 1.3638182 0.9055385 0.5830952 1.1224972 0.9273618 1.3076697\n140 1.2884099 2.3685439 1.2369317 1.6941074 2.0663978 1.5716234 2.3021729\n141 1.4866069 2.5416530 1.5620499 1.8000000 2.2759613 1.7549929 2.4799194\n142 1.2845233 2.2315914 1.1575837 1.6431677 2.0149442 1.5165751 2.2203603\n143 0.7348469 1.6401219 1.3076697 0.8062258 1.3453624 0.9643651 1.4696938\n144 1.6822604 2.7964263 1.7549929 2.0199010 2.4859606 1.9899749 2.7147744\n145 1.6522712 2.6870058 1.7146428 1.9339080 2.4454039 1.9748418 2.6551836\n146 1.1958261 2.1863211 1.2083046 1.5297059 1.9493589 1.4212670 2.1424285\n147 0.7348469 1.7233688 1.0630146 1.0723805 1.3820275 0.7141428 1.5297059\n148 0.8831761 1.9672316 1.0246951 1.2449900 1.6703293 1.2124356 1.8867962\n149 1.2489996 2.2022716 1.4662878 1.4035669 2.0074860 1.7000000 2.2045408\n150 0.6082763 1.6124515 1.1401754 0.7348469 1.3190906 1.0862780 1.5066519\n           71        72        73        74        75        76        77\n2                                                                        \n3                                                                        \n4                                                                        \n5                                                                        \n6                                                                        \n7                                                                        \n8                                                                        \n9                                                                        \n10                                                                       \n11                                                                       \n12                                                                       \n13                                                                       \n14                                                                       \n15                                                                       \n16                                                                       \n17                                                                       \n18                                                                       \n19                                                                       \n20                                                                       \n21                                                                       \n22                                                                       \n23                                                                       \n24                                                                       \n25                                                                       \n26                                                                       \n27                                                                       \n28                                                                       \n29                                                                       \n30                                                                       \n31                                                                       \n32                                                                       \n33                                                                       \n34                                                                       \n35                                                                       \n36                                                                       \n37                                                                       \n38                                                                       \n39                                                                       \n40                                                                       \n41                                                                       \n42                                                                       \n43                                                                       \n44                                                                       \n45                                                                       \n46                                                                       \n47                                                                       \n48                                                                       \n49                                                                       \n50                                                                       \n51                                                                       \n52                                                                       \n53                                                                       \n54                                                                       \n55                                                                       \n56                                                                       \n57                                                                       \n58                                                                       \n59                                                                       \n60                                                                       \n61                                                                       \n62                                                                       \n63                                                                       \n64                                                                       \n65                                                                       \n66                                                                       \n67                                                                       \n68                                                                       \n69                                                                       \n70                                                                       \n71                                                                       \n72  1.0440307                                                            \n73  0.8660254 0.9899495                                                  \n74  0.7549834 0.7071068 0.5099020                                        \n75  0.9165151 0.4358899 0.7549834 0.5196152                              \n76  0.9219544 0.6782330 0.7745967 0.6480741 0.2645751                    \n77  1.0630146 1.0677078 0.6000000 0.7348469 0.6557439 0.4898979          \n78  0.8544004 1.2489996 0.6782330 0.8602325 0.8660254 0.6782330 0.4242641\n79  0.5291503 0.5567764 0.6403124 0.3872983 0.4898979 0.6244998 0.8660254\n80  1.6522712 0.7348469 1.6062378 1.2961481 1.1445523 1.3928388 1.7606817\n81  1.5132746 0.7745967 1.4212670 1.1575837 1.1618950 1.4212670 1.7146428\n82  1.6278821 0.8366600 1.5297059 1.2489996 1.2288206 1.4899664 1.7944358\n83  1.1958261 0.3464102 1.1747340 0.8602325 0.7549834 1.0099505 1.3638182\n84  0.6244998 1.1489125 0.4242641 0.5830952 0.9643651 0.9899495 0.8831761\n85  0.6855655 0.9055385 1.1045361 0.8124038 1.0440307 1.2083046 1.4491377\n86  0.4242641 0.8426150 1.0344080 0.7549834 0.7348469 0.7549834 1.0630146\n87  0.8660254 0.9899495 0.7483315 0.7348469 0.5744563 0.3464102 0.3464102\n88  1.1747340 0.6708204 0.5744563 0.6244998 0.6164414 0.7681146 0.8185353\n89  0.9327379 0.5477226 1.1916375 0.8124038 0.8306624 1.0488088 1.4071247\n90  1.2409674 0.6708204 1.2206556 0.9746794 1.0295630 1.2767145 1.5588457\n91  1.0198039 0.7549834 0.9949874 0.7000000 0.9591663 1.1874342 1.3892444\n92  0.5291503 0.6403124 0.6244998 0.3000000 0.4472136 0.5385165 0.7549834\n93  1.1704700 0.3741657 1.0770330 0.7874008 0.7416198 1.0000000 1.3114877\n94  2.1236761 1.4282857 2.1307276 1.8601075 1.8466185 2.1023796 2.4289916\n95  0.9746794 0.5477226 1.0295630 0.7211103 0.8306624 1.0677078 1.3490738\n96  0.8944272 0.5000000 1.0908712 0.6708204 0.7211103 0.9433981 1.2845233\n97  0.8602325 0.4582576 1.0246951 0.6557439 0.7071068 0.9327379 1.2609520\n98  0.8246211 0.3316625 0.7549834 0.4358899 0.2000000 0.4358899 0.7937254\n99  2.2045408 1.4594520 2.2825424 1.9974984 1.8920888 2.1330729 2.5119713\n100 0.9695360 0.4123106 1.0630146 0.7280110 0.7348469 0.9746794 1.3076697\n101 1.4491377 2.3937418 1.6881943 1.9157244 2.1213203 1.9874607 1.7748239\n102 0.6000000 1.2922848 0.7000000 0.8660254 1.1832160 1.2124356 1.1618950\n103 1.6673332 2.3000000 1.5000000 1.8138357 1.9235384 1.7291616 1.3527749\n104 0.9433981 1.6911535 0.8602325 1.1045361 1.3964240 1.3038405 1.0295630\n105 1.2489996 2.0615528 1.2609520 1.5524175 1.7549929 1.6155494 1.3304135\n106 2.5019992 3.1128765 2.2781571 2.5903668 2.7166155 2.5159491 2.1000000\n107 1.2609520 1.3928388 1.4696938 1.3490738 1.6155494 1.8000000 1.9697716\n108 2.0736441 2.6438608 1.7916473 2.0904545 2.2494444 2.0663978 1.6340135\n109 1.4594520 1.9849433 1.0295630 1.4212670 1.6583124 1.5427249 1.1224972\n110 2.0074860 2.7748874 2.1118712 2.3452079 2.4103942 2.1954498 1.9235384\n111 0.7000000 1.4212670 0.9055385 1.0583005 1.1090537 0.9486833 0.8366600\n112 0.8717798 1.4662878 0.6082763 0.9746794 1.1832160 1.0908712 0.8185353\n113 1.1958261 1.8493242 1.1045361 1.4071247 1.5000000 1.3190906 1.0099505\n114 0.7810250 1.3190906 0.7874008 0.9899495 1.2767145 1.3341664 1.3038405\n115 0.7874008 1.5842980 1.0908712 1.3000000 1.4899664 1.4730920 1.4456832\n116 0.8660254 1.7146428 1.1401754 1.3490738 1.4456832 1.3038405 1.1747340\n117 0.9433981 1.6431677 0.8602325 1.0954451 1.3076697 1.1747340 0.8831761\n118 2.7147744 3.4146742 2.7166155 2.9257478 3.0116441 2.7892651 2.4617067\n119 2.8740216 3.4655447 2.5709920 2.9410882 3.0886890 2.9034462 2.4637370\n120 1.0677078 1.1874342 0.4358899 0.7416198 1.0862780 1.1704700 1.0246951\n121 1.4352700 2.1656408 1.4594520 1.7349352 1.8165902 1.6217275 1.3379088\n122 0.5477226 1.2449900 0.9110434 0.9643651 1.2247449 1.2845233 1.3453624\n123 2.6551836 3.2155870 2.3537205 2.6832816 2.8195744 2.6267851 2.1863211\n124 0.6480741 1.0535654 0.3605551 0.6708204 0.8124038 0.7681146 0.6557439\n125 1.2449900 2.0346990 1.3416408 1.5556349 1.6881943 1.5099669 1.2489996\n126 1.7691806 2.3706539 1.6124515 1.8493242 1.9672316 1.7663522 1.3856406\n127 0.5000000 0.9486833 0.4472136 0.6164414 0.7416198 0.7211103 0.7211103\n128 0.3000000 1.0488088 0.6164414 0.6633250 0.8426150 0.8124038 0.8366600\n129 1.0677078 1.8138357 0.9746794 1.3076697 1.5297059 1.4177447 1.1357817\n130 1.6643317 2.1400935 1.3711309 1.6186414 1.7291616 1.5362291 1.1135529\n131 2.0273135 2.5416530 1.7029386 2.0346990 2.1470911 1.9544820 1.5165751\n132 2.6381812 3.2388269 2.5980762 2.7874720 2.8213472 2.5865034 2.2649503\n133 1.1000000 1.8601075 1.0392305 1.3784049 1.5842980 1.4696938 1.2000000\n134 0.7071068 1.1357817 0.3605551 0.5385165 0.8366600 0.7937254 0.5916080\n135 1.0954451 1.6155494 0.7416198 0.9433981 1.3711309 1.3601471 1.0816654\n136 2.2847319 2.8301943 2.0712315 2.4020824 2.4372115 2.2158520 1.8303005\n137 1.0954451 2.0420578 1.4525839 1.6278821 1.7776389 1.6401219 1.5000000\n138 0.8660254 1.6370706 0.9055385 1.0862780 1.3152946 1.1916375 0.9486833\n139 0.2236068 0.9695360 0.6633250 0.6480741 0.8185353 0.8246211 0.9165151\n140 1.2083046 1.8248288 1.1532563 1.4247807 1.4628739 1.2609520 0.9746794\n141 1.2845233 2.0542639 1.3490738 1.6431677 1.7406895 1.5684387 1.3190906\n142 1.1618950 1.7146428 1.1832160 1.4491377 1.3892444 1.1832160 1.0000000\n143 0.6000000 1.2922848 0.7000000 0.8660254 1.1832160 1.2124356 1.1618950\n144 1.5066519 2.2934690 1.5427249 1.8165902 1.9519221 1.7720045 1.4764823\n145 1.3964240 2.2226111 1.5620499 1.8165902 1.9104973 1.7320508 1.5099669\n146 1.0440307 1.6852300 1.0677078 1.3638182 1.3820275 1.2083046 1.0099505\n147 0.8366600 1.2206556 0.4123106 0.8426150 1.0099505 0.9746794 0.7937254\n148 0.7745967 1.4594520 0.7937254 1.0440307 1.1489125 1.0049876 0.8062258\n149 0.8602325 1.8248288 1.3076697 1.4387495 1.5811388 1.4594520 1.3747727\n150 0.3605551 1.2409674 0.7348469 0.7745967 1.0723805 1.0677078 1.0488088\n           78        79        80        81        82        83        84\n2                                                                        \n3                                                                        \n4                                                                        \n5                                                                        \n6                                                                        \n7                                                                        \n8                                                                        \n9                                                                        \n10                                                                       \n11                                                                       \n12                                                                       \n13                                                                       \n14                                                                       \n15                                                                       \n16                                                                       \n17                                                                       \n18                                                                       \n19                                                                       \n20                                                                       \n21                                                                       \n22                                                                       \n23                                                                       \n24                                                                       \n25                                                                       \n26                                                                       \n27                                                                       \n28                                                                       \n29                                                                       \n30                                                                       \n31                                                                       \n32                                                                       \n33                                                                       \n34                                                                       \n35                                                                       \n36                                                                       \n37                                                                       \n38                                                                       \n39                                                                       \n40                                                                       \n41                                                                       \n42                                                                       \n43                                                                       \n44                                                                       \n45                                                                       \n46                                                                       \n47                                                                       \n48                                                                       \n49                                                                       \n50                                                                       \n51                                                                       \n52                                                                       \n53                                                                       \n54                                                                       \n55                                                                       \n56                                                                       \n57                                                                       \n58                                                                       \n59                                                                       \n60                                                                       \n61                                                                       \n62                                                                       \n63                                                                       \n64                                                                       \n65                                                                       \n66                                                                       \n67                                                                       \n68                                                                       \n69                                                                       \n70                                                                       \n71                                                                       \n72                                                                       \n73                                                                       \n74                                                                       \n75                                                                       \n76                                                                       \n77                                                                       \n78                                                                       \n79  0.8888194                                                            \n80  1.9748418 1.1958261                                                  \n81  1.8973666 1.0723805 0.4242641                                        \n82  1.9949937 1.1789826 0.3464102 0.1414214                              \n83  1.5362291 0.7280110 0.4690416 0.4472136 0.5099020                    \n84  0.7745967 0.6403124 1.7378147 1.5099669 1.6309506 1.2806248          \n85  1.4071247 0.6082763 1.2247449 1.0099505 1.1224972 0.8366600 0.9055385\n86  0.9539392 0.5099020 1.4456832 1.4106736 1.5000000 1.0246951 0.9219544\n87  0.3741657 0.7549834 1.7146428 1.7029386 1.7832555 1.3038405 0.9055385\n88  1.0816654 0.7071068 1.1618950 1.0246951 1.1090537 0.8185353 0.9110434\n89  1.4764823 0.6082763 0.7874008 0.7071068 0.7874008 0.4242641 1.1575837\n90  1.6881943 0.8366600 0.6244998 0.3000000 0.4358899 0.3872983 1.2609520\n91  1.4866069 0.6633250 0.9433981 0.6403124 0.7549834 0.5916080 0.9539392\n92  0.7810250 0.2000000 1.3000000 1.2041595 1.3000000 0.8426150 0.6244998\n93  1.4899664 0.6855655 0.5477226 0.4242641 0.5099020 0.1414214 1.1916375\n94  2.6000000 1.7464249 0.7874008 0.7211103 0.6480741 1.0954451 2.1817424\n95  1.4491377 0.5744563 0.7745967 0.5477226 0.6633250 0.3741657 1.0295630\n96  1.3747727 0.5291503 0.8306624 0.7549834 0.8306624 0.4358899 1.0723805\n97  1.3453624 0.4690416 0.8185353 0.7000000 0.7937254 0.3872983 1.0148892\n98  0.9539392 0.3464102 1.0344080 1.0148892 1.0908712 0.6082763 0.9000000\n99  2.6776856 1.8384776 0.7937254 0.9000000 0.8185353 1.1618950 2.3473389\n100 1.4177447 0.5477226 0.7000000 0.5744563 0.6708204 0.2645751 1.0908712\n101 1.3747727 1.8708287 3.0577770 2.8722813 2.9983329 2.5903668 1.4387495\n102 0.9746794 0.7745967 1.8411953 1.5842980 1.7175564 1.3892444 0.3605551\n103 1.0630146 1.8814888 3.0149627 2.8861739 2.9949958 2.5670995 1.4798649\n104 0.7348469 1.1789826 2.3452079 2.1494185 2.2671568 1.8814888 0.6480741\n105 0.9643651 1.5620499 2.7440845 2.5632011 2.6851443 2.2781571 1.0908712\n106 1.8788294 2.7092434 3.8196859 3.6891733 3.7934153 3.3808283 2.2693611\n107 1.9339080 1.1874342 1.4628739 1.1045361 1.2247449 1.2083046 1.2727922\n108 1.4387495 2.2405357 3.3361655 3.1984371 3.3000000 2.9000000 1.7916473\n109 0.9486833 1.5588457 2.6343880 2.4372115 2.5495098 2.1954498 1.0295630\n110 1.5684387 2.3430749 3.5014283 3.4029399 3.5128336 3.0495901 2.0149442\n111 0.4242641 0.9746794 2.1354157 2.0346990 2.1447611 1.6792856 0.8124038\n112 0.5567764 1.0000000 2.1330729 1.9467922 2.0663978 1.6763055 0.5385165\n113 0.6480741 1.4177447 2.5651511 2.4372115 2.5495098 2.1118712 1.0677078\n114 1.1575837 0.8660254 1.8055470 1.5165751 1.6552945 1.3784049 0.5477226\n115 1.1618950 1.1045361 2.1377558 1.9052559 2.0420578 1.7000000 0.8306624\n116 0.7615773 1.2369317 2.4041631 2.2671568 2.3874673 1.9442222 0.9695360\n117 0.5477226 1.1618950 2.3323808 2.1771541 2.2891046 1.8708287 0.7348469\n118 2.1863211 3.0049958 4.1376322 4.0521599 4.1521079 3.6959437 2.6495283\n119 2.2649503 3.0626786 4.1533119 3.9912404 4.1000000 3.7188708 2.5748786\n120 1.0816654 0.8602325 1.6583124 1.3747727 1.4933185 1.2609520 0.5196152\n121 0.9643651 1.7262677 2.8861739 2.7658633 2.8792360 2.4310492 1.3820275\n122 1.1618950 0.7615773 1.7349352 1.4798649 1.6155494 1.3000000 0.6082763\n123 2.0049938 2.8266588 3.9089641 3.7709415 3.8729833 3.4785054 2.3706539\n124 0.5196152 0.6164414 1.7233688 1.5588457 1.6763055 1.2688578 0.4123106\n125 0.8602325 1.5652476 2.7459060 2.6191602 2.7313001 2.2847319 1.2083046\n126 1.1401754 1.9672316 3.0822070 2.9765752 3.0757113 2.6419690 1.5937377\n127 0.5830952 0.4795832 1.6186414 1.4628739 1.5811388 1.1575837 0.4242641\n128 0.6164414 0.5196152 1.7088007 1.5556349 1.6733201 1.2409674 0.4242641\n129 0.8062258 1.3190906 2.4799194 2.2825424 2.4062419 2.0174241 0.8185353\n130 0.9486833 1.7748239 2.8390139 2.7386128 2.8319605 2.4124676 1.4212670\n131 1.3341664 2.1656408 3.2403703 3.1144823 3.2155870 2.8106939 1.7492856\n132 2.0322401 2.8774989 3.9610605 3.9102430 4.0012498 3.5369478 2.5826343\n133 0.8602325 1.3674794 2.5258662 2.3280893 2.4535688 2.0639767 0.8831761\n134 0.5000000 0.6782330 1.7916473 1.6278821 1.7349352 1.3379088 0.3316625\n135 0.9848858 1.1489125 2.1748563 1.9313208 2.0420578 1.7406895 0.5567764\n136 1.6031220 2.4698178 3.5510562 3.4539832 3.5566838 3.1224990 2.1142375\n137 1.0816654 1.5362291 2.7147744 2.5632011 2.6851443 2.2516660 1.2124356\n138 0.6000000 1.1357817 2.3194827 2.1633308 2.2759613 1.8547237 0.7211103\n139 0.7348469 0.4358899 1.6062378 1.4491377 1.5684387 1.1401754 0.4690416\n140 0.6082763 1.4212670 2.5514702 2.4515301 2.5592968 2.1047565 1.1445523\n141 0.9273618 1.5968719 2.7604347 2.6191602 2.7386128 2.3021729 1.2409674\n142 0.6480741 1.3601471 2.4372115 2.3622024 2.4698178 2.0049938 1.2083046\n143 0.9746794 0.7745967 1.8411953 1.5842980 1.7175564 1.3892444 0.3605551\n144 1.1045361 1.8248288 3.0033315 2.8600699 2.9765752 2.5416530 1.4212670\n145 1.1045361 1.7578396 2.9291637 2.7964263 2.9154759 2.4698178 1.4212670\n146 0.6324555 1.2767145 2.3958297 2.2803509 2.3958297 1.9493589 1.0392305\n147 0.6708204 0.8124038 1.8520259 1.6522712 1.7748239 1.4106736 0.4795832\n148 0.4123106 1.0000000 2.1656408 2.0322401 2.1470911 1.7058722 0.7141428\n149 0.9643651 1.3190906 2.4879711 2.3430749 2.4637370 2.0273135 1.0535654\n150 0.8124038 0.6855655 1.8439089 1.6431677 1.7663522 1.3784049 0.3741657\n           85        86        87        88        89        90        91\n2                                                                        \n3                                                                        \n4                                                                        \n5                                                                        \n6                                                                        \n7                                                                        \n8                                                                        \n9                                                                        \n10                                                                       \n11                                                                       \n12                                                                       \n13                                                                       \n14                                                                       \n15                                                                       \n16                                                                       \n17                                                                       \n18                                                                       \n19                                                                       \n20                                                                       \n21                                                                       \n22                                                                       \n23                                                                       \n24                                                                       \n25                                                                       \n26                                                                       \n27                                                                       \n28                                                                       \n29                                                                       \n30                                                                       \n31                                                                       \n32                                                                       \n33                                                                       \n34                                                                       \n35                                                                       \n36                                                                       \n37                                                                       \n38                                                                       \n39                                                                       \n40                                                                       \n41                                                                       \n42                                                                       \n43                                                                       \n44                                                                       \n45                                                                       \n46                                                                       \n47                                                                       \n48                                                                       \n49                                                                       \n50                                                                       \n51                                                                       \n52                                                                       \n53                                                                       \n54                                                                       \n55                                                                       \n56                                                                       \n57                                                                       \n58                                                                       \n59                                                                       \n60                                                                       \n61                                                                       \n62                                                                       \n63                                                                       \n64                                                                       \n65                                                                       \n66                                                                       \n67                                                                       \n68                                                                       \n69                                                                       \n70                                                                       \n71                                                                       \n72                                                                       \n73                                                                       \n74                                                                       \n75                                                                       \n76                                                                       \n77                                                                       \n78                                                                       \n79                                                                       \n80                                                                       \n81                                                                       \n82                                                                       \n83                                                                       \n84                                                                       \n85                                                                       \n86  0.7280110                                                            \n87  1.3190906 0.7937254                                                  \n88  1.1618950 1.1832160 0.9643651                                        \n89  0.4898979 0.7549834 1.2727922 1.0344080                              \n90  0.7416198 1.1832160 1.5264338 0.9165151 0.5196152                    \n91  0.5196152 1.0295630 1.3674794 0.8602325 0.5196152 0.4242641          \n92  0.7141428 0.4690416 0.6244998 0.7615773 0.7141428 0.9899495 0.7745967\n93  0.8124038 1.0440307 1.2806248 0.7141428 0.4690416 0.3316625 0.5000000\n94  1.5297059 2.0024984 2.3958297 1.7291616 1.2569805 0.9327379 1.2609520\n95  0.5099020 0.9110434 1.2884099 0.8306624 0.3162278 0.3000000 0.2645751\n96  0.5196152 0.7071068 1.1618950 0.9486833 0.1732051 0.5830952 0.4898979\n97  0.4795832 0.7211103 1.1532563 0.8717798 0.1732051 0.4898979 0.4242641\n98  0.8544004 0.6480741 0.7000000 0.6164414 0.6403124 0.8602325 0.7745967\n99  1.6583124 2.0297783 2.4433583 1.8654758 1.3228757 1.0954451 1.4628739\n100 0.5744563 0.8366600 1.2206556 0.8366600 0.2236068 0.3741657 0.4242641\n101 2.0371549 1.7776389 1.7000000 2.2360680 2.3727621 2.5922963 2.3194827\n102 0.8774964 0.9899495 1.1357817 1.1224972 1.2206556 1.3038405 1.0392305\n103 2.2825424 1.8920888 1.4035669 2.0049938 2.4758837 2.6570661 2.4041631\n104 1.4560220 1.2609520 1.0488088 1.4317821 1.7320508 1.9000000 1.5905974\n105 1.8411953 1.5684387 1.3228757 1.8165902 2.1236761 2.3021729 2.0297783\n106 3.1000000 2.7166155 2.1886069 2.7676705 3.3000000 3.4727511 3.1968735\n107 0.7348469 1.4247807 1.9183326 1.4730920 1.0295630 0.8774964 0.7937254\n108 2.6362853 2.2847319 1.7464249 2.2847319 2.8266588 2.9899833 2.7018512\n109 1.9287302 1.7406895 1.2884099 1.5524175 2.1447611 2.2203603 1.9416488\n110 2.6758176 2.2022716 1.8601075 2.6134269 2.8913665 3.1543621 2.9103264\n111 1.3638182 0.9000000 0.6782330 1.3527749 1.5297059 1.7860571 1.5779734\n112 1.3747727 1.1747340 0.8774964 1.1575837 1.5905974 1.7029386 1.4560220\n113 1.8220867 1.4317821 1.0099505 1.6093477 2.0099751 2.1977261 1.9672316\n114 0.9165151 1.1445523 1.3038405 1.1180340 1.2489996 1.2369317 1.0246951\n115 1.1704700 1.1832160 1.3674794 1.4832397 1.5132746 1.6124515 1.4352700\n116 1.5231546 1.1532563 1.0488088 1.6217275 1.7663522 1.9974984 1.7860571\n117 1.5165751 1.2041595 0.8831761 1.4106736 1.7378147 1.9364917 1.6522712\n118 3.3555923 2.8722813 2.4454039 3.2109189 3.5524639 3.8249183 3.5454196\n119 3.4423829 3.1272992 2.5942244 3.0495901 3.6619667 3.7762415 3.5071356\n120 1.1180340 1.3038405 1.1789826 0.7071068 1.2845233 1.1747340 0.9273618\n121 2.0904545 1.6673332 1.3000000 1.9646883 2.3000000 2.5179357 2.2847319\n122 0.7000000 0.9165151 1.2609520 1.2165525 1.0816654 1.1832160 0.9695360\n123 3.2280025 2.8722813 2.3108440 2.8266588 3.4205263 3.5651087 3.2878564\n124 1.0723805 0.8831761 0.6708204 0.8124038 1.2124356 1.3190906 1.1224972\n125 1.8920888 1.4798649 1.1832160 1.8681542 2.1213203 2.3685439 2.1047565\n126 2.3706539 1.9416488 1.4282857 2.1047565 2.5416530 2.7622455 2.4839485\n127 0.9273618 0.7280110 0.6633250 0.8185353 1.0677078 1.2124356 1.0246951\n128 0.8602325 0.6082763 0.7071068 1.0148892 1.0677078 1.2922848 1.0630146\n129 1.6155494 1.4071247 1.1618950 1.5297059 1.8894444 2.0248457 1.7606817\n130 2.2226111 1.8138357 1.2165525 1.8303005 2.3537205 2.5436195 2.2737634\n131 2.6000000 2.2293497 1.6431677 2.1702534 2.7640550 2.9103264 2.6514147\n132 3.2787193 2.7459060 2.2516660 3.0495901 3.4219877 3.7013511 3.4409301\n133 1.6552945 1.4456832 1.2165525 1.5842980 1.9339080 2.0663978 1.8138357\n134 1.1000000 0.9055385 0.6403124 0.8831761 1.2529964 1.4071247 1.1224972\n135 1.3674794 1.3784049 1.1958261 1.2569805 1.6340135 1.7146428 1.3564660\n136 2.9137605 2.4698178 1.9000000 2.5179357 3.0675723 3.2403703 3.0166206\n137 1.7291616 1.3928388 1.3674794 1.9646883 2.0273135 2.2847319 2.0396078\n138 1.4491377 1.1357817 0.9055385 1.4525839 1.6911535 1.9157244 1.6217275\n139 0.7348469 0.5385165 0.7745967 0.9949874 0.9486833 1.1789826 0.9643651\n140 1.8520259 1.4000000 0.9433981 1.6248077 2.0074860 2.2181073 2.0049938\n141 1.9287302 1.5588457 1.2727922 1.8574176 2.1633308 2.3600847 2.1377558\n142 1.8055470 1.3228757 0.9165151 1.5779734 1.9235384 2.1283797 1.9773720\n143 0.8774964 0.9899495 1.1357817 1.1224972 1.2206556 1.3038405 1.0392305\n144 2.1447611 1.7691806 1.4491377 2.0760539 2.3916521 2.6057628 2.3473389\n145 2.0542639 1.6583124 1.4282857 2.0712315 2.3021729 2.5317978 2.3043437\n146 1.6792856 1.2767145 0.9486833 1.5132746 1.8493242 2.0322401 1.8574176\n147 1.2124356 1.1135529 0.8774964 0.8717798 1.3820275 1.4142136 1.2247449\n148 1.3964240 1.0295630 0.7416198 1.2884099 1.5842980 1.7832555 1.5620499\n149 1.5000000 1.1575837 1.2124356 1.7944358 1.7916473 2.0639767 1.8275667\n150 0.8366600 0.7549834 0.9486833 1.1789826 1.1575837 1.3674794 1.0816654\n           92        93        94        95        96        97        98\n2                                                                        \n3                                                                        \n4                                                                        \n5                                                                        \n6                                                                        \n7                                                                        \n8                                                                        \n9                                                                        \n10                                                                       \n11                                                                       \n12                                                                       \n13                                                                       \n14                                                                       \n15                                                                       \n16                                                                       \n17                                                                       \n18                                                                       \n19                                                                       \n20                                                                       \n21                                                                       \n22                                                                       \n23                                                                       \n24                                                                       \n25                                                                       \n26                                                                       \n27                                                                       \n28                                                                       \n29                                                                       \n30                                                                       \n31                                                                       \n32                                                                       \n33                                                                       \n34                                                                       \n35                                                                       \n36                                                                       \n37                                                                       \n38                                                                       \n39                                                                       \n40                                                                       \n41                                                                       \n42                                                                       \n43                                                                       \n44                                                                       \n45                                                                       \n46                                                                       \n47                                                                       \n48                                                                       \n49                                                                       \n50                                                                       \n51                                                                       \n52                                                                       \n53                                                                       \n54                                                                       \n55                                                                       \n56                                                                       \n57                                                                       \n58                                                                       \n59                                                                       \n60                                                                       \n61                                                                       \n62                                                                       \n63                                                                       \n64                                                                       \n65                                                                       \n66                                                                       \n67                                                                       \n68                                                                       \n69                                                                       \n70                                                                       \n71                                                                       \n72                                                                       \n73                                                                       \n74                                                                       \n75                                                                       \n76                                                                       \n77                                                                       \n78                                                                       \n79                                                                       \n80                                                                       \n81                                                                       \n82                                                                       \n83                                                                       \n84                                                                       \n85                                                                       \n86                                                                       \n87                                                                       \n88                                                                       \n89                                                                       \n90                                                                       \n91                                                                       \n92                                                                       \n93  0.8062258                                                            \n94  1.8841444 1.1224972                                                  \n95  0.7141428 0.3162278 1.1916375                                        \n96  0.6000000 0.4582576 1.3527749 0.3316625                              \n97  0.5830952 0.3872983 1.3228757 0.2236068 0.1414214                    \n98  0.3464102 0.5916080 1.7000000 0.6403124 0.5291503 0.5099020          \n99  1.9748418 1.2288206 0.3872983 1.3304135 1.4352700 1.4142136 1.7606817\n100 0.6782330 0.2645751 1.2124356 0.1732051 0.2449490 0.1414214 0.5477226\n101 1.8165902 2.5357445 3.4971417 2.3515952 2.3194827 2.2803509 2.1213203\n102 0.8246211 1.3076697 2.2022716 1.1000000 1.1832160 1.1045361 1.0954451\n103 1.7832555 2.5039968 3.5874782 2.4228083 2.3790755 2.3452079 2.0049938\n104 1.1000000 1.8055470 2.8248894 1.6552945 1.6401219 1.6031220 1.3964240\n105 1.4966630 2.2113344 3.2295511 2.0663978 2.0493902 2.0049938 1.7776389\n106 2.5961510 3.3120990 4.3988635 3.2388269 3.1906112 3.1654384 2.8106939\n107 1.3379088 1.1489125 1.4071247 0.8831761 1.1090537 1.0246951 1.4317821\n108 2.1213203 2.8266588 3.9102430 2.7549955 2.7092434 2.6870058 2.3366643\n109 1.4866069 2.1023796 3.1336879 2.0149442 2.0420578 1.9924859 1.7058722\n110 2.2427661 3.0099834 4.0767634 2.9017236 2.8124722 2.7910571 2.4839485\n111 0.9000000 1.6431677 2.7018512 1.5362291 1.4594520 1.4247807 1.1445523\n112 0.9591663 1.5968719 2.6324893 1.4866069 1.5099669 1.4491377 1.2000000\n113 1.3379088 2.0542639 3.1272992 1.9646883 1.9261360 1.8841444 1.5652476\n114 0.9643651 1.2884099 2.1023796 1.0862780 1.2369317 1.1357817 1.1789826\n115 1.1747340 1.6401219 2.4677925 1.4387495 1.5165751 1.4282857 1.4212670\n116 1.1958261 1.9026298 2.9086079 1.7606817 1.7175564 1.6703293 1.4594520\n117 1.0630146 1.8055470 2.8670542 1.6852300 1.6401219 1.6093477 1.3379088\n118 2.8722813 3.6523965 4.7476310 3.5608988 3.4481879 3.4452866 3.1032241\n119 2.9698485 3.6373067 4.6936127 3.5651087 3.5580894 3.5185224 3.1780497\n120 0.9055385 1.1357817 2.0371549 1.0440307 1.2083046 1.1224972 1.0295630\n121 1.6431677 2.3811762 3.4452866 2.2781571 2.2226111 2.1863211 1.8814888\n122 0.8602325 1.2369317 2.0420578 0.9949874 1.0862780 1.0000000 1.1045361\n123 2.7147744 3.4029399 4.4833024 3.3406586 3.3060551 3.2787193 2.9171904\n124 0.6164414 1.1958261 2.2472205 1.1090537 1.1401754 1.0677078 0.8124038\n125 1.4662878 2.2360680 3.2954514 2.1118712 2.0371549 2.0124612 1.7349352\n126 1.8357560 2.5845696 3.6851052 2.5099801 2.4269322 2.4145393 2.0566964\n127 0.5000000 1.0954451 2.1400935 0.9899495 1.0049876 0.9327379 0.7141428\n128 0.5000000 1.1916375 2.2135944 1.0392305 1.0049876 0.9539392 0.7937254\n129 1.2727922 1.9416488 2.9512709 1.8027756 1.8165902 1.7606817 1.5427249\n130 1.6401219 2.3494680 3.4554305 2.3021729 2.2293497 2.2158520 1.8303005\n131 2.0566964 2.7386128 3.8288379 2.6870058 2.6514147 2.6210685 2.2472205\n132 2.7349589 3.5000000 4.6119410 3.4394767 3.3105891 3.3136083 2.9325757\n133 1.3304135 1.9899749 2.9899833 1.8493242 1.8681542 1.8083141 1.5968719\n134 0.5830952 1.2609520 2.3302360 1.1618950 1.1401754 1.1045361 0.8366600\n135 1.0770330 1.6401219 2.5980762 1.4933185 1.5231546 1.4899664 1.3416408\n136 2.3706539 3.0643107 4.1605288 3.0182777 2.9698485 2.9359837 2.5495098\n137 1.4832397 2.2113344 3.1859065 2.0371549 1.9798990 1.9442222 1.7776389\n138 1.0344080 1.7944358 2.8425341 1.6552945 1.5968719 1.5716234 1.3304135\n139 0.4582576 1.0954451 2.0928450 0.9273618 0.9000000 0.8426150 0.7416198\n140 1.3341664 2.0566964 3.1416556 1.9824228 1.9235384 1.8867962 1.5427249\n141 1.5394804 2.2494444 3.2832910 2.1307276 2.1000000 2.0518285 1.7860571\n142 1.3076697 1.9697716 3.0298515 1.9131126 1.8627936 1.8138357 1.4730920\n143 0.8246211 1.3076697 2.2022716 1.1000000 1.1832160 1.1045361 1.0954451\n144 1.7406895 2.4859606 3.5355339 2.3622024 2.3130067 2.2781571 2.0024984\n145 1.6941074 2.4248711 3.4496377 2.2934690 2.2427661 2.2022716 1.9519221\n146 1.2369317 1.9026298 2.9461840 1.8165902 1.7916473 1.7349352 1.4387495\n147 0.8366600 1.3228757 2.3302360 1.2369317 1.3190906 1.2328828 1.0099505\n148 0.9380832 1.6522712 2.7110883 1.5459625 1.5099669 1.4628739 1.1832160\n149 1.2727922 1.9924859 2.9580399 1.8138357 1.7492856 1.7146428 1.5684387\n150 0.6708204 1.3190906 2.2759613 1.1135529 1.1000000 1.0535654 0.9949874\n           99       100       101       102       103       104       105\n2                                                                        \n3                                                                        \n4                                                                        \n5                                                                        \n6                                                                        \n7                                                                        \n8                                                                        \n9                                                                        \n10                                                                       \n11                                                                       \n12                                                                       \n13                                                                       \n14                                                                       \n15                                                                       \n16                                                                       \n17                                                                       \n18                                                                       \n19                                                                       \n20                                                                       \n21                                                                       \n22                                                                       \n23                                                                       \n24                                                                       \n25                                                                       \n26                                                                       \n27                                                                       \n28                                                                       \n29                                                                       \n30                                                                       \n31                                                                       \n32                                                                       \n33                                                                       \n34                                                                       \n35                                                                       \n36                                                                       \n37                                                                       \n38                                                                       \n39                                                                       \n40                                                                       \n41                                                                       \n42                                                                       \n43                                                                       \n44                                                                       \n45                                                                       \n46                                                                       \n47                                                                       \n48                                                                       \n49                                                                       \n50                                                                       \n51                                                                       \n52                                                                       \n53                                                                       \n54                                                                       \n55                                                                       \n56                                                                       \n57                                                                       \n58                                                                       \n59                                                                       \n60                                                                       \n61                                                                       \n62                                                                       \n63                                                                       \n64                                                                       \n65                                                                       \n66                                                                       \n67                                                                       \n68                                                                       \n69                                                                       \n70                                                                       \n71                                                                       \n72                                                                       \n73                                                                       \n74                                                                       \n75                                                                       \n76                                                                       \n77                                                                       \n78                                                                       \n79                                                                       \n80                                                                       \n81                                                                       \n82                                                                       \n83                                                                       \n84                                                                       \n85                                                                       \n86                                                                       \n87                                                                       \n88                                                                       \n89                                                                       \n90                                                                       \n91                                                                       \n92                                                                       \n93                                                                       \n94                                                                       \n95                                                                       \n96                                                                       \n97                                                                       \n98                                                                       \n99                                                                       \n100 1.3038405                                                            \n101 3.6110940 2.3790755                                                  \n102 2.3622024 1.1747340 1.3341664                                        \n103 3.6959437 2.4248711 0.9486833 1.5684387                              \n104 2.9748950 1.6941074 0.9000000 0.7416198 0.9110434                    \n105 3.3555923 2.0928450 0.5099020 1.0770330 0.6164414 0.5000000          \n106 4.5232732 3.2465366 1.5165751 2.3706539 0.8602325 1.6703293 1.3638182\n107 1.6278821 1.0246951 2.3430749 1.1180340 2.6851443 1.8275667 2.1794495\n108 4.0472213 2.7676705 1.3190906 1.9339080 0.5477226 1.2206556 1.0295630\n109 3.3000000 2.0566964 1.1532563 1.1618950 0.7141428 0.6000000 0.6708204\n110 4.1460825 2.8861739 0.9539392 2.0322401 0.7549834 1.4282857 1.0148892\n111 2.7694765 1.5132746 1.0535654 0.8660254 1.0246951 0.6480741 0.7549834\n112 2.7676705 1.5165751 1.1045361 0.6324555 0.9899495 0.3872983 0.6633250\n113 3.2233523 1.9621417 0.8660254 1.1357817 0.5000000 0.6000000 0.4358899\n114 2.2737634 1.1789826 1.5000000 0.2645751 1.7406895 0.9591663 1.2529964\n115 2.5845696 1.4899664 1.1489125 0.5099020 1.5684387 0.9327379 1.0295630\n116 2.9849623 1.7578396 0.7416198 0.9000000 0.9643651 0.6633250 0.5567764\n117 2.9916551 1.7000000 0.9327379 0.8660254 0.7810250 0.2449490 0.5000000\n118 4.8321838 3.5454196 1.6703293 2.7331301 1.2845233 2.0346990 1.7000000\n119 4.8394215 3.5888717 1.8165902 2.6495283 1.2489996 1.9974984 1.6792856\n120 2.2494444 1.1401754 1.8165902 0.6782330 1.7378147 1.0148892 1.4212670\n121 3.5298725 2.2715633 0.7071068 1.4071247 0.4000000 0.8426150 0.4690416\n122 2.1817424 1.0677078 1.4832397 0.3162278 1.8165902 1.0148892 1.3038405\n123 4.6206060 3.3541020 1.7175564 2.4879711 1.0246951 1.7944358 1.5264338\n124 2.3622024 1.1224972 1.4352700 0.5477226 1.3490738 0.7280110 1.0488088\n125 3.3896903 2.1095023 0.6403124 1.2529964 0.5385165 0.6480741 0.3872983\n126 3.7934153 2.5039968 1.1445523 1.7406895 0.3872983 1.0295630 0.8544004\n127 2.2427661 0.9949874 1.4798649 0.5196152 1.4662878 0.8124038 1.1357817\n128 2.3130067 1.0440307 1.3527749 0.4795832 1.4456832 0.7348469 1.0630146\n129 3.0886890 1.8384776 0.7615773 0.8124038 0.7874008 0.3316625 0.3162278\n130 3.5707142 2.2956481 1.3228757 1.6217275 0.5196152 0.9486833 0.9219544\n131 3.9534795 2.6925824 1.3527749 1.8894444 0.4582576 1.2165525 1.0148892\n132 4.6797436 3.4088121 1.7944358 2.7055499 1.2409674 2.0124612 1.7320508\n133 3.1224990 1.8841444 0.7141428 0.8426150 0.7937254 0.4242641 0.3000000\n134 2.4698178 1.1832160 1.4352700 0.6480741 1.2961481 0.5916080 1.0295630\n135 2.8035692 1.5684387 1.3784049 0.7745967 1.3190906 0.5385165 1.0000000\n136 4.2497059 3.0066593 1.4491377 2.2045408 0.6633250 1.5716234 1.2409674\n137 3.2710854 2.0445048 0.4242641 1.1135529 0.9899495 0.7810250 0.5291503\n138 2.9647934 1.6703293 0.8888194 0.8306624 0.8660254 0.2449490 0.5196152\n139 2.1886069 0.9327379 1.4525839 0.4795832 1.5842980 0.8602325 1.1874342\n140 3.2186954 1.9646883 0.9591663 1.2247449 0.5477226 0.7280110 0.5830952\n141 3.3719431 2.1330729 0.6082763 1.2124356 0.5916080 0.7483315 0.3605551\n142 3.0740852 1.8788294 1.1180340 1.2369317 0.8544004 0.9486833 0.8185353\n143 2.3622024 1.1747340 1.3341664 0.0000000 1.5684387 0.7416198 1.0770330\n144 3.6373067 2.3685439 0.5567764 1.4317821 0.4123106 0.8246211 0.3872983\n145 3.5284558 2.2912878 0.5000000 1.3747727 0.6708204 0.9055385 0.4795832\n146 3.0149627 1.8027756 0.9643651 1.0344080 0.8306624 0.7615773 0.6403124\n147 2.4657656 1.2727922 1.4142136 0.5477226 1.3190906 0.7280110 1.0099505\n148 2.8035692 1.5427249 1.0099505 0.7745967 0.9273618 0.5000000 0.6324555\n149 3.0364453 1.8165902 0.6480741 0.9486833 1.1224972 0.7416198 0.6480741\n150 2.4062419 1.1532563 1.2449900 0.3316625 1.4730920 0.6480741 1.0049876\n          106       107       108       109       110       111       112\n2                                                                        \n3                                                                        \n4                                                                        \n5                                                                        \n6                                                                        \n7                                                                        \n8                                                                        \n9                                                                        \n10                                                                       \n11                                                                       \n12                                                                       \n13                                                                       \n14                                                                       \n15                                                                       \n16                                                                       \n17                                                                       \n18                                                                       \n19                                                                       \n20                                                                       \n21                                                                       \n22                                                                       \n23                                                                       \n24                                                                       \n25                                                                       \n26                                                                       \n27                                                                       \n28                                                                       \n29                                                                       \n30                                                                       \n31                                                                       \n32                                                                       \n33                                                                       \n34                                                                       \n35                                                                       \n36                                                                       \n37                                                                       \n38                                                                       \n39                                                                       \n40                                                                       \n41                                                                       \n42                                                                       \n43                                                                       \n44                                                                       \n45                                                                       \n46                                                                       \n47                                                                       \n48                                                                       \n49                                                                       \n50                                                                       \n51                                                                       \n52                                                                       \n53                                                                       \n54                                                                       \n55                                                                       \n56                                                                       \n57                                                                       \n58                                                                       \n59                                                                       \n60                                                                       \n61                                                                       \n62                                                                       \n63                                                                       \n64                                                                       \n65                                                                       \n66                                                                       \n67                                                                       \n68                                                                       \n69                                                                       \n70                                                                       \n71                                                                       \n72                                                                       \n73                                                                       \n74                                                                       \n75                                                                       \n76                                                                       \n77                                                                       \n78                                                                       \n79                                                                       \n80                                                                       \n81                                                                       \n82                                                                       \n83                                                                       \n84                                                                       \n85                                                                       \n86                                                                       \n87                                                                       \n88                                                                       \n89                                                                       \n90                                                                       \n91                                                                       \n92                                                                       \n93                                                                       \n94                                                                       \n95                                                                       \n96                                                                       \n97                                                                       \n98                                                                       \n99                                                                       \n100                                                                      \n101                                                                      \n102                                                                      \n103                                                                      \n104                                                                      \n105                                                                      \n106                                                                      \n107 3.4799425                                                            \n108 0.5291503 3.0282008                                                  \n109 1.3379088 2.2226111 0.8774964                                        \n110 0.9643651 3.1144823 1.0148892 1.4282857                              \n111 1.8734994 1.8708287 1.4866069 1.0295630 1.3784049                    \n112 1.8055470 1.7233688 1.3638182 0.6244998 1.5652476 0.5567764          \n113 1.3601471 2.2405357 0.9949874 0.6633250 1.0198039 0.5477226 0.5744563\n114 2.5357445 0.9899495 2.1095023 1.2961481 2.2181073 1.0677078 0.7937254\n115 2.3706539 1.3228757 2.0149442 1.3228757 1.9000000 0.9000000 0.8124038\n116 1.7916473 1.9339080 1.4662878 1.0392305 1.2165525 0.3741657 0.6403124\n117 1.5842980 1.9544820 1.1357817 0.6164414 1.3038405 0.4898979 0.3872983\n118 0.8185353 3.8236109 1.1357817 1.9131126 0.8602325 2.0976177 2.2248595\n119 0.5477226 3.7376463 0.9273618 1.5716234 1.3892444 2.2649503 2.1023796\n120 2.4738634 1.2609520 1.9899749 1.1445523 2.3685439 1.2288206 0.8124038\n121 1.1747340 2.5079872 0.9273618 0.8888194 0.6708204 0.7810250 0.9055385\n122 2.6343880 0.9110434 2.2135944 1.4662878 2.2113344 1.0049876 0.9055385\n123 0.2645751 3.5860842 0.6082763 1.3928388 1.2247449 2.0396078 1.9157244\n124 2.1817424 1.4730920 1.7320508 1.0049876 1.8841444 0.6082763 0.4242641\n125 1.3076697 2.3409400 0.9848858 0.8602325 0.8124038 0.6480741 0.8062258\n126 0.8062258 2.8354894 0.4358899 0.8831761 0.8124038 1.1575837 1.1789826\n127 2.3086793 1.3711309 1.8627936 1.1575837 1.9544820 0.6164414 0.5567764\n128 2.2869193 1.3638182 1.8466185 1.1916375 1.8708287 0.5291503 0.5916080\n129 1.5748016 1.9261360 1.1832160 0.5567764 1.3000000 0.6557439 0.3741657\n130 1.0246951 2.6907248 0.5567764 0.7348469 1.1224972 1.0862780 1.0344080\n131 0.6082763 2.9899833 0.2645751 0.8246211 1.0198039 1.4071247 1.2845233\n132 0.8831761 3.7934153 1.1045361 1.8788294 0.9327379 2.0024984 2.1633308\n133 1.5779734 1.9493589 1.2124356 0.6164414 1.2727922 0.6782330 0.4358899\n134 2.0832667 1.5652476 1.5937377 0.9110434 1.8574176 0.6708204 0.4690416\n135 1.9748418 1.6583124 1.4764823 0.7549834 1.9157244 1.0630146 0.6633250\n136 0.5477226 3.3181320 0.6782330 1.2609520 0.8062258 1.6031220 1.6062378\n137 1.7146428 2.1142375 1.4491377 1.1704700 1.0535654 0.7000000 0.9165151\n138 1.6583124 1.9026298 1.2206556 0.7348469 1.3190906 0.4690416 0.4582576\n139 2.4269322 1.2489996 1.9874607 1.3190906 1.9949937 0.6480741 0.7141428\n140 1.3928388 2.3086793 1.0488088 0.8062258 0.9949874 0.5196152 0.6782330\n141 1.3820275 2.3021729 1.1180340 0.8717798 0.8717798 0.6782330 0.7681146\n142 1.6703293 2.2538855 1.3747727 1.0677078 1.1747340 0.5099020 0.7810250\n143 2.3706539 1.1180340 1.9339080 1.1618950 2.0322401 0.8660254 0.6324555\n144 1.1000000 2.5337719 0.8660254 0.8717798 0.6324555 0.9055385 0.9643651\n145 1.3674794 2.4413111 1.1704700 1.0677078 0.7071068 0.8124038 0.9848858\n146 1.6763055 2.0832667 1.3527749 0.9273618 1.2083046 0.4242641 0.5916080\n147 2.1307276 1.5000000 1.6911535 0.9000000 1.8947295 0.7416198 0.3741657\n148 1.7832555 1.8411953 1.3784049 0.8306624 1.3820275 0.2236068 0.3464102\n149 1.8973666 1.9157244 1.5874508 1.2124356 1.2529964 0.5567764 0.8366600\n150 2.2869193 1.2727922 1.8466185 1.1747340 1.8814888 0.6633250 0.6244998\n          113       114       115       116       117       118       119\n2                                                                        \n3                                                                        \n4                                                                        \n5                                                                        \n6                                                                        \n7                                                                        \n8                                                                        \n9                                                                        \n10                                                                       \n11                                                                       \n12                                                                       \n13                                                                       \n14                                                                       \n15                                                                       \n16                                                                       \n17                                                                       \n18                                                                       \n19                                                                       \n20                                                                       \n21                                                                       \n22                                                                       \n23                                                                       \n24                                                                       \n25                                                                       \n26                                                                       \n27                                                                       \n28                                                                       \n29                                                                       \n30                                                                       \n31                                                                       \n32                                                                       \n33                                                                       \n34                                                                       \n35                                                                       \n36                                                                       \n37                                                                       \n38                                                                       \n39                                                                       \n40                                                                       \n41                                                                       \n42                                                                       \n43                                                                       \n44                                                                       \n45                                                                       \n46                                                                       \n47                                                                       \n48                                                                       \n49                                                                       \n50                                                                       \n51                                                                       \n52                                                                       \n53                                                                       \n54                                                                       \n55                                                                       \n56                                                                       \n57                                                                       \n58                                                                       \n59                                                                       \n60                                                                       \n61                                                                       \n62                                                                       \n63                                                                       \n64                                                                       \n65                                                                       \n66                                                                       \n67                                                                       \n68                                                                       \n69                                                                       \n70                                                                       \n71                                                                       \n72                                                                       \n73                                                                       \n74                                                                       \n75                                                                       \n76                                                                       \n77                                                                       \n78                                                                       \n79                                                                       \n80                                                                       \n81                                                                       \n82                                                                       \n83                                                                       \n84                                                                       \n85                                                                       \n86                                                                       \n87                                                                       \n88                                                                       \n89                                                                       \n90                                                                       \n91                                                                       \n92                                                                       \n93                                                                       \n94                                                                       \n95                                                                       \n96                                                                       \n97                                                                       \n98                                                                       \n99                                                                       \n100                                                                      \n101                                                                      \n102                                                                      \n103                                                                      \n104                                                                      \n105                                                                      \n106                                                                      \n107                                                                      \n108                                                                      \n109                                                                      \n110                                                                      \n111                                                                      \n112                                                                      \n113                                                                      \n114 1.3114877                                                            \n115 1.1357817 0.5196152                                                  \n116 0.5291503 1.0770330 0.7549834                                        \n117 0.4242641 1.0862780 1.0246951 0.5830952                              \n118 1.7029386 2.9359837 2.6851443 2.0049938 1.9183326                    \n119 1.7233688 2.7766887 2.6267851 2.1470911 1.9519221 1.2206556          \n120 1.3747727 0.6557439 1.1045361 1.3747727 1.1090537 2.9715316 2.7018512\n121 0.3605551 1.5842980 1.3190906 0.6403124 0.7000000 1.4177447 1.5620499\n122 1.3601471 0.3316625 0.4898979 1.0246951 1.1180340 2.9478806 2.9223278\n123 1.5165751 2.6419690 2.5159491 1.9748418 1.7204651 1.0198039 0.4123106\n124 0.8888194 0.6708204 0.8124038 0.8185353 0.7000000 2.5632011 2.4939928\n125 0.3741657 1.4628739 1.2288206 0.5477226 0.5099020 1.5033296 1.7233688\n126 0.7348469 1.9442222 1.8138357 1.1747340 0.8831761 1.1224972 1.2922848\n127 0.9899495 0.6480741 0.7810250 0.8366600 0.7874008 2.6495283 2.6362853\n128 0.9695360 0.6782330 0.7280110 0.7348469 0.7211103 2.5690465 2.6400758\n129 0.4582576 0.9746794 0.8366600 0.5385165 0.3872983 1.9773720 1.8601075\n130 0.7071068 1.8165902 1.7691806 1.1916375 0.7874008 1.4352700 1.4525839\n131 0.8944272 2.0493902 1.9519221 1.4000000 1.1045361 1.2409674 0.9643651\n132 1.6340135 2.9137605 2.6944387 1.9773720 1.8574176 0.4123106 1.3490738\n133 0.4690416 0.9899495 0.8062258 0.5099020 0.4690416 1.9748418 1.8520259\n134 0.9000000 0.8426150 1.0295630 0.9219544 0.5744563 2.4515301 2.4248711\n135 1.0723805 0.9433981 1.1747340 1.1618950 0.7000000 2.4186773 2.2494444\n136 1.1000000 2.3558438 2.1587033 1.5394804 1.4317821 1.0049876 0.8944272\n137 0.7141428 1.3000000 0.9273618 0.3872983 0.7549834 1.8357560 2.0736441\n138 0.5099020 1.0677078 0.9848858 0.5477226 0.1414214 1.9442222 2.0371549\n139 1.1045361 0.6480741 0.7280110 0.8366600 0.8602325 2.7018512 2.7766887\n140 0.1732051 1.4035669 1.2165525 0.5567764 0.5196152 1.6822604 1.7832555\n141 0.3464102 1.3711309 1.0723805 0.4472136 0.6480741 1.6552945 1.7175564\n142 0.4690416 1.3784049 1.1445523 0.5477226 0.7615773 1.9235384 2.0322401\n143 1.1357817 0.2645751 0.5099020 0.9000000 0.8660254 2.7331301 2.6495283\n144 0.4898979 1.6124515 1.3453624 0.7211103 0.7348469 1.3490738 1.4730920\n145 0.5477226 1.5427249 1.1958261 0.5477226 0.8124038 1.5297059 1.7233688\n146 0.3741657 1.1747340 0.9327379 0.3741657 0.6164414 1.9748418 2.0124612\n147 0.8888194 0.6082763 0.7745967 0.8660254 0.7416198 2.5748786 2.3958297\n148 0.4358899 0.9643651 0.8366600 0.3872983 0.3605551 2.0904545 2.1400935\n149 0.7549834 1.1445523 0.7874008 0.3000000 0.7141428 2.0273135 2.2671568\n150 1.0295630 0.5830952 0.6403124 0.7615773 0.7211103 2.5690465 2.6248809\n          120       121       122       123       124       125       126\n2                                                                        \n3                                                                        \n4                                                                        \n5                                                                        \n6                                                                        \n7                                                                        \n8                                                                        \n9                                                                        \n10                                                                       \n11                                                                       \n12                                                                       \n13                                                                       \n14                                                                       \n15                                                                       \n16                                                                       \n17                                                                       \n18                                                                       \n19                                                                       \n20                                                                       \n21                                                                       \n22                                                                       \n23                                                                       \n24                                                                       \n25                                                                       \n26                                                                       \n27                                                                       \n28                                                                       \n29                                                                       \n30                                                                       \n31                                                                       \n32                                                                       \n33                                                                       \n34                                                                       \n35                                                                       \n36                                                                       \n37                                                                       \n38                                                                       \n39                                                                       \n40                                                                       \n41                                                                       \n42                                                                       \n43                                                                       \n44                                                                       \n45                                                                       \n46                                                                       \n47                                                                       \n48                                                                       \n49                                                                       \n50                                                                       \n51                                                                       \n52                                                                       \n53                                                                       \n54                                                                       \n55                                                                       \n56                                                                       \n57                                                                       \n58                                                                       \n59                                                                       \n60                                                                       \n61                                                                       \n62                                                                       \n63                                                                       \n64                                                                       \n65                                                                       \n66                                                                       \n67                                                                       \n68                                                                       \n69                                                                       \n70                                                                       \n71                                                                       \n72                                                                       \n73                                                                       \n74                                                                       \n75                                                                       \n76                                                                       \n77                                                                       \n78                                                                       \n79                                                                       \n80                                                                       \n81                                                                       \n82                                                                       \n83                                                                       \n84                                                                       \n85                                                                       \n86                                                                       \n87                                                                       \n88                                                                       \n89                                                                       \n90                                                                       \n91                                                                       \n92                                                                       \n93                                                                       \n94                                                                       \n95                                                                       \n96                                                                       \n97                                                                       \n98                                                                       \n99                                                                       \n100                                                                      \n101                                                                      \n102                                                                      \n103                                                                      \n104                                                                      \n105                                                                      \n106                                                                      \n107                                                                      \n108                                                                      \n109                                                                      \n110                                                                      \n111                                                                      \n112                                                                      \n113                                                                      \n114                                                                      \n115                                                                      \n116                                                                      \n117                                                                      \n118                                                                      \n119                                                                      \n120                                                                      \n121 1.7146428                                                            \n122 0.8831761 1.6062378                                                  \n123 2.5278449 1.3747727 2.7658633                                        \n124 0.6633250 1.2247449 0.7348469 2.2912878                              \n125 1.5968719 0.3000000 1.4525839 1.5033296 1.1180340                    \n126 1.8788294 0.6557439 1.9924859 0.9695360 1.5066519 0.6633250          \n127 0.7280110 1.3076697 0.6403124 2.4289916 0.1732051 1.1832160 1.6124515\n128 0.8660254 1.2529964 0.5744563 2.4248711 0.3605551 1.0862780 1.5684387\n129 1.1135529 0.6782330 1.0677078 1.7058722 0.7745967 0.5916080 1.0246951\n130 1.6522712 0.7937254 1.8894444 1.1224972 1.3228757 0.7745967 0.3464102\n131 1.9209373 0.8544004 2.1656408 0.6782330 1.6340135 0.9695360 0.4690416\n132 2.8948230 1.3928388 2.9223278 1.0630146 2.4617067 1.4798649 1.0246951\n133 1.1704700 0.6557439 1.0816654 1.7146428 0.8185353 0.6000000 1.0583005\n134 0.6782330 1.2328828 0.8831761 2.1840330 0.3741657 1.0630146 1.3674794\n135 0.7348469 1.3490738 1.0677078 2.0420578 0.8366600 1.1618950 1.3747727\n136 2.3194827 0.9165151 2.4454039 0.7000000 1.9339080 1.1357817 0.7416198\n137 1.6431677 0.6480741 1.2247449 1.9209373 1.1575837 0.5196152 1.1704700\n138 1.1445523 0.7416198 1.0630146 1.8055470 0.7280110 0.5099020 0.9486833\n139 0.8774964 1.3820275 0.5000000 2.5651511 0.4358899 1.2165525 1.7088007\n140 1.4628739 0.3741657 1.4282857 1.5588457 0.9273618 0.4123106 0.7416198\n141 1.5716234 0.2645751 1.3964240 1.5684387 1.0816654 0.3741657 0.8831761\n142 1.5066519 0.6082763 1.3820275 1.8384776 0.9000000 0.6928203 1.0770330\n143 0.6782330 1.4071247 0.3162278 2.4879711 0.5477226 1.2529964 1.7406895\n144 1.7578396 0.2236068 1.6401219 1.3038405 1.3228757 0.3162278 0.6480741\n145 1.7860571 0.3000000 1.5329710 1.5811388 1.2845233 0.4000000 0.9165151\n146 1.3453624 0.5744563 1.1958261 1.8384776 0.7681146 0.6164414 1.0862780\n147 0.5830952 1.2247449 0.7745967 2.2248595 0.2449490 1.1532563 1.5198684\n148 1.0862780 0.7348469 0.9695360 1.9313208 0.5099020 0.6244998 1.1000000\n149 1.5099669 0.7874008 1.0295630 2.0952327 1.0000000 0.6244998 1.2845233\n150 0.8660254 1.2845233 0.4582576 2.4248711 0.5385165 1.0862780 1.5937377\n          127       128       129       130       131       132       133\n2                                                                        \n3                                                                        \n4                                                                        \n5                                                                        \n6                                                                        \n7                                                                        \n8                                                                        \n9                                                                        \n10                                                                       \n11                                                                       \n12                                                                       \n13                                                                       \n14                                                                       \n15                                                                       \n16                                                                       \n17                                                                       \n18                                                                       \n19                                                                       \n20                                                                       \n21                                                                       \n22                                                                       \n23                                                                       \n24                                                                       \n25                                                                       \n26                                                                       \n27                                                                       \n28                                                                       \n29                                                                       \n30                                                                       \n31                                                                       \n32                                                                       \n33                                                                       \n34                                                                       \n35                                                                       \n36                                                                       \n37                                                                       \n38                                                                       \n39                                                                       \n40                                                                       \n41                                                                       \n42                                                                       \n43                                                                       \n44                                                                       \n45                                                                       \n46                                                                       \n47                                                                       \n48                                                                       \n49                                                                       \n50                                                                       \n51                                                                       \n52                                                                       \n53                                                                       \n54                                                                       \n55                                                                       \n56                                                                       \n57                                                                       \n58                                                                       \n59                                                                       \n60                                                                       \n61                                                                       \n62                                                                       \n63                                                                       \n64                                                                       \n65                                                                       \n66                                                                       \n67                                                                       \n68                                                                       \n69                                                                       \n70                                                                       \n71                                                                       \n72                                                                       \n73                                                                       \n74                                                                       \n75                                                                       \n76                                                                       \n77                                                                       \n78                                                                       \n79                                                                       \n80                                                                       \n81                                                                       \n82                                                                       \n83                                                                       \n84                                                                       \n85                                                                       \n86                                                                       \n87                                                                       \n88                                                                       \n89                                                                       \n90                                                                       \n91                                                                       \n92                                                                       \n93                                                                       \n94                                                                       \n95                                                                       \n96                                                                       \n97                                                                       \n98                                                                       \n99                                                                       \n100                                                                      \n101                                                                      \n102                                                                      \n103                                                                      \n104                                                                      \n105                                                                      \n106                                                                      \n107                                                                      \n108                                                                      \n109                                                                      \n110                                                                      \n111                                                                      \n112                                                                      \n113                                                                      \n114                                                                      \n115                                                                      \n116                                                                      \n117                                                                      \n118                                                                      \n119                                                                      \n120                                                                      \n121                                                                      \n122                                                                      \n123                                                                      \n124                                                                      \n125                                                                      \n126                                                                      \n127                                                                      \n128 0.2449490                                                            \n129 0.8774964 0.8426150                                                  \n130 1.4422205 1.4352700 0.9848858                                        \n131 1.7720045 1.7832555 1.1357817 0.5099020                              \n132 2.5475478 2.4839485 1.9748418 1.2845233 1.1618950                    \n133 0.9165151 0.8831761 0.1000000 1.0392305 1.1575837 1.9824228          \n134 0.4358899 0.4582576 0.7874008 1.1618950 1.5394804 2.3452079 0.8660254\n135 0.9219544 0.9000000 0.7874008 1.2041595 1.4933185 2.3832751 0.8774964\n136 2.0566964 2.0615528 1.4212670 0.9110434 0.5385165 0.9273618 1.4106736\n137 1.1704700 1.0246951 0.6782330 1.2845233 1.4387495 1.8761663 0.6403124\n138 0.7874008 0.6782330 0.4358899 0.8831761 1.2083046 1.8947295 0.5099020\n139 0.2828427 0.1414214 0.9643651 1.5748016 1.9235384 2.6172505 1.0000000\n140 1.0148892 0.9949874 0.6164414 0.7141428 0.9327379 1.5811388 0.6244998\n141 1.1575837 1.1045361 0.5196152 0.9695360 1.0392305 1.6522712 0.4690416\n142 0.9591663 0.9695360 0.7937254 1.0392305 1.2247449 1.8083141 0.7745967\n143 0.5196152 0.4795832 0.8124038 1.6217275 1.8894444 2.7055499 0.8426150\n144 1.4071247 1.3341664 0.6708204 0.8366600 0.8485281 1.3820275 0.6480741\n145 1.3416408 1.2569805 0.7141428 1.0770330 1.1224972 1.5588457 0.6633250\n146 0.8366600 0.8366600 0.5744563 1.0488088 1.2247449 1.9000000 0.5477226\n147 0.3872983 0.5567764 0.7071068 1.3379088 1.5842980 2.4939928 0.7416198\n148 0.5744563 0.5385165 0.4690416 1.0049876 1.2922848 2.0099751 0.5000000\n149 0.9848858 0.8185353 0.6928203 1.3453624 1.5652476 2.0346990 0.6708204\n150 0.4690416 0.2828427 0.7937254 1.4899664 1.8165902 2.5238859 0.8366600\n          134       135       136       137       138       139       140\n2                                                                        \n3                                                                        \n4                                                                        \n5                                                                        \n6                                                                        \n7                                                                        \n8                                                                        \n9                                                                        \n10                                                                       \n11                                                                       \n12                                                                       \n13                                                                       \n14                                                                       \n15                                                                       \n16                                                                       \n17                                                                       \n18                                                                       \n19                                                                       \n20                                                                       \n21                                                                       \n22                                                                       \n23                                                                       \n24                                                                       \n25                                                                       \n26                                                                       \n27                                                                       \n28                                                                       \n29                                                                       \n30                                                                       \n31                                                                       \n32                                                                       \n33                                                                       \n34                                                                       \n35                                                                       \n36                                                                       \n37                                                                       \n38                                                                       \n39                                                                       \n40                                                                       \n41                                                                       \n42                                                                       \n43                                                                       \n44                                                                       \n45                                                                       \n46                                                                       \n47                                                                       \n48                                                                       \n49                                                                       \n50                                                                       \n51                                                                       \n52                                                                       \n53                                                                       \n54                                                                       \n55                                                                       \n56                                                                       \n57                                                                       \n58                                                                       \n59                                                                       \n60                                                                       \n61                                                                       \n62                                                                       \n63                                                                       \n64                                                                       \n65                                                                       \n66                                                                       \n67                                                                       \n68                                                                       \n69                                                                       \n70                                                                       \n71                                                                       \n72                                                                       \n73                                                                       \n74                                                                       \n75                                                                       \n76                                                                       \n77                                                                       \n78                                                                       \n79                                                                       \n80                                                                       \n81                                                                       \n82                                                                       \n83                                                                       \n84                                                                       \n85                                                                       \n86                                                                       \n87                                                                       \n88                                                                       \n89                                                                       \n90                                                                       \n91                                                                       \n92                                                                       \n93                                                                       \n94                                                                       \n95                                                                       \n96                                                                       \n97                                                                       \n98                                                                       \n99                                                                       \n100                                                                      \n101                                                                      \n102                                                                      \n103                                                                      \n104                                                                      \n105                                                                      \n106                                                                      \n107                                                                      \n108                                                                      \n109                                                                      \n110                                                                      \n111                                                                      \n112                                                                      \n113                                                                      \n114                                                                      \n115                                                                      \n116                                                                      \n117                                                                      \n118                                                                      \n119                                                                      \n120                                                                      \n121                                                                      \n122                                                                      \n123                                                                      \n124                                                                      \n125                                                                      \n126                                                                      \n127                                                                      \n128                                                                      \n129                                                                      \n130                                                                      \n131                                                                      \n132                                                                      \n133                                                                      \n134                                                                      \n135 0.5830952                                                            \n136 1.9078784 1.9442222                                                  \n137 1.1916375 1.2961481 1.5427249                                        \n138 0.5916080 0.7141428 1.5198684 0.6855655                              \n139 0.5567764 0.9848858 2.1977261 1.1180340 0.8124038                    \n140 0.9486833 1.1916375 1.0862780 0.7615773 0.5916080 1.1269428          \n141 1.1445523 1.2688578 1.1269428 0.5000000 0.6782330 1.2247449 0.4123106\n142 1.0440307 1.3964240 1.2845233 0.8426150 0.8124038 1.0770330 0.3605551\n143 0.6480741 0.7745967 2.2045408 1.1135529 0.8306624 0.4795832 1.2247449\n144 1.3000000 1.3228757 0.9433981 0.6244998 0.7615773 1.4628739 0.5567764\n145 1.3304135 1.4387495 1.1357817 0.4358899 0.8124038 1.3711309 0.5744563\n146 0.9219544 1.2206556 1.3453624 0.7000000 0.6633250 0.9486833 0.3605551\n147 0.5099020 0.8124038 1.8920888 1.1916375 0.7937254 0.6244998 0.9591663\n148 0.5830952 0.9165151 1.5297059 0.7211103 0.3872983 0.6708204 0.4690416\n149 1.0488088 1.2247449 1.7029386 0.2449490 0.6244998 0.9000000 0.7874008\n150 0.5385165 0.7810250 2.1189620 0.9643651 0.6480741 0.3162278 1.0908712\n          141       142       143       144       145       146       147\n2                                                                        \n3                                                                        \n4                                                                        \n5                                                                        \n6                                                                        \n7                                                                        \n8                                                                        \n9                                                                        \n10                                                                       \n11                                                                       \n12                                                                       \n13                                                                       \n14                                                                       \n15                                                                       \n16                                                                       \n17                                                                       \n18                                                                       \n19                                                                       \n20                                                                       \n21                                                                       \n22                                                                       \n23                                                                       \n24                                                                       \n25                                                                       \n26                                                                       \n27                                                                       \n28                                                                       \n29                                                                       \n30                                                                       \n31                                                                       \n32                                                                       \n33                                                                       \n34                                                                       \n35                                                                       \n36                                                                       \n37                                                                       \n38                                                                       \n39                                                                       \n40                                                                       \n41                                                                       \n42                                                                       \n43                                                                       \n44                                                                       \n45                                                                       \n46                                                                       \n47                                                                       \n48                                                                       \n49                                                                       \n50                                                                       \n51                                                                       \n52                                                                       \n53                                                                       \n54                                                                       \n55                                                                       \n56                                                                       \n57                                                                       \n58                                                                       \n59                                                                       \n60                                                                       \n61                                                                       \n62                                                                       \n63                                                                       \n64                                                                       \n65                                                                       \n66                                                                       \n67                                                                       \n68                                                                       \n69                                                                       \n70                                                                       \n71                                                                       \n72                                                                       \n73                                                                       \n74                                                                       \n75                                                                       \n76                                                                       \n77                                                                       \n78                                                                       \n79                                                                       \n80                                                                       \n81                                                                       \n82                                                                       \n83                                                                       \n84                                                                       \n85                                                                       \n86                                                                       \n87                                                                       \n88                                                                       \n89                                                                       \n90                                                                       \n91                                                                       \n92                                                                       \n93                                                                       \n94                                                                       \n95                                                                       \n96                                                                       \n97                                                                       \n98                                                                       \n99                                                                       \n100                                                                      \n101                                                                      \n102                                                                      \n103                                                                      \n104                                                                      \n105                                                                      \n106                                                                      \n107                                                                      \n108                                                                      \n109                                                                      \n110                                                                      \n111                                                                      \n112                                                                      \n113                                                                      \n114                                                                      \n115                                                                      \n116                                                                      \n117                                                                      \n118                                                                      \n119                                                                      \n120                                                                      \n121                                                                      \n122                                                                      \n123                                                                      \n124                                                                      \n125                                                                      \n126                                                                      \n127                                                                      \n128                                                                      \n129                                                                      \n130                                                                      \n131                                                                      \n132                                                                      \n133                                                                      \n134                                                                      \n135                                                                      \n136                                                                      \n137                                                                      \n138                                                                      \n139                                                                      \n140                                                                      \n141                                                                      \n142 0.5477226                                                            \n143 1.2124356 1.2369317                                                  \n144 0.3464102 0.8124038 1.4317821                                        \n145 0.2449490 0.6928203 1.3747727 0.3162278                              \n146 0.4242641 0.2449490 1.0344080 0.7348469 0.6164414                    \n147 1.0630146 0.9433981 0.5477226 1.3076697 1.2845233 0.7810250          \n148 0.6082763 0.5196152 0.7745967 0.8426150 0.7937254 0.3605551 0.5830952\n149 0.6244998 0.8185353 0.9486833 0.8062258 0.6244998 0.6708204 1.0677078\n150 1.1224972 1.1224972 0.3316625 1.3190906 1.2569805 0.9486833 0.6557439\n          148       149\n2                      \n3                      \n4                      \n5                      \n6                      \n7                      \n8                      \n9                      \n10                     \n11                     \n12                     \n13                     \n14                     \n15                     \n16                     \n17                     \n18                     \n19                     \n20                     \n21                     \n22                     \n23                     \n24                     \n25                     \n26                     \n27                     \n28                     \n29                     \n30                     \n31                     \n32                     \n33                     \n34                     \n35                     \n36                     \n37                     \n38                     \n39                     \n40                     \n41                     \n42                     \n43                     \n44                     \n45                     \n46                     \n47                     \n48                     \n49                     \n50                     \n51                     \n52                     \n53                     \n54                     \n55                     \n56                     \n57                     \n58                     \n59                     \n60                     \n61                     \n62                     \n63                     \n64                     \n65                     \n66                     \n67                     \n68                     \n69                     \n70                     \n71                     \n72                     \n73                     \n74                     \n75                     \n76                     \n77                     \n78                     \n79                     \n80                     \n81                     \n82                     \n83                     \n84                     \n85                     \n86                     \n87                     \n88                     \n89                     \n90                     \n91                     \n92                     \n93                     \n94                     \n95                     \n96                     \n97                     \n98                     \n99                     \n100                    \n101                    \n102                    \n103                    \n104                    \n105                    \n106                    \n107                    \n108                    \n109                    \n110                    \n111                    \n112                    \n113                    \n114                    \n115                    \n116                    \n117                    \n118                    \n119                    \n120                    \n121                    \n122                    \n123                    \n124                    \n125                    \n126                    \n127                    \n128                    \n129                    \n130                    \n131                    \n132                    \n133                    \n134                    \n135                    \n136                    \n137                    \n138                    \n139                    \n140                    \n141                    \n142                    \n143                    \n144                    \n145                    \n146                    \n147                    \n148                    \n149 0.6164414          \n150 0.6403124 0.7681146"
  },
  {
    "objectID": "slides/12_grouping.html#euclidean-distance",
    "href": "slides/12_grouping.html#euclidean-distance",
    "title": "12-Multivariate Analyses",
    "section": "Euclidean distance",
    "text": "Euclidean distance"
  },
  {
    "objectID": "slides/12_grouping.html#non-euclidean-grouping",
    "href": "slides/12_grouping.html#non-euclidean-grouping",
    "title": "12-Multivariate Analyses",
    "section": "Non-Euclidean grouping",
    "text": "Non-Euclidean grouping\nNon-metric multidimensional scaling\n\nnmds$points\n\n            MDS1         MDS2\n1   -0.330635583  0.044833632\n2   -0.335374502 -0.031459172\n3   -0.370763815 -0.013456208\n4   -0.357779491 -0.033146739\n5   -0.344100946  0.048486588\n6   -0.264846540  0.104038468\n7   -0.369654451  0.011635889\n8   -0.326415270  0.025065404\n9   -0.385355048 -0.072253423\n10  -0.335704808 -0.021252225\n11  -0.298441350  0.083848865\n12  -0.337331640  0.010959146\n13  -0.354359215 -0.041795311\n14  -0.438617169 -0.072916854\n15  -0.291676283  0.164870644\n16  -0.266406261  0.171852951\n17  -0.300392022  0.118347475\n18  -0.321905260  0.044830152\n19  -0.245462212  0.108785084\n20  -0.322392551  0.075694885\n21  -0.270543310  0.045061382\n22  -0.308599792  0.065552905\n23  -0.426067393  0.046801698\n24  -0.265829229  0.009168893\n25  -0.306334371 -0.008646404\n26  -0.305461800 -0.025909547\n27  -0.297834059  0.019977690\n28  -0.311875822  0.048184533\n29  -0.317939006  0.039313083\n30  -0.340574079 -0.018061915\n31  -0.327059498 -0.026702206\n32  -0.270923550  0.049409177\n33  -0.340739454  0.116003482\n34  -0.312787913  0.140050977\n35  -0.327670410 -0.015578648\n36  -0.351029377  0.005301339\n37  -0.299782723  0.081064036\n38  -0.363911882  0.047442805\n39  -0.396066185 -0.058678957\n40  -0.317343610  0.031976525\n41  -0.341226730  0.041045963\n42  -0.399589687 -0.152213206\n43  -0.402089236 -0.025839798\n44  -0.281775265  0.022716498\n45  -0.269249987  0.081141171\n46  -0.335245938 -0.041603939\n47  -0.322594937  0.074069773\n48  -0.370738907 -0.018216309\n49  -0.308993365  0.076897770\n50  -0.332949330  0.016253499\n51   0.153644955  0.056351076\n52   0.126326642  0.016173546\n53   0.175357618  0.038896990\n54   0.068161295 -0.137525855\n55   0.156667692 -0.022683460\n56   0.096958213 -0.055850907\n57   0.137890695  0.027297404\n58  -0.056641731 -0.184596617\n59   0.141856019 -0.008184907\n60   0.033309225 -0.100842140\n61  -0.024493614 -0.227672101\n62   0.090233791 -0.028679472\n63   0.087093119 -0.150492974\n64   0.133256737 -0.026068440\n65   0.019979908 -0.060112732\n66   0.128132217  0.026348702\n67   0.091116541 -0.026295205\n68   0.058345348 -0.081753705\n69   0.170905648 -0.101306935\n70   0.045026303 -0.118498050\n71   0.137536784  0.015833592\n72   0.087393397 -0.059866185\n73   0.184762731 -0.056649756\n74   0.128139393 -0.043816531\n75   0.114907090 -0.024496484\n76   0.129265343  0.004051392\n77   0.180793702 -0.007581110\n78   0.192414726  0.019256278\n79   0.121015061 -0.031364082\n80   0.006358888 -0.110225544\n81   0.032566688 -0.137620015\n82   0.015956260 -0.143295203\n83   0.058162922 -0.083501946\n84   0.176254486 -0.039983467\n85   0.078932112 -0.024140935\n86   0.103411311  0.018808583\n87   0.155722449  0.027177433\n88   0.150673303 -0.101842170\n89   0.052484150 -0.044138590\n90   0.060647157 -0.113252481\n91   0.081038762 -0.094794810\n92   0.121730871 -0.016108546\n93   0.069448971 -0.093768792\n94  -0.051217895 -0.189388803\n95   0.073985555 -0.077995198\n96   0.059381108 -0.041572914\n97   0.070990210 -0.050761064\n98   0.107155034 -0.034912117\n99  -0.070775459 -0.150914086\n100  0.068787805 -0.064161211\n101  0.243617139  0.105465629\n102  0.187345730 -0.045663534\n103  0.281751893  0.059954343\n104  0.221205281  0.009039008\n105  0.252880368  0.042982032\n106  0.337096706  0.092834215\n107  0.113680701 -0.148245202\n108  0.309377431  0.050982611\n109  0.277307420 -0.007382563\n110  0.289306348  0.139975592\n111  0.196154070  0.041107267\n112  0.225671433 -0.009533707\n113  0.245744062  0.041749968\n114  0.193804562 -0.074884596\n115  0.213187223 -0.041221004\n116  0.213674476  0.057266205\n117  0.217749085  0.024627397\n118  0.326030357  0.173732906\n119  0.391404690  0.067325248\n120  0.194677942 -0.092377691\n121  0.258275633  0.079051747\n122  0.164647408 -0.052102556\n123  0.358732334  0.067228578\n124  0.191774969 -0.025278532\n125  0.236868117  0.076907334\n126  0.268980544  0.086618492\n127  0.173688755 -0.021854200\n128  0.164382084 -0.001297107\n129  0.246129541  0.010682062\n130  0.266243569  0.045070335\n131  0.313245614  0.040725220\n132  0.310631323  0.173401057\n133  0.250907178  0.012670166\n134  0.181058149 -0.018277741\n135  0.212688965 -0.053186632\n136  0.325624422  0.088597032\n137  0.218692385  0.091941460\n138  0.207898921  0.033477609\n139  0.153115849 -0.006606751\n140  0.239382516  0.055275090\n141  0.252102032  0.063865623\n142  0.230870447  0.056845095\n143  0.187345730 -0.045663534\n144  0.264209776  0.082047714\n145  0.251455207  0.094320753\n146  0.232930515  0.038529143\n147  0.216850698 -0.039054387\n148  0.211395293  0.022966706\n149  0.200298467  0.080365112\n150  0.167298375 -0.001429985\nattr(,\"centre\")\n[1] TRUE\nattr(,\"pc\")\n[1] TRUE\nattr(,\"halfchange\")\n[1] TRUE\nattr(,\"internalscaling\")\n[1] 3.885857"
  },
  {
    "objectID": "slides/12_grouping.html#principal-component-analysis",
    "href": "slides/12_grouping.html#principal-component-analysis",
    "title": "12-Multivariate Analyses",
    "section": "Principal Component Analysis",
    "text": "Principal Component Analysis"
  },
  {
    "objectID": "slides/12_grouping.html#pca",
    "href": "slides/12_grouping.html#pca",
    "title": "12-Multivariate Analyses",
    "section": "PCA",
    "text": "PCA\n\n\n**Results for the Principal Component Analysis (PCA)**\nThe analysis was performed on 150 individuals, described by 4 variables\n*The results are available in the following objects:\n\n   name               description                          \n1  \"$eig\"             \"eigenvalues\"                        \n2  \"$var\"             \"results for the variables\"          \n3  \"$var$coord\"       \"coord. for the variables\"           \n4  \"$var$cor\"         \"correlations variables - dimensions\"\n5  \"$var$cos2\"        \"cos2 for the variables\"             \n6  \"$var$contrib\"     \"contributions of the variables\"     \n7  \"$ind\"             \"results for the individuals\"        \n8  \"$ind$coord\"       \"coord. for the individuals\"         \n9  \"$ind$cos2\"        \"cos2 for the individuals\"           \n10 \"$ind$contrib\"     \"contributions of the individuals\"   \n11 \"$call\"            \"summary statistics\"                 \n12 \"$call$centre\"     \"mean of the variables\"              \n13 \"$call$ecart.type\" \"standard error of the variables\"    \n14 \"$call$row.w\"      \"weights for the individuals\"        \n15 \"$call$col.w\"      \"weights for the variables\""
  },
  {
    "objectID": "slides/12_grouping.html#pca---eigenvectors",
    "href": "slides/12_grouping.html#pca---eigenvectors",
    "title": "12-Multivariate Analyses",
    "section": "PCA - Eigenvectors",
    "text": "PCA - Eigenvectors\n\n\n       eigenvalue percentage of variance cumulative percentage of variance\ncomp 1 2.91849782             72.9624454                          72.96245\ncomp 2 0.91403047             22.8507618                          95.81321\ncomp 3 0.14675688              3.6689219                          99.48213\ncomp 4 0.02071484              0.5178709                         100.00000"
  },
  {
    "objectID": "slides/12_grouping.html#pca---loadings-of-variables",
    "href": "slides/12_grouping.html#pca---loadings-of-variables",
    "title": "12-Multivariate Analyses",
    "section": "PCA - Loadings of variables",
    "text": "PCA - Loadings of variables\n\niris.pca$var\n\n$coord\n                  Dim.1      Dim.2       Dim.3       Dim.4\nSepal.Length  0.8901688 0.36082989 -0.27565767 -0.03760602\nSepal.Width  -0.4601427 0.88271627  0.09361987  0.01777631\nPetal.Length  0.9915552 0.02341519  0.05444699  0.11534978\nPetal.Width   0.9649790 0.06399985  0.24298265 -0.07535950\n\n$cor\n                  Dim.1      Dim.2       Dim.3       Dim.4\nSepal.Length  0.8901688 0.36082989 -0.27565767 -0.03760602\nSepal.Width  -0.4601427 0.88271627  0.09361987  0.01777631\nPetal.Length  0.9915552 0.02341519  0.05444699  0.11534978\nPetal.Width   0.9649790 0.06399985  0.24298265 -0.07535950\n\n$cos2\n                 Dim.1       Dim.2       Dim.3        Dim.4\nSepal.Length 0.7924004 0.130198208 0.075987149 0.0014142127\nSepal.Width  0.2117313 0.779188012 0.008764681 0.0003159971\nPetal.Length 0.9831817 0.000548271 0.002964475 0.0133055723\nPetal.Width  0.9311844 0.004095980 0.059040571 0.0056790544\n\n$contrib\n                 Dim.1       Dim.2     Dim.3     Dim.4\nSepal.Length 27.150969 14.24440565 51.777574  6.827052\nSepal.Width   7.254804 85.24748749  5.972245  1.525463\nPetal.Length 33.687936  0.05998389  2.019990 64.232089\nPetal.Width  31.906291  0.44812296 40.230191 27.415396"
  },
  {
    "objectID": "slides/12_grouping.html#pca---loadings-of-observations",
    "href": "slides/12_grouping.html#pca---loadings-of-observations",
    "title": "12-Multivariate Analyses",
    "section": "PCA - Loadings of observations",
    "text": "PCA - Loadings of observations\n\n\n$coord\n          Dim.1        Dim.2        Dim.3        Dim.4\n1   -2.26470281  0.480026597 -0.127706022 -0.024168204\n2   -2.08096115 -0.674133557 -0.234608854 -0.103006775\n3   -2.36422905 -0.341908024  0.044201485 -0.028377053\n4   -2.29938422 -0.597394508  0.091290106  0.065955560\n5   -2.38984217  0.646835383  0.015738196  0.035922813\n6   -2.07563095  1.489177523  0.026968294 -0.006608180\n7   -2.44402884  0.047644198  0.335470401  0.036775557\n8   -2.23284716  0.223148073 -0.088695498  0.024612096\n9   -2.33464048 -1.115327675  0.145076864  0.026859221\n10  -2.18432817 -0.469013561 -0.253765567  0.039899288\n11  -2.16631010  1.043690653 -0.268681102 -0.016731367\n12  -2.32613087  0.133078335  0.093759244  0.133483413\n13  -2.21845090 -0.728676165 -0.230911237 -0.002425038\n14  -2.63310070 -0.961506729  0.180796084  0.019215534\n15  -2.19874060  1.860057113 -0.472900998 -0.194731769\n16  -2.26221453  2.686284485  0.030526609 -0.050533737\n17  -2.20758770  1.483609363 -0.005344094 -0.188817432\n18  -2.19034951  0.488838316 -0.044215316 -0.093090438\n19  -1.89857200  1.405018794 -0.374343275 -0.061095967\n20  -2.34336905  1.127849382  0.132630467  0.037756420\n21  -1.91432300  0.408855708 -0.421292594 -0.010921286\n22  -2.20701284  0.924121427  0.159865277 -0.059597330\n23  -2.77434470  0.458343668  0.332179098 -0.019648430\n24  -1.81866953  0.085558526  0.034488596 -0.151140999\n25  -2.22716331  0.137254455  0.117993536  0.270140352\n26  -1.95184633 -0.625618588 -0.305640982 -0.043561651\n27  -2.05115137  0.242163553  0.086364011 -0.067680060\n28  -2.16857717  0.527149525 -0.206816248 -0.010275393\n29  -2.13956345  0.313217810 -0.271150240 -0.084259221\n30  -2.26526149 -0.337731904  0.068435776  0.108279885\n31  -2.14012214 -0.504540690 -0.075008442  0.048188868\n32  -1.83159477  0.423695068 -0.270467377 -0.239870381\n33  -2.61494794  1.793575856  0.047228419  0.229235932\n34  -2.44617739  2.150727877 -0.082668045  0.048214393\n35  -2.10997488 -0.460201841 -0.170274861 -0.029022947\n36  -2.20780890 -0.206107398 -0.225441580 -0.168907873\n37  -2.04514621  0.661558111 -0.484537410 -0.196358525\n38  -2.52733191  0.592292774  0.019435812  0.136504550\n39  -2.42963258 -0.904180040  0.193254662  0.009738423\n40  -2.16971071  0.268878961 -0.175883821 -0.007047406\n41  -2.28647514  0.441715388  0.034894909 -0.106983249\n42  -1.85812246 -2.337415158 -0.204234223 -0.289863919\n43  -2.55363840 -0.479100690  0.305766453  0.066601453\n44  -1.96444768  0.472326668  0.309601318 -0.177093014\n45  -2.13705901  1.142229262  0.248433561  0.151043437\n46  -2.06974430 -0.711052725 -0.063929826 -0.140269507\n47  -2.38473317  1.120429702  0.057217858  0.152230967\n48  -2.39437631 -0.386246873  0.139467905  0.048834762\n49  -2.22944655  0.997959764 -0.181492780  0.014928135\n50  -2.20383344  0.009216358 -0.153029490 -0.049371732\n51   1.10178118  0.862972418 -0.684586163 -0.034833776\n52   0.73133743  0.594614726 -0.094121716 -0.004903623\n53   1.24097932  0.616297654 -0.554006835 -0.009423397\n54   0.40748306 -1.754403989 -0.023101768 -0.065768835\n55   1.07547470 -0.208421046 -0.398255523 -0.104736873\n56   0.38868734 -0.593283636  0.124191550  0.240831300\n57   0.74652974  0.773019312  0.148969403  0.077369785\n58  -0.48732274 -1.852429087  0.249265266  0.040520205\n59   0.92790164  0.032226078 -0.596169361  0.029879609\n60   0.01142619 -1.034018275  0.538899390  0.028461184\n61  -0.11019628 -2.654072819 -0.046790444 -0.013760731\n62   0.44069345 -0.063295188  0.205073815 -0.040126082\n63   0.56210831 -1.764724381 -0.765771394 -0.045731157\n64   0.71956189 -0.186224606 -0.068658945  0.164807198\n65  -0.03335470 -0.439003210  0.194932893 -0.109048499\n66   0.87540719  0.509063957 -0.503511382 -0.104943723\n67   0.35025167 -0.196311735  0.490873075  0.191509364\n68   0.15881005 -0.792095742 -0.302037174  0.205297735\n69   1.22509363 -1.622243803 -0.482304024 -0.225899769\n70   0.16491790 -1.302609230 -0.172837808  0.051726849\n71   0.73768265  0.396571562  0.616526306  0.083284123\n72   0.47628719 -0.417320281 -0.264952227 -0.113568273\n73   1.23417810 -0.933325729 -0.368412272  0.009944526\n74   0.63285820 -0.416387721 -0.291896252  0.274220152\n75   0.70266118 -0.063411820 -0.446027008 -0.043458325\n76   0.87427365  0.250793393 -0.472578954 -0.101715736\n77   1.25650912 -0.077256020 -0.727155002 -0.039688518\n78   1.35840512  0.331311682 -0.260826577 -0.066828064\n79   0.66480037 -0.225927855  0.085863889  0.036439840\n80  -0.04025861 -1.058718547 -0.319573330 -0.064788156\n81   0.13079518 -1.562271834 -0.149983478  0.009402523\n82   0.02345269 -1.572475594 -0.241552281  0.032772444\n83   0.24153827 -0.777256383 -0.151211957 -0.023651360\n84   1.06109461 -0.633843245  0.105311387  0.183968453\n85   0.22397877 -0.287773512  0.665249720  0.254828368\n86   0.42913912  0.845582241  0.450634071  0.109675181\n87   1.04872805  0.522051797 -0.395786384 -0.037209019\n88   1.04453138 -1.382988719 -0.688295960 -0.136835600\n89   0.06958832 -0.219503335  0.291579274  0.147144581\n90   0.28347724 -1.329324639  0.089410023 -0.008905805\n91   0.27907778 -1.120028524  0.094487601  0.270657196\n92   0.62456979  0.024923029 -0.020481147  0.147686401\n93   0.33653037 -0.988404018 -0.199389755 -0.006530562\n94  -0.36218338 -2.019237873  0.105821048 -0.019570812\n95   0.28858624 -0.855730320  0.130889685  0.107402349\n96   0.09136066 -0.181192126  0.128978343  0.229959626\n97   0.22771687 -0.384920081  0.156213154  0.132605877\n98   0.57638829 -0.154873597 -0.271650362  0.019860679\n99  -0.44766702 -1.543792034  0.190400930 -0.199946457\n100  0.25673059 -0.598851796  0.091879161  0.058622049\n101  1.84456887  0.870421312  1.005401018  0.049249743\n102  1.15788161 -0.698869862  0.530160149  0.040520754\n103  2.20526679  0.562010477 -0.202914170 -0.059184194\n104  1.44015066 -0.046987588  0.163630107  0.235770073\n105  1.86781222  0.295044824  0.395628375  0.016298272\n106  2.75187334  0.800409201 -0.582309103  0.101384486\n107  0.36701769 -1.561502891  0.986893267  0.133123834\n108  2.30243944  0.420065580 -0.651706439  0.238041242\n109  2.00668647 -0.711438654 -0.393990571  0.086510630\n110  2.25977735  1.921010376  0.397551897 -0.104838918\n111  1.36417549  0.692756454  0.284612074 -0.107860420\n112  1.60267867 -0.421700450  0.023186408 -0.058331633\n113  1.88390070  0.419249651  0.026338410 -0.146414939\n114  1.26011510 -1.162260421  0.580249290 -0.099157321\n115  1.46764520 -0.442271587  1.003869574 -0.275658903\n116  1.59007732  0.676244806  0.638428708 -0.191862996\n117  1.47143146  0.255621824  0.037431260  0.155330271\n118  2.42632899  2.556661251 -0.127881459  0.273807183\n119  3.31069558  0.017780949 -0.703305304 -0.045188606\n120  1.26376667 -1.706745380 -0.267536893  0.065180800\n121  2.03771630  0.910467410  0.234799484 -0.167951254\n122  0.97798073 -0.571764325  0.828127201 -0.027755587\n123  2.89765149  0.413641060 -0.857421825  0.127336502\n124  1.33323218 -0.481811219 -0.005428364 -0.139959148\n125  1.70073390  1.013921867  0.298450613  0.061643734\n126  1.95432671  1.007777596 -0.419984722  0.218338351\n127  1.17510363 -0.316394472  0.129937757 -0.125420444\n128  1.02095055  0.064346029  0.337715967  0.008654401\n129  1.78834992 -0.187361215  0.270658006 -0.031087648\n130  1.86364755  0.562290726 -0.715634119  0.208215164\n131  2.43595373  0.259284433 -0.727816146  0.017923365\n132  2.30492772  2.626323468 -0.493473808  0.211675709\n133  1.86270322 -0.178549495  0.354148712 -0.100009882\n134  1.11414774 -0.292922623 -0.183488392  0.186343697\n135  1.20247330 -0.811315271 -0.164723757  0.489483470\n136  2.79877045  0.856803329 -0.542906499 -0.295881050\n137  1.57625591  1.068581107  0.945853819 -0.035605759\n138  1.34629210  0.422430611  0.180875478  0.215421288\n139  0.92482492  0.017223100  0.416826193 -0.005238409\n140  1.85204505  0.676128174 -0.012672115 -0.195195239\n141  2.01481043  0.613885637  0.428332842 -0.247538313\n142  1.90178409  0.689575494  0.130075005 -0.469696647\n143  1.15788161 -0.698869862  0.530160149  0.040520754\n144  2.04055823  0.867520601  0.338144000 -0.045187126\n145  1.99814710  1.049168747  0.632413436 -0.214045204\n146  1.87050329  0.386966082  0.256273852 -0.389256845\n147  1.56458048 -0.896686809 -0.026371352 -0.220192100\n148  1.52117050  0.269069144  0.180178380 -0.119171137\n149  1.37278779  1.011254419  0.933395241 -0.026128648\n150  0.96065603 -0.024331668  0.528248807  0.163078032\n\n$cos2\n           Dim.1        Dim.2        Dim.3        Dim.4\n1   9.539975e-01 4.286032e-02 3.033525e-03 1.086460e-04\n2   8.927725e-01 9.369248e-02 1.134754e-02 2.187482e-03\n3   9.790410e-01 2.047578e-02 3.422122e-04 1.410446e-04\n4   9.346682e-01 6.308947e-02 1.473268e-03 7.690193e-04\n5   9.315095e-01 6.823959e-02 4.039790e-05 2.104697e-04\n6   6.600989e-01 3.397830e-01 1.114335e-04 6.690714e-06\n7   9.809239e-01 3.727715e-04 1.848124e-02 2.220962e-04\n8   9.884478e-01 9.872384e-03 1.559692e-03 1.200972e-04\n9   8.115435e-01 1.852153e-01 3.133777e-03 1.074134e-04\n10  9.434549e-01 4.349669e-02 1.273359e-02 3.147862e-04\n11  8.015666e-01 1.860553e-01 1.233027e-02 4.781468e-05\n12  9.918759e-01 3.246413e-03 1.611452e-03 3.266207e-03\n13  8.938769e-01 9.643777e-02 9.684299e-03 1.068108e-06\n14  8.786492e-01 1.171616e-01 4.142463e-03 4.679349e-05\n15  5.650488e-01 4.043808e-01 2.613836e-02 4.432120e-03\n16  4.148109e-01 5.849066e-01 7.553351e-05 2.069881e-04\n17  6.854138e-01 3.095680e-01 4.016660e-06 5.014193e-03\n18  9.505502e-01 4.734550e-02 3.873412e-04 1.716953e-03\n19  6.298932e-01 3.449666e-01 2.448797e-02 6.522857e-04\n20  8.096466e-01 1.875497e-01 2.593586e-03 2.101821e-04\n21  9.140097e-01 4.169275e-02 4.426781e-02 2.974870e-05\n22  8.465230e-01 1.484182e-01 4.441578e-03 6.172806e-04\n23  9.599880e-01 2.620158e-02 1.376225e-02 4.815049e-05\n24  9.906097e-01 2.192409e-03 3.562427e-04 6.841630e-03\n25  9.791281e-01 3.718675e-03 2.748222e-03 1.440503e-02\n26  8.867166e-01 9.109885e-02 2.174287e-02 4.416744e-04\n27  9.834773e-01 1.370839e-02 1.743550e-03 1.070756e-03\n28  9.361470e-01 5.531742e-02 8.514587e-03 2.101799e-05\n29  9.624243e-01 2.062572e-02 1.545739e-02 1.492626e-03\n30  9.752045e-01 2.167720e-02 8.900726e-04 2.228202e-03\n31  9.457919e-01 5.256672e-02 1.161820e-03 4.795258e-04\n32  9.153582e-01 4.898229e-02 1.996007e-02 1.569949e-02\n33  6.763790e-01 3.182025e-01 2.206332e-04 5.197918e-03\n34  5.635205e-01 4.356170e-01 6.435898e-04 2.189209e-04\n35  9.485212e-01 4.512209e-02 6.177227e-03 1.794632e-04\n36  9.756149e-01 8.502422e-03 1.017240e-02 5.710252e-03\n37  8.547102e-01 8.943472e-02 4.797608e-02 7.878975e-03\n38  9.452702e-01 5.191636e-02 5.590322e-05 2.757564e-03\n39  8.734875e-01 1.209721e-01 5.526313e-03 1.403307e-05\n40  9.785321e-01 1.502744e-02 6.430181e-03 1.032357e-05\n41  9.617761e-01 3.589435e-02 2.240088e-04 2.105584e-03\n42  3.818483e-01 6.042461e-01 4.613167e-03 9.292455e-03\n43  9.521845e-01 3.351629e-02 1.365155e-02 6.476937e-04\n44  9.167790e-01 5.299912e-02 2.277138e-02 7.450520e-03\n45  7.667622e-01 2.190454e-01 1.036211e-02 3.830287e-03\n46  8.900194e-01 1.050436e-01 8.491279e-04 4.087828e-03\n47  8.160634e-01 1.801414e-01 4.697940e-04 3.325449e-03\n48  9.710330e-01 2.526848e-02 3.294562e-03 4.039311e-04\n49  8.284719e-01 1.660006e-01 5.490379e-03 3.714452e-05\n50  9.946874e-01 1.739593e-05 4.796002e-03 4.992129e-04\n51  4.998618e-01 3.066571e-01 1.929814e-01 4.996436e-04\n52  5.960682e-01 3.940322e-01 9.872793e-03 2.679752e-05\n53  6.915685e-01 1.705639e-01 1.378277e-01 3.987688e-05\n54  5.110830e-02 9.473960e-01 1.642717e-04 1.331413e-03\n55  8.444751e-01 3.171536e-02 1.158004e-01 8.009136e-03\n56  2.620665e-01 6.105701e-01 2.675438e-02 1.006090e-01\n57  4.710788e-01 5.051030e-01 1.875830e-02 5.059902e-03\n58  6.362155e-02 9.192932e-01 1.664541e-02 4.398597e-04\n59  7.066943e-01 8.523983e-04 2.917205e-01 7.327866e-04\n60  9.595978e-05 7.858559e-01 2.134528e-01 5.953775e-04\n61  1.720338e-03 9.979427e-01 3.101660e-04 2.682643e-05\n62  8.029139e-01 1.656293e-02 1.738666e-01 6.656551e-03\n63  7.862358e-02 7.749373e-01 1.459187e-01 5.203999e-04\n64  8.860991e-01 5.934992e-02 8.067524e-03 4.648345e-02\n65  4.564686e-03 7.907372e-01 1.559075e-01 4.879060e-02\n66  5.940507e-01 2.008852e-01 1.965268e-01 8.537215e-03\n67  2.795423e-01 8.781721e-02 5.490673e-01 8.357322e-02\n68  3.208691e-02 7.982287e-01 1.160627e-01 5.362166e-02\n69  3.398538e-01 5.959170e-01 5.267388e-02 1.155540e-02\n70  1.548382e-02 9.659862e-01 1.700670e-02 1.523262e-03\n71  4.999383e-01 1.444842e-01 3.492051e-01 6.372381e-03\n72  4.685974e-01 3.597502e-01 1.450098e-01 2.664257e-02\n73  6.020253e-01 3.442909e-01 5.364475e-02 3.908654e-05\n74  5.454390e-01 2.361181e-01 1.160354e-01 1.024076e-01\n75  7.067637e-01 5.756026e-03 2.847768e-01 2.703512e-03\n76  7.204579e-01 5.928516e-02 2.105051e-01 9.751919e-03\n77  7.464447e-01 2.821831e-03 2.499887e-01 7.447254e-04\n78  9.101054e-01 5.413854e-02 3.355342e-02 2.202677e-03\n79  8.809180e-01 1.017402e-01 1.469515e-02 2.646707e-03\n80  1.318942e-03 9.121560e-01 8.310921e-02 3.415854e-03\n81  6.897068e-03 9.839981e-01 9.069177e-03 3.564264e-05\n82  2.171750e-04 9.763206e-01 2.303811e-02 4.240747e-04\n83  8.505812e-02 8.807901e-01 3.333620e-02 8.155603e-04\n84  7.159556e-01 2.554710e-01 7.052264e-03 2.152111e-02\n85  7.832704e-02 1.293003e-01 6.909830e-01 1.013896e-01\n86  1.652746e-01 6.416844e-01 1.822459e-01 1.079510e-02\n87  7.186556e-01 1.780829e-01 1.023568e-01 9.046727e-04\n88  3.120681e-01 5.470709e-01 1.355055e-01 5.355556e-03\n89  3.032379e-02 3.017123e-01 5.323828e-01 1.355811e-01\n90  4.330787e-02 9.523411e-01 4.308269e-03 4.274416e-05\n91  5.506021e-02 8.868405e-01 6.311564e-03 5.178769e-02\n92  9.446604e-01 1.504234e-03 1.015833e-03 5.281956e-02\n93  1.002241e-01 8.645554e-01 3.518273e-02 3.774200e-05\n94  3.108397e-02 9.661717e-01 2.653527e-03 9.076054e-05\n95  9.864922e-02 8.673937e-01 2.029333e-02 1.366375e-02\n96  7.540386e-02 2.965881e-01 1.502826e-01 4.777254e-01\n97  2.142720e-01 6.122323e-01 1.008348e-01 7.266088e-02\n98  7.718989e-01 5.572946e-02 1.714552e-01 9.164701e-04\n99  7.534247e-02 8.959985e-01 1.362912e-02 1.502994e-02\n100 1.510282e-01 8.217536e-01 1.934358e-02 7.874535e-03\n101 6.576882e-01 1.464500e-01 1.953930e-01 4.688547e-04\n102 6.348502e-01 2.312787e-01 1.330936e-01 7.774957e-04\n103 9.309818e-01 6.046551e-02 7.882131e-03 6.705488e-04\n104 9.608218e-01 1.022806e-03 1.240376e-02 2.575161e-02\n105 9.346725e-01 2.332217e-02 4.193416e-02 7.116659e-05\n106 8.843819e-01 7.481817e-02 3.959954e-02 1.200400e-03\n107 3.778803e-02 6.840153e-01 2.732251e-01 4.971551e-03\n108 8.896069e-01 2.961119e-02 7.127311e-02 9.508809e-03\n109 8.575580e-01 1.077902e-01 3.305796e-02 1.593835e-03\n110 5.695564e-01 4.115901e-01 1.762760e-02 1.225887e-03\n111 7.647242e-01 1.972084e-01 3.328672e-02 4.780668e-03\n112 9.339097e-01 6.465768e-02 1.954695e-04 1.237144e-03\n113 9.471838e-01 4.690981e-02 1.851388e-04 5.721225e-03\n114 4.833376e-01 4.111848e-01 1.024848e-01 2.992814e-03\n115 6.273744e-01 5.697216e-02 2.935210e-01 2.213241e-02\n116 7.371151e-01 1.333235e-01 1.188293e-01 1.073202e-02\n117 9.597199e-01 2.896412e-02 6.210597e-04 1.069490e-02\n118 4.704046e-01 5.222982e-01 1.306734e-03 5.990483e-03\n119 9.566234e-01 2.759385e-05 4.317082e-02 1.782216e-04\n120 3.482637e-01 6.352021e-01 1.560780e-02 9.264325e-04\n121 8.198686e-01 1.636762e-01 1.088557e-02 5.569591e-03\n122 4.855240e-01 1.659527e-01 3.481322e-01 3.910668e-04\n123 9.010088e-01 1.836048e-02 7.889070e-02 1.739973e-03\n124 8.759355e-01 1.143969e-01 1.452106e-05 9.653019e-03\n125 7.207085e-01 2.561509e-01 2.219381e-02 9.468142e-04\n126 7.549599e-01 2.007516e-01 3.486555e-02 9.423009e-03\n127 9.123146e-01 6.613785e-02 1.115483e-02 1.039271e-02\n128 8.980987e-01 3.567452e-03 9.826930e-02 6.453402e-05\n129 9.669461e-01 1.061345e-02 2.214823e-02 2.921952e-04\n130 7.993811e-01 7.276930e-02 1.178714e-01 9.978173e-03\n131 9.085510e-01 1.029352e-02 8.110630e-02 4.918700e-05\n132 4.250633e-01 5.518683e-01 1.948351e-02 3.584933e-03\n133 9.539992e-01 8.765525e-03 3.448514e-02 2.750088e-03\n134 8.895068e-01 6.148505e-02 2.412575e-02 2.488245e-02\n135 6.098699e-01 2.776295e-01 1.144455e-02 1.010561e-01\n136 8.752553e-01 8.202807e-02 3.293444e-02 9.782154e-03\n137 5.494001e-01 2.524935e-01 1.978260e-01 2.803340e-04\n138 8.755744e-01 8.620357e-02 1.580425e-02 2.241773e-02\n139 8.308982e-01 2.881718e-04 1.687869e-01 2.665801e-05\n140 8.737961e-01 1.164569e-01 4.090771e-05 9.706116e-03\n141 8.672096e-01 8.050645e-02 3.919390e-02 1.309003e-02\n142 8.353172e-01 1.098228e-01 3.907659e-03 5.095232e-02\n143 6.348502e-01 2.312787e-01 1.330936e-01 7.774957e-04\n144 8.273394e-01 1.495359e-01 2.271900e-02 4.057095e-04\n145 7.208004e-01 1.987242e-01 7.220417e-02 8.271249e-03\n146 9.050786e-01 3.873603e-02 1.698940e-02 3.919601e-02\n147 7.415355e-01 2.435666e-01 2.106691e-04 1.468722e-02\n148 9.510633e-01 2.975647e-02 1.334317e-02 5.837082e-03\n149 4.986771e-01 2.706036e-01 2.305387e-01 1.806536e-04\n150 7.508462e-01 4.816803e-04 2.270347e-01 2.163745e-02\n\n$contrib\n           Dim.1        Dim.2        Dim.3        Dim.4\n1   1.171580e+00 1.680655e-01 0.0740854699 0.0187981878\n2   9.891845e-01 3.314667e-01 0.2500340065 0.3414749194\n3   1.276816e+00 8.526419e-02 0.0088753196 0.0259156335\n4   1.207737e+00 2.602978e-01 0.0378580037 0.1400006497\n5   1.304631e+00 3.051656e-01 0.0011251752 0.0415305722\n6   9.841236e-01 1.617488e+00 0.0033038266 0.0014053710\n7   1.364464e+00 1.655648e-03 0.5112327883 0.0435256991\n8   1.138852e+00 3.631904e-02 0.0357366169 0.0194950539\n9   1.245057e+00 9.073044e-01 0.0956107225 0.0232174250\n10  1.089896e+00 1.604423e-01 0.2925335430 0.0512339121\n11  1.071990e+00 7.944959e-01 0.3279325502 0.0090092802\n12  1.235998e+00 1.291703e-02 0.0399336016 0.5734318882\n13  1.124214e+00 3.872730e-01 0.2422146572 0.0001892624\n14  1.583742e+00 6.742993e-01 0.1484869630 0.0118831650\n15  1.104326e+00 2.523484e+00 1.0158994955 1.2203962175\n16  1.169007e+00 5.263227e+00 0.0042331867 0.0821845289\n17  1.113231e+00 1.605415e+00 0.0001297354 1.1473909140\n18  1.095913e+00 1.742924e-01 0.0088808750 0.2788928520\n19  8.233861e-01 1.439834e+00 0.6365761361 0.1201302332\n20  1.254385e+00 9.277913e-01 0.0799092179 0.0458784612\n21  8.371047e-01 1.219237e-01 0.8062652335 0.0038386173\n22  1.112651e+00 6.228825e-01 0.1160963522 0.1143091084\n23  1.758208e+00 1.532253e-01 0.5012505771 0.0124246151\n24  7.555391e-01 5.339181e-03 0.0054033277 0.7351768228\n25  1.133062e+00 1.374045e-02 0.0632450754 2.3485843165\n26  8.702431e-01 2.854745e-01 0.4243590392 0.0610711214\n27  9.610474e-01 4.277260e-02 0.0338825346 0.1474173843\n28  1.074235e+00 2.026822e-01 0.1943030388 0.0033980058\n29  1.045682e+00 7.155516e-02 0.3339875447 0.2284873243\n30  1.172158e+00 8.319405e-02 0.0212753483 0.3773312792\n31  1.046228e+00 1.856695e-01 0.0255582180 0.0747344232\n32  7.663165e-01 1.309347e-01 0.3323074374 1.8517420279\n33  1.561980e+00 2.346322e+00 0.0101325112 1.6911908382\n34  1.366864e+00 3.373797e+00 0.0310445679 0.0748136145\n35  1.016960e+00 1.544702e-01 0.1317077574 0.0271087969\n36  1.113454e+00 3.098384e-02 0.2308757521 0.9181782850\n37  9.554283e-01 3.192156e-01 1.0665099476 1.2408713464\n38  1.459063e+00 2.558709e-01 0.0017159937 0.5996826546\n39  1.348437e+00 5.962905e-01 0.1696563980 0.0030521403\n40  1.075358e+00 5.273048e-02 0.1405277411 0.0015984012\n41  1.194214e+00 1.423092e-01 0.0055313918 0.3683484106\n42  7.886749e-01 3.984922e+00 0.1894817193 2.7040551932\n43  1.489595e+00 1.674178e-01 0.4247075225 0.1427560884\n44  8.815162e-01 1.627170e-01 0.4354275311 1.0093228160\n45  1.043236e+00 9.516004e-01 0.2803695298 0.7342280157\n46  9.785494e-01 3.687667e-01 0.0185659562 0.6332187627\n47  1.299059e+00 9.156243e-01 0.0148721404 0.7458186614\n48  1.309586e+00 1.088123e-01 0.0883606365 0.0767512359\n49  1.135386e+00 7.263971e-01 0.1496335529 0.0071719679\n50  1.109448e+00 6.195362e-05 0.1063801377 0.0784483755\n51  2.772937e-01 5.431777e-01 2.1289551731 0.0390506557\n52  1.221757e-01 2.578810e-01 0.0402429633 0.0007738583\n53  3.517859e-01 2.770315e-01 1.3942496048 0.0028578683\n54  3.792875e-02 2.244953e+00 0.0024243801 0.1392090706\n55  2.642103e-01 3.168336e-02 0.7204998543 0.3530420497\n56  3.451041e-02 2.567277e-01 0.0700639109 1.8666078775\n57  1.273045e-01 4.358417e-01 0.1008101906 0.1926504448\n58  5.424787e-02 2.502829e+00 0.2822499116 0.0528409365\n59  1.966769e-01 7.574657e-04 1.6145429010 0.0287327414\n60  2.982306e-05 7.798382e-01 1.3192456417 0.0260695270\n61  2.773852e-03 5.137759e+00 0.0099454541 0.0060941094\n62  4.436317e-02 2.922062e-03 0.1910428140 0.0518180108\n63  7.217543e-02 2.271443e+00 2.6638426084 0.0673056647\n64  1.182730e-01 2.529427e-02 0.0214143325 0.8741371675\n65  2.541344e-04 1.405670e-01 0.1726157985 0.3827071863\n66  1.750530e-01 1.890135e-01 1.1516721583 0.3544379107\n67  2.802269e-02 2.810869e-02 1.0945830163 1.1803403641\n68  5.761099e-03 4.576183e-01 0.4144108156 1.3564242596\n69  3.428372e-01 1.919466e+00 1.0567008451 1.6423238792\n70  6.212765e-03 1.237589e+00 0.1357024803 0.0861111275\n71  1.243050e-01 1.147073e-01 1.7266865574 0.2232295394\n72  5.181878e-02 1.270244e-01 0.3188933264 0.4150890477\n73  3.479405e-01 6.353522e-01 0.6165644218 0.0031826975\n74  9.148759e-02 1.264573e-01 0.3870502233 2.4200590806\n75  1.127824e-01 2.932841e-03 0.9037173021 0.0607817506\n76  1.746000e-01 4.587544e-02 1.0145163207 0.3329687874\n77  3.606456e-01 4.353241e-03 2.4019517300 0.0506940521\n78  4.215101e-01 8.006110e-02 0.3090394818 0.1437291942\n79  1.009559e-01 3.722954e-02 0.0334912526 0.0427346507\n80  3.702260e-04 8.175402e-01 0.4639288067 0.1350885272\n81  3.907804e-03 1.780169e+00 0.1021873476 0.0028452212\n82  1.256419e-04 1.803499e+00 0.2650529064 0.0345656640\n83  1.332666e-02 4.406326e-01 0.1038681873 0.0180027756\n84  2.571921e-01 2.930298e-01 0.0503803228 1.0892158362\n85  1.145943e-02 6.040177e-02 2.0103870789 2.0898868722\n86  4.206739e-02 5.215066e-01 0.9224829186 0.3871185215\n87  2.512321e-01 1.987812e-01 0.7115935182 0.0445577925\n88  2.492254e-01 1.395036e+00 2.1520914635 0.6025948789\n89  1.106171e-03 3.514231e-02 0.3862100630 0.6968122496\n90  1.835633e-02 1.288873e+00 0.0363147197 0.0025525462\n91  1.779098e-02 9.149687e-01 0.0405564496 2.3575797345\n92  8.910690e-02 4.530537e-04 0.0019055434 0.7019533390\n93  2.587009e-02 7.125528e-01 0.1805992592 0.0013725506\n94  2.996446e-02 2.973877e+00 0.0508691404 0.0123266458\n95  1.902395e-02 5.340992e-01 0.0778253587 0.3712400221\n96  1.906636e-03 2.394565e-02 0.0755690340 1.7018858229\n97  1.184513e-02 1.080660e-01 0.1108524977 0.5659170445\n98  7.588915e-02 1.749455e-02 0.3352207251 0.0126944946\n99  4.577829e-02 1.738304e+00 0.1646828659 1.2866329226\n100 1.505583e-02 2.615693e-01 0.0383481419 0.1105984945\n101 7.772113e-01 5.525952e-01 4.5918630264 0.0780611911\n102 3.062511e-01 3.562384e-01 1.2768046142 0.0528423678\n103 1.110891e+00 2.303758e-01 0.1870402329 0.1127297915\n104 4.737675e-01 1.610328e-03 0.1216288811 1.7889763033\n105 7.969220e-01 6.349274e-02 0.7110254523 0.0085489018\n106 1.729841e+00 4.672746e-01 1.5403430102 0.3308036127\n107 3.076971e-02 1.778417e+00 4.4243620277 0.5703466149\n108 1.210949e+00 1.287011e-01 1.9293646099 1.8236086739\n109 9.198318e-01 3.691671e-01 0.7051506981 0.2408608329\n110 1.166489e+00 2.691581e+00 0.7179561915 0.3537303233\n111 4.250988e-01 3.500332e-01 0.3679738216 0.3744134556\n112 5.867354e-01 1.297048e-01 0.0024421775 0.1095053905\n113 8.107097e-01 1.282016e-01 0.0031512973 0.6899188576\n114 3.627186e-01 9.852693e-01 1.5294649148 0.3164293836\n115 4.920299e-01 1.426679e-01 4.5778848732 2.4455203507\n116 5.775450e-01 3.335462e-01 1.8515485275 1.1847035085\n117 4.945719e-01 4.765889e-02 0.0063647181 0.7764963716\n118 1.344772e+00 4.767541e+00 0.0742891607 2.4127754594\n119 2.503732e+00 2.305993e-04 2.2469741131 0.0657181183\n120 3.648238e-01 2.124641e+00 0.3251454215 0.1367308778\n121 9.484988e-01 6.046122e-01 0.2504404980 0.9078074368\n122 2.184791e-01 2.384417e-01 3.1153323436 0.0247929423\n123 1.917969e+00 1.247945e-01 3.3396376736 0.5218348285\n124 4.060326e-01 1.693175e-01 0.0001338592 0.6304197531\n125 6.607271e-01 7.498200e-01 0.4046273483 0.1222939878\n126 8.724563e-01 7.407599e-01 0.8012670205 1.5342187409\n127 3.154291e-01 7.301395e-02 0.0766974659 0.5062486742\n128 2.380997e-01 3.019893e-03 0.5180998585 0.0024104676\n129 7.305574e-01 2.560398e-02 0.3327760334 0.0311030487\n130 7.933721e-01 2.306056e-01 2.3264426950 1.3952497145\n131 1.355462e+00 4.903441e-02 2.4063215203 0.0103387092\n132 1.213568e+00 5.030886e+00 1.1062123344 1.4420133414\n133 7.925683e-01 2.325227e-02 0.5697464364 0.3218941362\n134 2.835535e-01 6.258264e-02 0.1529422488 1.1175234509\n135 3.302937e-01 4.800952e-01 0.1232601705 7.7108684318\n136 1.789303e+00 5.354394e-01 1.3389376862 2.8174844880\n137 5.675483e-01 8.328428e-01 4.0640433041 0.0408007109\n138 4.140263e-01 1.301544e-01 0.1486174026 1.4934973911\n139 1.953747e-01 2.163569e-04 0.7892603531 0.0008831330\n140 7.835243e-01 3.334311e-01 0.0007294718 1.2262123193\n141 9.272946e-01 2.748673e-01 0.8334374928 1.9720234958\n142 8.261745e-01 3.468260e-01 0.0768595769 7.1000621908\n143 3.062511e-01 3.562384e-01 1.2768046142 0.0528423678\n144 9.511464e-01 5.489182e-01 0.5194140063 0.0657138147\n145 9.120198e-01 8.028580e-01 1.8168223340 1.4744777917\n146 7.992200e-01 1.092179e-01 0.2983450789 4.8764047904\n147 5.591717e-01 5.864482e-01 0.0031591850 1.5603811591\n148 5.285732e-01 5.280510e-02 0.1474740612 0.4570559850\n149 4.304832e-01 7.458799e-01 3.9576870378 0.0219715715\n150 2.108071e-01 4.318091e-04 1.2676148947 0.8558903971\n\n$dist\n        1         2         3         4         5         6         7         8 \n2.3186628 2.2023867 2.3894014 2.3783885 2.4761421 2.5547337 2.4676790 2.2458571 \n        9        10        11        12        13        14        15        16 \n2.5915769 2.2488335 2.4196403 2.3356377 2.3464482 2.8090516 2.9250348 3.5124385 \n       17        18        19        20        21        22        23        24 \n2.6664997 2.2466007 2.3921787 2.6043116 2.0023492 2.3987528 2.8315714 1.8272690 \n       25        26        27        28        29        30        31        32 \n2.2507762 2.0727800 2.0683096 2.2413148 2.1809308 2.2938789 2.2005982 1.9144052 \n       33        34        35        36        37        38        39        40 \n3.1795671 3.2586152 2.1664754 2.2352302 2.2121517 2.5994670 2.5996342 2.1933821 \n       41        42        43        44        45        46        47        48 \n2.3314682 3.0069688 2.6169707 2.0516730 2.4405414 2.1939006 2.6398415 2.4298273 \n       49        50        51        52        53        54        55        56 \n2.4493914 2.2097109 1.5583693 0.9472613 1.4922684 1.8024525 1.1703258 0.7592671 \n       57        58        59        60        61        62        63        64 \n1.0876780 1.9320331 1.1037892 1.1664249 2.6568072 0.4918154 2.0046733 0.7644111 \n       65        66        67        68        69        70        71        72 \n0.4936869 1.1357908 0.6624551 0.8865720 2.1014703 1.3253442 1.0433051 0.6957752 \n       73        74        75        76        77        78        79        80 \n1.5906348 0.8569063 0.8358125 1.0300139 1.4543429 1.4239131 0.7083102 1.1085262 \n       81        82        83        84        85        86        87        88 \n1.5749235 1.5914305 0.8281864 1.2540390 0.8002967 1.0555896 1.2370934 1.8698072 \n       89        90        91        92        93        94        95        96 \n0.3996176 1.3621809 1.1893408 0.6426036 1.0630118 2.0542832 0.9188165 0.3327074 \n       97        98        99       100       101       102       103       104 \n0.4919403 0.6560470 1.6309294 0.6606152 2.2744943 1.4532105 2.2855490 1.4692189 \n      105       106       107       108       109       110       111       112 \n1.9319838 2.9262304 1.8880343 2.4411201 2.1669444 2.9943135 1.5599757 1.6584180 \n      113       114       115       116       117       118       119       120 \n1.9357126 1.8125288 1.8529243 1.8520409 1.5019926 3.5376423 3.3849227 2.1414739 \n      121       122       123       124       125       126       127       128 \n2.2504615 1.4035404 3.0526824 1.4245238 2.0033487 2.2492371 1.2302797 1.0773149 \n      129       130       131       132       133       134       135       136 \n1.8186594 2.0844277 2.5556088 3.5353345 1.9070832 1.1813216 1.5397735 2.9915750 \n      137       138       139       140       141       142       143       144 \n2.1265831 1.4387746 1.0145784 1.9812829 2.1635759 2.0808247 1.4532105 2.2434021 \n      145       146       147       148       149       150 \n2.3535312 1.9661441 1.8169038 1.5598153 1.9439885 1.1086448"
  },
  {
    "objectID": "slides/12_grouping.html#pca---summary",
    "href": "slides/12_grouping.html#pca---summary",
    "title": "12-Multivariate Analyses",
    "section": "PCA - Summary",
    "text": "PCA - Summary\n\nsummary(iris.pca)\n\n\nCall:\nPCA(X = iris[, -5], graph = FALSE) \n\n\nEigenvalues\n                       Dim.1   Dim.2   Dim.3   Dim.4\nVariance               2.918   0.914   0.147   0.021\n% of var.             72.962  22.851   3.669   0.518\nCumulative % of var.  72.962  95.813  99.482 100.000\n\nIndividuals (the 10 first)\n                 Dist    Dim.1    ctr   cos2    Dim.2    ctr   cos2    Dim.3\n1            |  2.319 | -2.265  1.172  0.954 |  0.480  0.168  0.043 | -0.128\n2            |  2.202 | -2.081  0.989  0.893 | -0.674  0.331  0.094 | -0.235\n3            |  2.389 | -2.364  1.277  0.979 | -0.342  0.085  0.020 |  0.044\n4            |  2.378 | -2.299  1.208  0.935 | -0.597  0.260  0.063 |  0.091\n5            |  2.476 | -2.390  1.305  0.932 |  0.647  0.305  0.068 |  0.016\n6            |  2.555 | -2.076  0.984  0.660 |  1.489  1.617  0.340 |  0.027\n7            |  2.468 | -2.444  1.364  0.981 |  0.048  0.002  0.000 |  0.335\n8            |  2.246 | -2.233  1.139  0.988 |  0.223  0.036  0.010 | -0.089\n9            |  2.592 | -2.335  1.245  0.812 | -1.115  0.907  0.185 |  0.145\n10           |  2.249 | -2.184  1.090  0.943 | -0.469  0.160  0.043 | -0.254\n                ctr   cos2  \n1             0.074  0.003 |\n2             0.250  0.011 |\n3             0.009  0.000 |\n4             0.038  0.001 |\n5             0.001  0.000 |\n6             0.003  0.000 |\n7             0.511  0.018 |\n8             0.036  0.002 |\n9             0.096  0.003 |\n10            0.293  0.013 |\n\nVariables\n                Dim.1    ctr   cos2    Dim.2    ctr   cos2    Dim.3    ctr\nSepal.Length |  0.890 27.151  0.792 |  0.361 14.244  0.130 | -0.276 51.778\nSepal.Width  | -0.460  7.255  0.212 |  0.883 85.247  0.779 |  0.094  5.972\nPetal.Length |  0.992 33.688  0.983 |  0.023  0.060  0.001 |  0.054  2.020\nPetal.Width  |  0.965 31.906  0.931 |  0.064  0.448  0.004 |  0.243 40.230\n               cos2  \nSepal.Length  0.076 |\nSepal.Width   0.009 |\nPetal.Length  0.003 |\nPetal.Width   0.059 |"
  },
  {
    "objectID": "slides/12_grouping.html#pca-visualization",
    "href": "slides/12_grouping.html#pca-visualization",
    "title": "12-Multivariate Analyses",
    "section": "PCA visualization",
    "text": "PCA visualization"
  },
  {
    "objectID": "slides/12_grouping.html#pca-visualization-1",
    "href": "slides/12_grouping.html#pca-visualization-1",
    "title": "12-Multivariate Analyses",
    "section": "PCA visualization",
    "text": "PCA visualization"
  },
  {
    "objectID": "slides/12_grouping.html#pca-visualization-2",
    "href": "slides/12_grouping.html#pca-visualization-2",
    "title": "12-Multivariate Analyses",
    "section": "PCA visualization",
    "text": "PCA visualization"
  },
  {
    "objectID": "slides/12_grouping.html#end-of-class-da",
    "href": "slides/12_grouping.html#end-of-class-da",
    "title": "12-Multivariate Analyses",
    "section": "End of Class DA",
    "text": "End of Class DA\n\n\n\n\nResearch Methods & Data Analysis"
  },
  {
    "objectID": "slides/07_mean_tests.html#you-should-know-today",
    "href": "slides/07_mean_tests.html#you-should-know-today",
    "title": "7-Mean Tests",
    "section": "You should know today:",
    "text": "You should know today:\n\nKnow when to use mean tests\nUnderstand means and variances\nParametric nd non-parametric versions\nT-tests, ANOVA, etc…\nPaired tests"
  },
  {
    "objectID": "slides/07_mean_tests.html#types-of-variables-review",
    "href": "slides/07_mean_tests.html#types-of-variables-review",
    "title": "7-Mean Tests",
    "section": "Types of variables (review)",
    "text": "Types of variables (review)\n\n\nCategorical\n\n\nNumerical"
  },
  {
    "objectID": "slides/07_mean_tests.html#back-to-the-toolbox",
    "href": "slides/07_mean_tests.html#back-to-the-toolbox",
    "title": "7-Mean Tests",
    "section": "Back to the toolbox",
    "text": "Back to the toolbox"
  },
  {
    "objectID": "slides/07_mean_tests.html#basics",
    "href": "slides/07_mean_tests.html#basics",
    "title": "7-Mean Tests",
    "section": "Basics",
    "text": "Basics"
  },
  {
    "objectID": "slides/07_mean_tests.html#one-sample",
    "href": "slides/07_mean_tests.html#one-sample",
    "title": "7-Mean Tests",
    "section": "One-Sample",
    "text": "One-Sample"
  },
  {
    "objectID": "slides/07_mean_tests.html#assumptions",
    "href": "slides/07_mean_tests.html#assumptions",
    "title": "7-Mean Tests",
    "section": "Assumptions",
    "text": "Assumptions\n\nContinuous\nNormally Distributed\nRandom Sample\nEnough Data"
  },
  {
    "objectID": "slides/07_mean_tests.html#lets-code-it",
    "href": "slides/07_mean_tests.html#lets-code-it",
    "title": "7-Mean Tests",
    "section": "Let’s code it",
    "text": "Let’s code it\n\nPenguinsCodeExampleGraph\n\n\n\n\n\n\n\n\n\n\n\nset.seed(586)\nx&lt;-rnorm(50)\nt.test(x, mu = 0, alternative = \"two.sided\")\n\n\n    One Sample t-test\n\ndata:  x\nt = -0.31154, df = 49, p-value = 0.7567\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.2633214  0.1926358\nsample estimates:\n  mean of x \n-0.03534281 \n\n\n\n\n\npenguins %&gt;% \n  filter(species==\"Adelie\") %&gt;% \n  select(bill_length_mm)-&gt;x\n\nt.test(x, mu = 43.92, alternative = \"two.sided\")\n\n\n    One Sample t-test\n\ndata:  x\nt = -23.662, df = 150, p-value &lt; 2.2e-16\nalternative hypothesis: true mean is not equal to 43.92\n95 percent confidence interval:\n 38.36312 39.21966\nsample estimates:\nmean of x \n 38.79139 \n\n\n\n\n\n\npenguins %&gt;% \nggdensity(x = \"bill_length_mm\",\n   add = \"mean\", rug = TRUE,\n   color = \"#00AFBB\", fill = \"#00AFBB\")+\n  geom_vline(xintercept = 38.79139)"
  },
  {
    "objectID": "slides/07_mean_tests.html#one-sided-differences",
    "href": "slides/07_mean_tests.html#one-sided-differences",
    "title": "7-Mean Tests",
    "section": "One-sided differences",
    "text": "One-sided differences\n\nContextCodePlott-testIs it normal?Non-parametirc test\n\n\nFind more statistics at Statista\n\n\n\n\n# Fetch the data from Our World in Data. RUN ONLY ONCE\nurl &lt;- \"https://covid.ourworldindata.org/data/owid-covid-data.csv\"\ndf &lt;- read_csv(url)\n\n# Prepare the data\ndf_latest &lt;- df %&gt;%\n  group_by(location) %&gt;%\n  slice_tail(n = 1) %&gt;%\n  mutate(deaths_per_million = total_deaths / population * 1000000)\ndf_latest %&gt;% \n  filter(location==\"Brazil\") %&gt;% \n  select(deaths_per_million)\n\n\n# A tibble: 1 × 2\n# Groups:   location [1]\n  location deaths_per_million\n  &lt;chr&gt;                 &lt;dbl&gt;\n1 Brazil                3261.\n\n\n\n\n\n\nggplot(df_latest, aes(x = deaths_per_million)) +\n  geom_histogram(fill = \"steelblue\") +\n  labs(title = \"COVID-19 Deaths per Million\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))+\n  geom_vline(xintercept=3261)\n\n\n\n\n\n\n\n\n\n\n\n\n\nt.test(df_latest$deaths_per_million, \n       mu = 3261, \n       alternative = \"less\")\n\n\n\n    One Sample t-test\n\ndata:  df_latest$deaths_per_million\nt = -23.694, df = 233, p-value &lt; 2.2e-16\nalternative hypothesis: true mean is less than 3261\n95 percent confidence interval:\n     -Inf 1385.595\nsample estimates:\nmean of x \n 1245.092 \n\n\n\n\n\n\nshapiro.test(df_latest$deaths_per_million) ## Non-normal!!\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  df_latest$deaths_per_million\nW = 0.8578, p-value = 6.709e-14\n\n\n\n\n\n\nwilcox.test(df_latest$deaths_per_million,\n            mu = 3261,\n            alternative = \"less\")\n\n\n\n    Wilcoxon signed rank test with continuity correction\n\ndata:  df_latest$deaths_per_million\nV = 910, p-value &lt; 2.2e-16\nalternative hypothesis: true location is less than 3261"
  },
  {
    "objectID": "slides/07_mean_tests.html#two-independent-groups",
    "href": "slides/07_mean_tests.html#two-independent-groups",
    "title": "7-Mean Tests",
    "section": "Two independent groups",
    "text": "Two independent groups\n\nDataPlotCheck assumptions\n\n\n\n\n# Data in two numeric vectors\nwomen_weight &lt;- c(38.9, 61.2, 73.3, 21.8, 63.4, 64.6, 48.4, 48.8, 48.5)\nmen_weight &lt;- c(67.8, 60, 63.4, 76, 89.4, 73.3, 67.3, 61.3, 62.4) \n# Create a data frame\nmy_data &lt;- data.frame( \n                group = rep(c(\"Woman\", \"Man\"), each = 9),\n                weight = c(women_weight,  men_weight)\n                )\nmy_data\n\n\n   group weight\n1  Woman   38.9\n2  Woman   61.2\n3  Woman   73.3\n4  Woman   21.8\n5  Woman   63.4\n6  Woman   64.6\n7  Woman   48.4\n8  Woman   48.8\n9  Woman   48.5\n10   Man   67.8\n11   Man   60.0\n12   Man   63.4\n13   Man   76.0\n14   Man   89.4\n15   Man   73.3\n16   Man   67.3\n17   Man   61.3\n18   Man   62.4\n\n\n\n\n\n\nlibrary(\"ggpubr\")\nggboxplot(my_data, x = \"group\", y = \"weight\", \n          color = \"group\", palette = c(\"#00AFBB\", \"#E7B800\"),\n        ylab = \"Weight\", xlab = \"Groups\")\n\n\n\n\n\n\n\n\n\n\n\n\nAre the two samples independents?\nAre the data from each of the 2 groups follow a normal distribution?\nDo the two populations have the same variances?"
  },
  {
    "objectID": "slides/07_mean_tests.html#testing-normal-distribution",
    "href": "slides/07_mean_tests.html#testing-normal-distribution",
    "title": "7-Mean Tests",
    "section": "Testing normal distribution",
    "text": "Testing normal distribution\n\n# Shapiro-Wilk normality test for Men's weights\nwith(my_data, shapiro.test(weight[group == \"Man\"]))# p = 0.1\n\n\n    Shapiro-Wilk normality test\n\ndata:  weight[group == \"Man\"]\nW = 0.86425, p-value = 0.1066\n\n# Shapiro-Wilk normality test for Women's weights\nwith(my_data, shapiro.test(weight[group == \"Woman\"])) # p = 0.6\n\n\n    Shapiro-Wilk normality test\n\ndata:  weight[group == \"Woman\"]\nW = 0.94266, p-value = 0.6101"
  },
  {
    "objectID": "slides/07_mean_tests.html#testing-equal-variances",
    "href": "slides/07_mean_tests.html#testing-equal-variances",
    "title": "7-Mean Tests",
    "section": "Testing equal variances",
    "text": "Testing equal variances\n\nvar.test(weight ~ group, data = my_data)\n\n\n    F test to compare two variances\n\ndata:  weight by group\nF = 0.36134, num df = 8, denom df = 8, p-value = 0.1714\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 0.08150656 1.60191315\nsample estimates:\nratio of variances \n         0.3613398"
  },
  {
    "objectID": "slides/07_mean_tests.html#unpaired-two-samples-t-test",
    "href": "slides/07_mean_tests.html#unpaired-two-samples-t-test",
    "title": "7-Mean Tests",
    "section": "Unpaired two-samples t-test",
    "text": "Unpaired two-samples t-test\n\nt.test(women_weight, men_weight, var.equal = TRUE) # method 1\n\n\n    Two Sample t-test\n\ndata:  women_weight and men_weight\nt = -2.7842, df = 16, p-value = 0.01327\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -29.748019  -4.029759\nsample estimates:\nmean of x mean of y \n 52.10000  68.98889 \n\nt.test(weight ~ group, data = my_data, var.equal = TRUE) # Method 2\n\n\n    Two Sample t-test\n\ndata:  weight by group\nt = 2.7842, df = 16, p-value = 0.01327\nalternative hypothesis: true difference in means between group Man and group Woman is not equal to 0\n95 percent confidence interval:\n  4.029759 29.748019\nsample estimates:\n  mean in group Man mean in group Woman \n           68.98889            52.10000"
  },
  {
    "objectID": "slides/07_mean_tests.html#non-parametric-test",
    "href": "slides/07_mean_tests.html#non-parametric-test",
    "title": "7-Mean Tests",
    "section": "Non-parametric test",
    "text": "Non-parametric test\n\nWilcoxonDataCalculaionCode\n\n\n\nsource:https://datatab.net/tutorial/wilcoxon-test\n\n\n\nmy_data %&gt;% \n  mutate(subject = rep(1:9,2)) %&gt;%\n  pivot_wider(names_from = group, \n              values_from = weight) %&gt;% \n  mutate(diff=Woman-Man) %&gt;% \n  arrange(diff) %&gt;% \n  mutate(signal=ifelse(diff&gt;0, \"pos\", \"neg\")) %&gt;% \n  mutate(rank=9:1)\n\n# A tibble: 9 × 6\n  subject Woman   Man   diff signal  rank\n    &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;  &lt;int&gt;\n1       4  21.8  76   -54.2  neg        9\n2       1  38.9  67.8 -28.9  neg        8\n3       5  63.4  89.4 -26    neg        7\n4       7  48.4  67.3 -18.9  neg        6\n5       9  48.5  62.4 -13.9  neg        5\n6       8  48.8  61.3 -12.5  neg        4\n7       6  64.6  73.3  -8.7  neg        3\n8       2  61.2  60     1.20 pos        2\n9       3  73.3  63.4   9.9  pos        1\n\n\n\n\n\n\n\n\nwilcox.test(weight ~ group, data = my_data,\n                   exact = FALSE)\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  weight by group\nW = 66, p-value = 0.02712\nalternative hypothesis: true location shift is not equal to 0"
  },
  {
    "objectID": "slides/07_mean_tests.html#more-than-two-independent-groups",
    "href": "slides/07_mean_tests.html#more-than-two-independent-groups",
    "title": "7-Mean Tests",
    "section": "More than two independent groups",
    "text": "More than two independent groups\n\nContextANOVASum of SquaresVisualising\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nanova(lm(bill_length_mm~species, data=penguins))\n\nAnalysis of Variance Table\n\nResponse: bill_length_mm\n           Df Sum Sq Mean Sq F value    Pr(&gt;F)    \nspecies     2 7194.3  3597.2   410.6 &lt; 2.2e-16 ***\nResiduals 339 2969.9     8.8                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\\[SS=\\sum_{i=0}^{n} (X_i - \\bar{X})^2\\]\nSee this video to understand the logic of an ANOVA"
  },
  {
    "objectID": "slides/07_mean_tests.html#anova-table",
    "href": "slides/07_mean_tests.html#anova-table",
    "title": "7-Mean Tests",
    "section": "Anova Table",
    "text": "Anova Table\n\n\n\n\n\n\n\n\n\n\n\n\n\nSource of Variation\nSum of Squares (SS)\nDegrees of Freedom (df)\nMean Square (MS)\nF-value\np-value\n\n\n\n\nBetween Groups\n100\n2\n50.00\n4.5\n0.05\n\n\nWithin Groups (Error)\n200\n15\n13.33\nNA\nNA\n\n\nTotal\n300\n17\nNA\nNA\nNA"
  },
  {
    "objectID": "slides/07_mean_tests.html#kruskal-wallis-non-parametric",
    "href": "slides/07_mean_tests.html#kruskal-wallis-non-parametric",
    "title": "7-Mean Tests",
    "section": "Kruskal-Wallis (non-parametric)",
    "text": "Kruskal-Wallis (non-parametric)\n\nkruskal.test(bill_length_mm~species, data=penguins)\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  bill_length_mm by species\nKruskal-Wallis chi-squared = 244.14, df = 2, p-value &lt; 2.2e-16"
  },
  {
    "objectID": "slides/07_mean_tests.html#paired-designs",
    "href": "slides/07_mean_tests.html#paired-designs",
    "title": "7-Mean Tests",
    "section": "Paired designs",
    "text": "Paired designs"
  },
  {
    "objectID": "slides/07_mean_tests.html#paired-graphs",
    "href": "slides/07_mean_tests.html#paired-graphs",
    "title": "7-Mean Tests",
    "section": "Paired graphs",
    "text": "Paired graphs\n\nPairs in spacePairs in time\n\n\n\n\n# Weight of the mice before treatment\nblockA &lt;-c(200.1, 190.9, 192.7, 213, 241.4, 196.9, 172.2, 185.5, 205.2, 193.7)\n# Weight of the mice after treatment\nblockB &lt;-c(392.9, 393.2, 345.1, 393, 434, 427.9, 422, 383.9, 392.3, 352.2)\n# Create a data frame\nmy_data2 &lt;- data.frame( \n                group = rep(c(\"blockA\", \"blockB\"), each = 10),\n                weight = c(blockA,  blockB)\n                )\n\nmy_data2 %&gt;% \n  mutate(subject=rep(1:10,2)) %&gt;% \n  ggplot(aes(group,weight))+\n  geom_boxplot(aes(fill=group), alpha=0.5)+\n  geom_line(aes(group=subject))+\n  geom_point(size=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsource: Santos et al 2015"
  },
  {
    "objectID": "slides/07_mean_tests.html#more-than-two-independent-samples",
    "href": "slides/07_mean_tests.html#more-than-two-independent-samples",
    "title": "7-Mean Tests",
    "section": "More than two independent samples",
    "text": "More than two independent samples\n\n2-way ANOVA graph2-way ANOVA Code2-way ANOVA with interaction\n\n\n\n\nToothGrowth$dose&lt;-as.factor(ToothGrowth$dose)\nToothGrowth %&gt;% \n  ggboxplot(x = \"dose\", y = \"len\", color = \"supp\",\n          palette = c(\"#00AFBB\", \"#E7B800\"))\n\n\n\n\n\n\n\n\n\n\n\n\nanova(lm(len~dose+supp, data = ToothGrowth))\n\nAnalysis of Variance Table\n\nResponse: len\n          Df  Sum Sq Mean Sq F value    Pr(&gt;F)    \ndose       2 2426.43 1213.22  82.811 &lt; 2.2e-16 ***\nsupp       1  205.35  205.35  14.017 0.0004293 ***\nResiduals 56  820.43   14.65                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n# These two calls are equivalent\nres.aov3 &lt;- aov(len ~ supp * dose, data = ToothGrowth)\nres.aov3 &lt;- aov(len ~ supp + dose + supp:dose, data = ToothGrowth)\nsummary(res.aov3)\n\n            Df Sum Sq Mean Sq F value   Pr(&gt;F)    \nsupp         1  205.4   205.4  15.572 0.000231 ***\ndose         2 2426.4  1213.2  92.000  &lt; 2e-16 ***\nsupp:dose    2  108.3    54.2   4.107 0.021860 *  \nResiduals   54  712.1    13.2                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "slides/07_mean_tests.html#post-hoc-comparisons",
    "href": "slides/07_mean_tests.html#post-hoc-comparisons",
    "title": "7-Mean Tests",
    "section": "Post-hoc comparisons",
    "text": "Post-hoc comparisons\n\nTukeyHSD(res.aov3, which = \"dose\")\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = len ~ supp + dose + supp:dose, data = ToothGrowth)\n\n$dose\n        diff       lwr       upr   p adj\n1-0.5  9.130  6.362488 11.897512 0.0e+00\n2-0.5 15.495 12.727488 18.262512 0.0e+00\n2-1    6.365  3.597488  9.132512 2.7e-06"
  },
  {
    "objectID": "slides/07_mean_tests.html#end-of-da-class",
    "href": "slides/07_mean_tests.html#end-of-da-class",
    "title": "7-Mean Tests",
    "section": "End of DA class",
    "text": "End of DA class\n\n\n\n\nResearch Methods & Data Analysis"
  },
  {
    "objectID": "slides/3.2_scientific_hypotheses.html#you-should-know-today",
    "href": "slides/3.2_scientific_hypotheses.html#you-should-know-today",
    "title": "3.2-Scientific Hypotheses",
    "section": "You should know today",
    "text": "You should know today\n\nHow to elaborate a sound scientific hypothesis\nHow to differentiate scientific and statistical hypotheses\nConnecting hypotheses and questions\nHow to write hypotheses in scientific texts"
  },
  {
    "objectID": "slides/3.2_scientific_hypotheses.html#why-we-need-a-hypothesis",
    "href": "slides/3.2_scientific_hypotheses.html#why-we-need-a-hypothesis",
    "title": "3.2-Scientific Hypotheses",
    "section": "Why we need a hypothesis?",
    "text": "Why we need a hypothesis?\n\n\n\n\n\nsource: Mad About Science\n\n\n\n\nCandidate explanation to a phenomenon\nContain previsions and expectations\nFeedback theory\nAdvance Science"
  },
  {
    "objectID": "slides/3.2_scientific_hypotheses.html#the-mechanics-of-science",
    "href": "slides/3.2_scientific_hypotheses.html#the-mechanics-of-science",
    "title": "3.2-Scientific Hypotheses",
    "section": "The mechanics of Science",
    "text": "The mechanics of Science\n\nBy Efbrazil - Own work, CC BY-SA 4.0,"
  },
  {
    "objectID": "slides/3.2_scientific_hypotheses.html#it-is-a-statement",
    "href": "slides/3.2_scientific_hypotheses.html#it-is-a-statement",
    "title": "3.2-Scientific Hypotheses",
    "section": "It is a statement",
    "text": "It is a statement\n\nIt is affirmative\nIt is not a questions\nMust lead to expectations if confirmed\nSelf-explanatory"
  },
  {
    "objectID": "slides/3.2_scientific_hypotheses.html#section",
    "href": "slides/3.2_scientific_hypotheses.html#section",
    "title": "3.2-Scientific Hypotheses",
    "section": "",
    "text": "What is the cause of aurora borealis?"
  },
  {
    "objectID": "slides/3.2_scientific_hypotheses.html#section-1",
    "href": "slides/3.2_scientific_hypotheses.html#section-1",
    "title": "3.2-Scientific Hypotheses",
    "section": "",
    "text": "This is the manifestation of joy of the Gods that throw some bright blanket in the night sky"
  },
  {
    "objectID": "slides/3.2_scientific_hypotheses.html#section-2",
    "href": "slides/3.2_scientific_hypotheses.html#section-2",
    "title": "3.2-Scientific Hypotheses",
    "section": "",
    "text": "Auroras result from emissions of photons in Earth’s upper  atmosphere, above 80 km (50 mi), from ionized nitrogen  atoms regaining an electron, and oxygen atoms and nitrogen based molecules returning from an excited state to ground state"
  },
  {
    "objectID": "slides/3.2_scientific_hypotheses.html#types-of-hypotheses",
    "href": "slides/3.2_scientific_hypotheses.html#types-of-hypotheses",
    "title": "3.2-Scientific Hypotheses",
    "section": "Types of hypotheses",
    "text": "Types of hypotheses\n\n\nScientific Hypotheses\n\nCandidate statements to explain an observed phenomenon\nMeant to generate logical predictions\nWorking guidelines\n\n\nStatistical Hypotheses\n\nLogical predictions\nConfirmed by stats\nCan be drawn in a graph"
  },
  {
    "objectID": "slides/3.2_scientific_hypotheses.html#statistical-hypotheses",
    "href": "slides/3.2_scientific_hypotheses.html#statistical-hypotheses",
    "title": "3.2-Scientific Hypotheses",
    "section": "Statistical hypotheses",
    "text": "Statistical hypotheses"
  },
  {
    "objectID": "slides/3.2_scientific_hypotheses.html#lets-train-a-bit",
    "href": "slides/3.2_scientific_hypotheses.html#lets-train-a-bit",
    "title": "3.2-Scientific Hypotheses",
    "section": "Let’s train a bit",
    "text": "Let’s train a bit\nGiven the question: What caused the increase in body mass during the evolution of horses?\nCreate both a scientific and a statistical hypotheses about the size of horses\n\n\n\n\n−+\n03:00"
  },
  {
    "objectID": "slides/3.2_scientific_hypotheses.html#a-good-working-hypothesis-is-everything",
    "href": "slides/3.2_scientific_hypotheses.html#a-good-working-hypothesis-is-everything",
    "title": "3.2-Scientific Hypotheses",
    "section": "A good working hypothesis is everything",
    "text": "A good working hypothesis is everything\n\nA wrong hypotheses will misguide you\nA good hypothesis will keep you excited and up to date.\nNeeds training"
  },
  {
    "objectID": "slides/3.2_scientific_hypotheses.html#how-to-write-hypotheses",
    "href": "slides/3.2_scientific_hypotheses.html#how-to-write-hypotheses",
    "title": "3.2-Scientific Hypotheses",
    "section": "How to write hypotheses?",
    "text": "How to write hypotheses?\n\nYou should tell a story\nDon’t use a subheading\nNever reefer to statistical hypotheses"
  },
  {
    "objectID": "slides/3.2_scientific_hypotheses.html#the-ifthen-method",
    "href": "slides/3.2_scientific_hypotheses.html#the-ifthen-method",
    "title": "3.2-Scientific Hypotheses",
    "section": "The “If/then” method",
    "text": "The “If/then” method\n\nIf drug X have an effect on reducing headache, then\nWhen many exotic species are introduced in the ecosystem, then the likelihood of severe ecological disruption increases"
  },
  {
    "objectID": "slides/3.2_scientific_hypotheses.html#the-statement-method",
    "href": "slides/3.2_scientific_hypotheses.html#the-statement-method",
    "title": "3.2-Scientific Hypotheses",
    "section": "The statement method",
    "text": "The statement method\n\nDrug X reduce the headaches because it blocks the neuroreceptors of pain\nExotic species in high quantities disrupts ecological mutualistic networks"
  },
  {
    "objectID": "slides/3.2_scientific_hypotheses.html#how-good-is-my-hypothesis",
    "href": "slides/3.2_scientific_hypotheses.html#how-good-is-my-hypothesis",
    "title": "3.2-Scientific Hypotheses",
    "section": "How good is my hypothesis?",
    "text": "How good is my hypothesis?\n\n\nTestable? 😃\nObjective? 😃\nRelevant? 😃"
  },
  {
    "objectID": "slides/3.2_scientific_hypotheses.html#end-of-session-on-rm",
    "href": "slides/3.2_scientific_hypotheses.html#end-of-session-on-rm",
    "title": "3.2-Scientific Hypotheses",
    "section": "End of session on RM",
    "text": "End of session on RM\n\n\n\n\nResearch Methods & Data Analysis"
  },
  {
    "objectID": "example_presentation.html#a-basic-example",
    "href": "example_presentation.html#a-basic-example",
    "title": "Quiz example",
    "section": "A basic example",
    "text": "A basic example\n\nBill Gates was the founder of:\n\n\n\n\n ✗Apple\n\n\n ✓Microsoft\n\n\n ✗Facebook\n\n\n ✗Google"
  },
  {
    "objectID": "example_presentation.html#a-quiz-with-a-clear-answer-button",
    "href": "example_presentation.html#a-quiz-with-a-clear-answer-button",
    "title": "Quiz example",
    "section": "A quiz with a clear answer button",
    "text": "A quiz with a clear answer button\n\nBill Gates was the founder of:\n\n\n\n\n ✗Apple\n\n\n ✓Microsoft\n\n\n ✗Facebook\n\n\n ✗Google\n\n\nClear answer"
  },
  {
    "objectID": "example_presentation.html#a-quiz-with-additional-buttons",
    "href": "example_presentation.html#a-quiz-with-additional-buttons",
    "title": "Quiz example",
    "section": "A quiz with additional buttons",
    "text": "A quiz with additional buttons\n\nBill Gates was the founder of:\n\n\n\n\n ✗Apple\n\n\n ✓Microsoft\n\n\n ✗Facebook\n\n\n ✗Google\n\n\nClear answer\n\n\n\n\n\n\n\n\n\n\nShow hint\n\nThe company name starts with an ‘M’…\n\n\n\n\n\n\nShow Answer\n\nBill Gates and Paul Allen founded Microsoft on April 4, 1975."
  },
  {
    "objectID": "get-started/4-functions.html",
    "href": "get-started/4-functions.html",
    "title": "Functions in R",
    "section": "",
    "text": "Approximate time: 30 min"
  },
  {
    "objectID": "get-started/4-functions.html#learning-objectives",
    "href": "get-started/4-functions.html#learning-objectives",
    "title": "Functions in R",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nDescribe and utilize functions in R.\nModify default behavior of a function using arguments.\nIdentify R-specific sources of obtaining more information about functions.\nDemonstrate how to create user-defined functions in R"
  },
  {
    "objectID": "get-started/4-functions.html#functions-and-their-arguments",
    "href": "get-started/4-functions.html#functions-and-their-arguments",
    "title": "Functions in R",
    "section": "Functions and their arguments",
    "text": "Functions and their arguments\n\nWhat are functions?\nA key feature of R is functions. Functions are “self contained” modules of code that accomplish a specific task. Functions usually take in some sort of data structure (value, vector, dataframe etc.), process it, and return a result.\nThe general usage for a function is the name of the function followed by parentheses:\nfunction_name(input)\nThe input(s) are called arguments, which can include:\n\nthe physical object (any data structure) on which the function carries out a task\nspecifications that alter the way the function operates (e.g. options)\n\nNot all functions take arguments, for example:\ngetwd()\nHowever, most functions can take several arguments. If you don’t specify a required argument when calling the function, you will either receive an error or the function will fall back on using a default.\nThe defaults represent standard values that the author of the function specified as being “good enough in standard cases”. An example would be what symbol to use in a plot. However, if you want something specific, simply change the argument yourself with a value of your choice.\n\n\nBasic functions\nWe have already used a few examples of basic functions in the previous lessons i.e getwd(), c(), and factor(). These functions are available as part of R’s built in capabilities, and we will explore a few more of these base functions below.\nLet’s revisit a function that we have used previously to combine data c() into vectors. The arguments it takes is a collection of numbers, characters or strings (separated by a comma). The c() function performs the task of combining the numbers or characters into a single vector. You can also use the function to add elements to an existing vector:\nglengths &lt;- c(glengths, 90) # adding at the end \nglengths &lt;- c(30, glengths) # adding at the beginning\nWhat happens here is that we take the original vector glengths (containing three elements), and we are adding another item to either end. We can do this over and over again to build a vector or a dataset.\nSince R is used for statistical computing, many of the base functions involve mathematical operations. One example would be the function sqrt(). The input/argument must be a number, and the output is the square root of that number. Let’s try finding the square root of 81:\nsqrt(81)\nNow what would happen if we called the function (e.g. ran the function), on a vector of values instead of a single value?\nsqrt(glengths)\nIn this case the task was performed on each individual value of the vector glengths and the respective results were displayed.\nLet’s try another function, this time using one that we can change some of the options (arguments that change the behavior of the function), for example round:\nround(3.14159)\nWe can see that we get 3. That’s because the default is to round to the nearest whole number. What if we want a different number of significant digits? Let’s first learn how to find available arguments for a function.\n\n\nSeeking help on arguments for functions\nThe best way of finding out this information is to use the ? followed by the name of the function. Doing this will open up the help manual in the bottom right panel of RStudio that will provide a description of the function, usage, arguments, details, and examples:\n?round\nAlternatively, if you are familiar with the function but just need to remind yourself of the names of the arguments, you can use:\nargs(round)\nEven more useful is the example() function. This will allow you to run the examples section from the Online Help to see exactly how it works when executing the commands. Let’s try that for round():\nexample(\"round\")\nIn our example, we can change the number of digits returned by adding an argument. We can type digits=2 or however many we may want:\nround(3.14159, digits=2)\n\nNOTE: If you provide the arguments in the exact same order as they are defined (in the help manual) you don’t have to name them:\nround(3.14159, 2)\nHowever, it’s usually not recommended practice because it involves a lot of memorization. In addition, it makes your code difficult to read for your future self and others, especially if your code includes functions that are not commonly used. (It’s however OK to not include the names of the arguments for basic functions like mean, min, etc…). Another advantage of naming arguments, is that the order doesn’t matter. This is useful when a function has many arguments.\n\n\nExercise\n\nLet’s use base R function to calculate mean value of the glengths vector. You might need to search online to find what function can perform this task.\nCreate a new vector test &lt;- c(1, NA, 2, 3, NA, 4). Use the same base R function from exercise 1 (with addition of proper argument), and calculate mean value of the test vector. The output should be 2.5. &gt; NOTE: In R, missing values are represented by the symbol NA (not available). It’s a way to make sure that users know they have missing data, and make a conscious decision on how to deal with it. There are ways to ignore NA during statistical calculation, or to remove NA from the vector. If you want more information related to missing data or NA you can go to this page (please note that there are many advanced concepts on that page that have not been covered in class).\nAnother commonly used base function is sort(). Use this function to sort the glengths vector in descending order.\n\n\n\n\nUser-defined Functions\nOne of the great strengths of R is the user’s ability to add functions. Sometimes there is a small task (or series of tasks) you need done and you find yourself having to repeat it multiple times. In these types of situations, it can be helpful to create your own custom function. The structure of a function is given below:\nname_of_function &lt;- function(argument1, argument2) {\n    statements or code that does something\n    return(something)\n}\n\nFirst you give your function a name.\nThen you assign value to it, where the value is the function.\n\nWhen defining the function you will want to provide the list of arguments required (inputs and/or options to modify behaviour of the function), and wrapped between curly brackets place the tasks that are being executed on/using those arguments. The argument(s) can be any type of object (like a scalar, a matrix, a dataframe, a vector, a logical, etc), and it’s not necessary to define what it is in any way.\nFinally, you can “return” the value of the object from the function, meaning pass the value of it into the global environment. The important idea behind functions is that objects that are created within the function are local to the environment of the function – they don’t exist outside of the function.\nLet’s try creating a simple example function. This function will take in a numeric value as input, and return the squared value.\nsquare_it &lt;- function(x) {\n    square &lt;- x * x\n    return(square)\n}\nOnce you run the code, you should see a function named square_it in the Environment panel (located at the top right of Rstudio interface). Now, we can use this function as any other base R functions. We type out the name of the function, and inside the parentheses we provide a numeric value x:\nsquare_it(5)\nPretty simple, right? In this case, we only had one line of code that was run, but in theory you could have many lines of code to get obtain the final results that you want to “return” to the user.\n\nDo I always have to return() something at the end of the function?\nIn the example above, we created a new variable called square inside the function, and then return the value of square. If you don’t use return(), by default R will return the value of the last line of code inside that function. That is to say, the following function will also work.\nsquare_it &lt;- function(x) {\n   x * x\n}\nHowever, we recommend always using return at the end of a function as the best practice.\n\nWe have only scratched the surface here when it comes to creating functions! We will revisit this in later lessons, but if interested you can also find more detailed information on this R-bloggers site, which is where we adapted this example from.\n\nExercise\n\nWrite a function called multiply_it, which takes two inputs: a numeric value x, and a numeric value y. The function will return the product of these two numeric values, which is x * y. For example, multiply_it(x=4, y=6) will return output 24.\n\n\nThis lesson has been developed by members of the teaching team at the Harvard Chan Bioinformatics Core (HBC). These are open access materials distributed under the terms of the Creative Commons Attribution license (CC BY 4.0), which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.\n\nThe materials used in this lesson are adapted from work that is Copyright © Data Carpentry (http://datacarpentry.org/). All Data Carpentry instructional material is made available under the Creative Commons Attribution license (CC BY 4.0)."
  },
  {
    "objectID": "get-started/3-syntax.html",
    "href": "get-started/3-syntax.html",
    "title": "R Syntax and Data Structures",
    "section": "",
    "text": "Approximate time: 70 min"
  },
  {
    "objectID": "get-started/3-syntax.html#learning-objectives",
    "href": "get-started/3-syntax.html#learning-objectives",
    "title": "R Syntax and Data Structures",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nDescribe frequently-used data types in R.\nConstruct data structures to store data."
  },
  {
    "objectID": "get-started/3-syntax.html#data-types",
    "href": "get-started/3-syntax.html#data-types",
    "title": "R Syntax and Data Structures",
    "section": "Data Types",
    "text": "Data Types\nVariables can contain values of specific types within R. The six data types that R uses include:\n\n\"numeric\" for any numerical value, including whole numbers and decimals. This is the most common data type for performing mathematical operations.\n\"character\" for text values, denoted by using quotes (““) around value. For instance, while 5 is a numeric value, if you were to put quotation marks around it, it would turn into a character value, and you could no longer use it for mathematical operations. Single or double quotes both work, as long as the same type is used at the beginning and end of the character value.\n\"integer\" for whole numbers (e.g., 2L, the L indicates to R that it’s an integer). It behaves similar to the numeric data type for most tasks or functions; however, it takes up less storage space than numeric data, so often tools will output integers if the data is known to be comprised of whole numbers. Just know that integers behave similarly to numeric values. If you wanted to create your own, you could do so by providing the whole number, followed by an upper-case L.\n\"logical\" for TRUE and FALSE (the Boolean data type). The logical data type can be specified using four values, TRUE in all capital letters, FALSE in all capital letters, a single capital T or a single capital F.\n\"complex\" to represent complex numbers with real and imaginary parts (e.g., 1+4i) and that’s all we’re going to say about them\n\"raw\" that we won’t discuss further\n\nThe table below provides examples of each of the commonly used data types:\n\n\n\nData Type\nExamples\n\n\n\n\nNumeric:\n1, 1.5, 20, pi\n\n\nCharacter:\n“anytext”, “5”, “TRUE”\n\n\nInteger:\n2L, 500L, -17L\n\n\nLogical:\nTRUE, FALSE, T, F\n\n\n\nThe type of data will determine what you can do with it. For example, if you want to perform mathematical operations, then your data type cannot be character or logical. Whereas if you want to search for a word or pattern in your data, then you data should be of the character data type. The task or function being performed on the data will determine what type of data can be used."
  },
  {
    "objectID": "get-started/3-syntax.html#data-structures",
    "href": "get-started/3-syntax.html#data-structures",
    "title": "R Syntax and Data Structures",
    "section": "Data Structures",
    "text": "Data Structures\nWe know that variables are like buckets, and so far we have seen that bucket filled with a single value. Even when number was created, the result of the mathematical operation was a single value. Variables can store more than just a single value, they can store a multitude of different data structures. These include, but are not limited to, vectors (c), factors (factor), matrices (matrix), data frames (data.frame) and lists (list).\n\nVectors\nA vector is the most common and basic data structure in R, and is pretty much the workhorse of R. It’s basically just a collection of values, mainly either numbers,\n\n\n\nnumeric vector\n\n\nor characters,\n\n\n\ncharacter vector\n\n\nor logical values,\n\n\n\nlogical vector\n\n\nNote that all values in a vector must be of the same data type. If you try to create a vector with more than a single data type, R will try to coerce it into a single data type.\nFor example, if you were to try to create the following vector:\n\n\n\nmixed vector\n\n\nR will coerce it into:\n\nThe analogy for a vector is that your bucket now has different compartments; these compartments in a vector are called elements.\nEach element contains a single value, and there is no limit to how many elements you can have. A vector is assigned to a single variable, because regardless of how many elements it contains, in the end it is still a single entity (bucket).\nLet’s create a vector of genome lengths and assign it to a variable called glengths.\nEach element of this vector contains a single numeric value, and three values will be combined together into a vector using c() (the combine function). All of the values are put within the parentheses and separated with a comma.\n# Create a numeric vector and store the vector as a variable called 'glengths'\nglengths &lt;- c(4.6, 3000, 50000)\nglengths\nNote your environment shows the glengths variable is numeric (num) and tells you the glengths vector starts at element 1 and ends at element 3 (i.e. your vector contains 3 values) as denoted by the [1:3].\nA vector can also contain characters. Create another vector called species with three elements, where each element corresponds with the genome sizes vector (in Mb).\n# Create a character vector and store the vector as a variable called 'species'\nspecies &lt;- c(\"ecoli\", \"human\", \"corn\")\nspecies\nWhat do you think would happen if we forgot to put quotations around one of the values? Let’s test it out with corn.\n# Forget to put quotes around corn\nspecies &lt;- c(\"ecoli\", \"human\", corn)\nNote that RStudio is quite helpful in color-coding the various data types. We can see that our numeric values are blue, the character values are green, and if we forget to surround corn with quotes, it’s black. What does this mean? Let’s try to run this code.\nWhen we try to run this code we get an error specifying that object ‘corn’ is not found. What this means is that R is looking for an object or variable in my Environment called ‘corn’, and when it doesn’t find it, it returns an error. If we had a character vector called ‘corn’ in our Environment, then it would combine the contents of the ‘corn’ vector with the values “ecoli” and “human”.\nSince we only want to add the value “corn” to our vector, we need to re-run the code with the quotation marks surrounding corn. A quick way to add quotes to both ends of a word in RStudio is to highlight the word, then press the quote key.\n# Create a character vector and store the vector as a variable called 'species'\nspecies &lt;- c(\"ecoli\", \"human\", \"corn\")\n\nExercise\nTry to create a vector of numeric and character values by combining the two vectors that we just created (glengths and species). Assign this combined vector to a new variable called combined. Hint: you will need to use the combine c() function to do this. Print the combined vector in the console, what looks different compared to the original vectors?\n\n\n\nFactors\nA factor is a special type of vector that is used to store categorical data. Each unique category is referred to as a factor level (i.e. category = level). Factors are built on top of integer vectors such that each factor level is assigned an integer value, creating value-label pairs.\nFor instance, if we have four animals and the first animal is female, the second and third are male, and the fourth is female, we could create a factor that appears like a vector, but has integer values stored under-the-hood. The integer value assigned is a one for females and a two for males. The numbers are assigned in alphabetical order, so because the f- in females comes before the m- in males in the alphabet, females get assigned a one and males a two. In later lessons we will show you how you could change these assignments.\n\n\n\nfactors\n\n\nLet’s create a factor vector and explore a bit more. We’ll start by creating a character vector describing three different levels of expression. Perhaps the first value represents expression in mouse1, the second value represents expression in mouse2, and so on and so forth:\n# Create a character vector and store the vector as a variable called 'expression'\nexpression &lt;- c(\"low\", \"high\", \"medium\", \"high\", \"low\", \"medium\", \"high\")\nNow we can convert this character vector into a factor using the factor() function:\n# Turn 'expression' vector into a factor\nexpression &lt;- factor(expression)\nSo, what exactly happened when we applied the factor() function?\n\n\n\nfactor_new\n\n\nThe expression vector is categorical, in that all the values in the vector belong to a set of categories; in this case, the categories are low, medium, and high. By turning the expression vector into a factor, the categories are assigned integers alphabetically, with high=1, low=2, medium=3. This in effect assigns the different factor levels. You can view the newly created factor variable and the levels in the Environment window.\n\n\n\nFactor variables in environment\n\n\nSo now that we have an idea of what factors are, when would you ever want to use them?\nFactors are extremely valuable for many operations often performed in R. For instance, factors can give order to values with no intrinsic order. In the previous ‘expression’ vector, if I wanted the low category to be less than the medium category, then we could do this using factors. Also, factors are necessary for many statistical methods. For example, descriptive statistics can be obtained for character vectors if you have the categorical information stored as a factor. Also, if you want to denote which category is your base level for a statistical comparison, then you would need to have your category variable stored as a factor with the base level assigned to 1. Anytime that it is helpful to have the categories thought of as groups in an analysis, the factor function makes this possible. For instance, if you want to color your plots by treatment type, then you would need the treatment variable to be a factor.\n\nExercises\nLet’s say that in our experimental analyses, we are working with three different sets of cells: normal, cells knocked out for geneA (a very exciting gene), and cells overexpressing geneA. We have three replicates for each celltype.\n\nCreate a vector named samplegroup with nine elements: 3 control (“CTL”) values, 3 knock-out (“KO”) values, and 3 over-expressing (“OE”) values.\nTurn samplegroup into a factor data structure.\n\n\n\n\nMatrix\nA matrix in R is a collection of vectors of same length and identical datatype. Vectors can be combined as columns in the matrix or by row, to create a 2-dimensional structure.\n\n\n\nmatrix\n\n\nMatrices are used commonly as part of the mathematical machinery of statistics. They are usually of numeric datatype and used in computational algorithms to serve as a checkpoint. For example, if input data is not of identical data type (numeric, character, etc.), the matrix() function will throw an error and stop any downstream code execution.\n\n\nData Frame\nA data.frame is the de facto data structure for most tabular data and what we use for statistics and plotting. A data.frame is similar to a matrix in that it’s a collection of vectors of the same length and each vector represents a column. However, in a dataframe each vector can be of a different data type (e.g., characters, integers, factors). In the data frame pictured below, the first column is character, the second column is numeric, the third is character, and the fourth is logical.\n\n\n\ndataframe\n\n\nA data frame is the most common way of storing data in R, and if used systematically makes data analysis easier.\nWe can create a dataframe by bringing vectors together to form the columns. We do this using the data.frame() function, and giving the function the different vectors we would like to bind together. This function will only work for vectors of the same length.\n# Create a data frame and store it as a variable called 'df'\ndf &lt;- data.frame(species, glengths)\nWe can see that a new variable called df has been created in our Environment within a new section called Data. In the Environment, it specifies that df has 3 observations of 2 variables. What does that mean? In R, rows always come first, so it means that df has 3 rows and 2 columns. We can get additional information if we click on the blue circle with the white triangle in the middle next to df. It will display information about each of the columns in the data frame, giving information about what the data type is of each of the columns and the first few values of those columns.\nAnother handy feature in RStudio is that if we hover the cursor over the variable name in the Environment, df, it will turn into a pointing finger. If you click on df, it will open the data frame as it’s own tab next to the script editor. We can explore the table interactively within this window. To close, just click on the X on the tab.\nAs with any variable, we can print the values stored inside to the console if we type the variable’s name and run.\ndf\n\nExercise\nCreate a data frame called favorite_books with the following vectors as columns:\ntitles &lt;- c(\"Catch-22\", \"Pride and Prejudice\", \"Nineteen Eighty Four\")\npages &lt;- c(453, 432, 328)\n\n\n\nLists\nLists are a data structure in R that can be perhaps a bit daunting at first, but soon become amazingly useful. A list is a data structure that can hold any number of any types of other data structures.\n\n\n\nlist\n\n\nIf you have variables of different data structures you wish to combine, you can put all of those into one list object by using the list() function and placing all the items you wish to combine within parentheses:\nlist1 &lt;- list(species, df, number)\nWe see list1 appear within the Data section of our environment as a list of 3 components or variables. If we click on the blue circle with a triangle in the middle, it’s not quite as interpretable as it was for data frames.\nEssentially, each component is preceded by a colon. The first colon give the species vector, the second colon precedes the df data frame, with the dollar signs indicating the different columns, the last colon gives the single value, number.\nIf I click on list1, it opens a tab where you can explore the contents a bit more, but it’s still not super intuitive. The easiest way to view small lists is to print to the console.\nLet’s type list1 and print to the console by running it.\nlist1\n    \n[[1]]\n[1] \"ecoli\" \"human\" \"corn\" \n\n[[2]]\n  species glengths\n1   ecoli      4.6\n2   human   3000.0\n3    corn  50000.0\n\n[[3]]\n[1] 5\nThere are three components corresponding to the three different variables we passed in, and what you see is that structure of each is retained. Each component of a list is referenced based on the number position. We will talk more about how to inspect and manipulate components of lists in later lessons.\n\nExercise\nCreate a list called list2 containing species, glengths, and number.\n\nNow that we know what lists are, why would we ever want to use them? When getting started with R, you will most likely encounter lists with different tools or functions that you use. Oftentimes a tool will need a list as input, so that all the information needed to run the tool is present in a single variable. Sometimes a tool will output a list when working through an analysis. Knowing how to work with them and extract necessary information will be critically important.\nAs you become more comfortable with R, you will find yourself using lists more often. One common use of lists is to make iterative processes more efficient. For example, let’s say you had multiple data frames containing the same weather information from different cities throughout North America. You wanted to perform the same task on each of the data frames, but that would take a long time to do individually. Instead you could create a list where each data frame is a component of the list. Then, you could perform the task on the list instead, which would be applied to each of the components.\n\nThis lesson has been developed by members of the teaching team at the Harvard Chan Bioinformatics Core (HBC). These are open access materials distributed under the terms of the Creative Commons Attribution license (CC BY 4.0), which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.\n\nThe materials used in this lesson are adapted from work that is Copyright © Data Carpentry (http://datacarpentry.org/). All Data Carpentry instructional material is made available under the Creative Commons Attribution license (CC BY 4.0)."
  },
  {
    "objectID": "get-started/basic-intro.html",
    "href": "get-started/basic-intro.html",
    "title": "Basic Introduction to R and Rstudio",
    "section": "",
    "text": "Describe the purpose and use of each pane in RStudio\nLocate buttons and options in RStudio\nDefine a variable\nAssign data to a variable\nManage a workspace in an interactive R session\nUse mathematical and comparison operators\nCall functions\nManage packages"
  },
  {
    "objectID": "get-started/basic-intro.html#why-use-r-and-r-studio",
    "href": "get-started/basic-intro.html#why-use-r-and-r-studio",
    "title": "Basic Introduction to R and Rstudio",
    "section": "Why use R and R studio?",
    "text": "Why use R and R studio?\nWelcome to the R portion of the Software Carpentry workshop!\nScience is a multi-step process: once you’ve designed an experiment and collected data, the real fun begins with analysis! Throughout this lesson, we’re going to teach you some of the fundamentals of the R language as well as some best practices for organizing code for scientific projects that will make your life easier.\nAlthough we could use a spreadsheet in Microsoft Excel or Google sheets to analyze our data, these tools are limited in their flexibility and accessibility. Critically, they also are difficult to share steps which explore and change the raw data, which is key to “reproducible” research.\nTherefore, this lesson will teach you how to begin exploring your data using R and RStudio. The R program is available for Windows, Mac, and Linux operating systems, and is a freely-available where you downloaded it above. To run R, all you need is the R program.\nHowever, to make using R easier, we will use the program RStudio, which we also downloaded above. RStudio is a free, open-source, Integrated Development Environment (IDE). It provides a built-in editor, works on all platforms (including on servers) and provides many advantages such as integration with version control and project management."
  },
  {
    "objectID": "get-started/basic-intro.html#r-scripts",
    "href": "get-started/basic-intro.html#r-scripts",
    "title": "Basic Introduction to R and Rstudio",
    "section": "R scripts",
    "text": "R scripts\nAny commands that you write in the R console can be saved to a file to be re-run again. Files containing R code to be ran in this way are called R scripts. R scripts have .R at the end of their names to let you know what they are."
  },
  {
    "objectID": "get-started/basic-intro.html#workflow-within-rstudio",
    "href": "get-started/basic-intro.html#workflow-within-rstudio",
    "title": "Basic Introduction to R and Rstudio",
    "section": "Workflow within RStudio",
    "text": "Workflow within RStudio\nThere are two main ways one can work within RStudio:\n\nTest and play within the interactive R console then copy code into a .R file to run later.\n\n\nThis works well when doing small tests and initially starting off.\nIt quickly becomes laborious\n\n\nStart writing in a .R file and use RStudio’s short cut keys for the Run command to push the current line, selected lines or modified lines to the interactive R console.\n\n\nThis is a great way to start; all your code is saved for later\nYou will be able to run the file you create from within RStudio or using R’s source() function.\n\n\n\n\n\n\n\nTip: Running segments of your code\n\n\n\nRStudio offers you great flexibility in running code from within the editor window. There are buttons, menu choices, and keyboard shortcuts. To run the current line, you can\n\nclick on the Run button above the editor panel, or\nselect “Run Lines” from the “Code” menu, or\nhit Ctrl+Return in Windows or Linux or ⌘+Return on OS X. (This shortcut can also be seen by hovering the mouse over the button). To run a block of code, select it and then Run. If you have modified a line of code within a block of code you have just run, there is no need to reselect the section and Run, you can use the next button along, Re-run the previous region. This will run the previous code block including the modifications you have made."
  },
  {
    "objectID": "get-started/basic-intro.html#introduction-to-r",
    "href": "get-started/basic-intro.html#introduction-to-r",
    "title": "Basic Introduction to R and Rstudio",
    "section": "Introduction to R",
    "text": "Introduction to R\nMuch of your time in R will be spent in the R interactive console. This is where you will run all of your code, and can be a useful environment to try out ideas before adding them to an R script file. This console in RStudio is the same as the one you would get if you typed in R in your command-line environment.\nThe first thing you will see in the R interactive session is a bunch of information, followed by a “&gt;” and a blinking cursor. In many ways this is similar to the shell environment you learned about during the shell lessons: it operates on the same idea of a “Read, evaluate, print loop”: you type in commands, R tries to execute them, and then returns a result."
  },
  {
    "objectID": "get-started/basic-intro.html#using-r-as-a-calculator",
    "href": "get-started/basic-intro.html#using-r-as-a-calculator",
    "title": "Basic Introduction to R and Rstudio",
    "section": "Using R as a calculator",
    "text": "Using R as a calculator\nThe simplest thing you could do with R is to do arithmetic:\n\n1 + 100\n\n[1] 101\n\n\nAnd R will print out the answer, with a preceding “[1]”. [1] is the index of the first element of the line being printed in the console. For more information on indexing vectors, see Episode 6: Subsetting Data.\nIf you type in an incomplete command, R will wait for you to complete it. If you are familiar with Unix Shell’s bash, you may recognize this behavior from bash.\n&gt; 1 +\n+\nAny time you hit return and the R session shows a “+” instead of a “&gt;”, it means it’s waiting for you to complete the command. If you want to cancel a command you can hit Esc and RStudio will give you back the “&gt;” prompt.\n\n\n\n\n\n\nTip: Canceling commands\n\n\n\nIf you’re using R from the command line instead of from within RStudio, you need to use Ctrl+C instead of Esc to cancel the command. This applies to Mac users as well!\nCanceling a command isn’t only useful for killing incomplete commands: you can also use it to tell R to stop running code (for example if it’s taking much longer than you expect), or to get rid of the code you’re currently writing.\n\n\nWhen using R as a calculator, the order of operations is the same as you would have learned back in school.\nFrom highest to lowest precedence:\n\nParentheses: (, )\nExponents: ^ or **\nMultiply: *\nDivide: /\nAdd: +\nSubtract: -\n\n\n3 + 5 * 2\n\n[1] 13\n\n\nUse parentheses to group operations in order to force the order of evaluation if it differs from the default, or to make clear what you intend.\n\n(3 + 5) * 2\n\n[1] 16\n\n\nThis can get unwieldy when not needed, but clarifies your intentions. Remember that others may later read your code.\n\n(3 + (5 * (2 ^ 2))) # hard to read\n3 + 5 * 2 ^ 2       # clear, if you remember the rules\n3 + 5 * (2 ^ 2)     # if you forget some rules, this might help\n\nThe text after each line of code is called a “comment”. Anything that follows after the hash (or octothorpe) symbol # is ignored by R when it executes code.\nReally small or large numbers get a scientific notation:\n\n2/10000\n\n[1] 2e-04\n\n\nWhich is shorthand for “multiplied by 10^XX”. So 2e-4 is shorthand for 2 * 10^(-4).\nYou can write numbers in scientific notation too:\n\n5e3  # Note the lack of minus here\n\n[1] 5000"
  },
  {
    "objectID": "get-started/basic-intro.html#mathematical-functions",
    "href": "get-started/basic-intro.html#mathematical-functions",
    "title": "Basic Introduction to R and Rstudio",
    "section": "Mathematical functions",
    "text": "Mathematical functions\nR has many built in mathematical functions. To call a function, we can type its name, followed by open and closing parentheses. Functions take arguments as inputs, anything we type inside the parentheses of a function is considered an argument. Depending on the function, the number of arguments can vary from none to multiple. For example:\n\ngetwd() #returns an absolute filepath\n\ndoesn’t require an argument, whereas for the next set of mathematical functions we will need to supply the function a value in order to compute the result.\n\nsin(1)  # trigonometry functions\n\n[1] 0.841471\n\n\n\nlog(1)  # natural logarithm\n\n[1] 0\n\n\n\nlog10(10) # base-10 logarithm\n\n[1] 1\n\n\n\nexp(0.5) # e^(1/2)\n\n[1] 1.648721\n\n\nDon’t worry about trying to remember every function in R. You can look them up on Google, or if you can remember the start of the function’s name, use the tab completion in RStudio.\nThis is one advantage that RStudio has over R on its own, it has auto-completion abilities that allow you to more easily look up functions, their arguments, and the values that they take.\nTyping a ? before the name of a command will open the help page for that command. When using RStudio, this will open the ‘Help’ pane; if using R in the terminal, the help page will open in your browser. The help page will include a detailed description of the command and how it works. Scrolling to the bottom of the help page will usually show a collection of code examples which illustrate command usage. We’ll go through an example later."
  },
  {
    "objectID": "get-started/basic-intro.html#comparing-things",
    "href": "get-started/basic-intro.html#comparing-things",
    "title": "Basic Introduction to R and Rstudio",
    "section": "Comparing things",
    "text": "Comparing things\nWe can also do comparisons in R:\n\n1 == 1  # equality (note two equals signs, read as \"is equal to\")\n\n[1] TRUE\n\n\n\n1 != 2  # inequality (read as \"is not equal to\")\n\n[1] TRUE\n\n\n\n1 &lt; 2  # less than\n\n[1] TRUE\n\n\n\n1 &lt;= 1  # less than or equal to\n\n[1] TRUE\n\n\n\n1 &gt; 0  # greater than\n\n[1] TRUE\n\n\n\n1 &gt;= -9 # greater than or equal to\n\n[1] TRUE\n\n\n\n\n\n\n\n\nTip: Comparing Numbers\n\n\n\nA word of warning about comparing numbers: you should never use == to compare two numbers unless they are integers (a data type which can specifically represent only whole numbers).\nComputers may only represent decimal numbers with a certain degree of precision, so two numbers which look the same when printed out by R, may actually have different underlying representations and therefore be different by a small margin of error (called Machine numeric tolerance).\nInstead you should use the all.equal function.\nFurther reading: http://floating-point-gui.de/"
  },
  {
    "objectID": "get-started/basic-intro.html#variables-and-assignment",
    "href": "get-started/basic-intro.html#variables-and-assignment",
    "title": "Basic Introduction to R and Rstudio",
    "section": "Variables and assignment",
    "text": "Variables and assignment\nWe can store values in variables using the assignment operator &lt;-, like this:\n\nx &lt;- 1/40\n\nNotice that assignment does not print a value. Instead, we stored it for later in something called a variable. x now contains the value 0.025:\n\nx\n\n[1] 0.025\n\n\nMore precisely, the stored value is a decimal approximation of this fraction called a floating point number.\nLook for the Environment tab in the top right panel of RStudio, and you will see that x and its value have appeared. Our variable x can be used in place of a number in any calculation that expects a number:\n\nlog(x)\n\n[1] -3.688879\n\n\nNotice also that variables can be reassigned:\n\nx &lt;- 100\n\nx used to contain the value 0.025 and now it has the value 100.\nAssignment values can contain the variable being assigned to:\n\nx &lt;- x + 1 #notice how RStudio updates its description of x on the top right tab\ny &lt;- x * 2\n\nThe right hand side of the assignment can be any valid R expression. The right hand side is fully evaluated before the assignment occurs.\nVariable names can contain letters, numbers, underscores and periods but no spaces. They must start with a letter or a period followed by a letter (they cannot start with a number nor an underscore). Variables beginning with a period are hidden variables. Different people use different conventions for long variable names, these include\n\nperiods.between.words\nunderscores_between_words\ncamelCaseToSeparateWords\n\nWhat you use is up to you, but be consistent.\nIt is also possible to use the = operator for assignment:\n\nx = 1/40\n\nBut this is much less common among R users. The most important thing is to be consistent with the operator you use. There are occasionally places where it is less confusing to use &lt;- than =, and it is the most common symbol used in the community. So the recommendation is to use &lt;-.\n\n\n\n\n\n\nChallenge 1\n\n\n\n\n\nWhich of the following are valid R variable names?\n\nmin_height\nmax.height\n_age\n.mass\nMaxLength\nmin-length\n2widths\ncelsius2kelvin\n\n\n\n\n\n\n\nSolution to challenge 1\n\n\n\n\n\nThe following can be used as R variables:\n\nmin_height\nmax.height\nMaxLength\ncelsius2kelvin\n\nThe following creates a hidden variable:\n\n.mass\n\nThe following will not be able to be used to create a variable\n\n_age\nmin-length\n2widths"
  },
  {
    "objectID": "get-started/basic-intro.html#vectorization",
    "href": "get-started/basic-intro.html#vectorization",
    "title": "Basic Introduction to R and Rstudio",
    "section": "Vectorization",
    "text": "Vectorization\nOne final thing to be aware of is that R is vectorized, meaning that variables and functions can have vectors as values. In contrast to physics and mathematics, a vector in R describes a set of values in a certain order of the same data type. For example:\n\n1:5\n\n[1] 1 2 3 4 5\n\n2^(1:5)\n\n[1]  2  4  8 16 32\n\nx &lt;- 1:5\n2^x\n\n[1]  2  4  8 16 32\n\n\nThis is incredibly powerful; we will discuss this further in an upcoming lesson."
  },
  {
    "objectID": "get-started/basic-intro.html#managing-your-environment",
    "href": "get-started/basic-intro.html#managing-your-environment",
    "title": "Basic Introduction to R and Rstudio",
    "section": "Managing your environment",
    "text": "Managing your environment\nThere are a few useful commands you can use to interact with the R session.\nls will list all of the variables and functions stored in the global environment (your working R session):\n\nls()\n\n\n\n[1] \"x\" \"y\"\n\n\n\n\n\n\n\n\nTip: hidden objects\n\n\n\nLike in the shell, ls will hide any variables or functions starting with a “.” by default. To list all objects, type ls(all.names=TRUE) instead\n\n\nNote here that we didn’t give any arguments to ls, but we still needed to give the parentheses to tell R to call the function.\nIf we type ls by itself, R prints a bunch of code instead of a listing of objects.\n\nls\n\nfunction (name, pos = -1L, envir = as.environment(pos), all.names = FALSE, \n    pattern, sorted = TRUE) \n{\n    if (!missing(name)) {\n        pos &lt;- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name &lt;- substitute(name)\n            if (!is.character(name)) \n                name &lt;- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos &lt;- name\n        }\n    }\n    all.names &lt;- .Internal(ls(envir, all.names, sorted))\n    if (!missing(pattern)) {\n        if ((ll &lt;- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern &lt;- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[&lt;-\", pattern))) {\n                pattern &lt;- sub(\"\\\\[&lt;-\", \"\\\\\\\\\\\\[&lt;-\", pattern)\n                warning(\"replaced '[&lt;-' by '\\\\\\\\[&lt;-' in regular expression pattern\")\n            }\n        }\n        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n&lt;bytecode: 0x5a4bf7814be0&gt;\n&lt;environment: namespace:base&gt;\n\n\nWhat’s going on here?\nLike everything in R, ls is the name of an object, and entering the name of an object by itself prints the contents of the object. The object x that we created earlier contains 1, 2, 3, 4, 5:\n\nx\n\n[1] 1 2 3 4 5\n\n\nThe object ls contains the R code that makes the ls function work! We’ll talk more about how functions work and start writing our own later.\nYou can use rm to delete objects you no longer need:\n\nrm(x)\n\nIf you have lots of things in your environment and want to delete all of them, you can pass the results of ls to the rm function:\n\nrm(list = ls())\n\nIn this case we’ve combined the two. Like the order of operations, anything inside the innermost parentheses is evaluated first, and so on.\nIn this case we’ve specified that the results of ls should be used for the list argument in rm. When assigning values to arguments by name, you must use the = operator!!\nIf instead we use &lt;-, there will be unintended side effects, or you may get an error message:\n\nrm(list &lt;- ls())\n\nError in rm(list &lt;- ls()): ... deve conter nomes ou cadeia de caracteres\n\n\n\n\n\n\n\n\nTip: Warnings vs. Errors\n\n\n\nPay attention when R does something unexpected! Errors, like above, are thrown when R cannot proceed with a calculation. Warnings on the other hand usually mean that the function has run, but it probably hasn’t worked as expected.\nIn both cases, the message that R prints out usually give you clues how to fix a problem."
  },
  {
    "objectID": "get-started/basic-intro.html#r-packages",
    "href": "get-started/basic-intro.html#r-packages",
    "title": "Basic Introduction to R and Rstudio",
    "section": "R Packages",
    "text": "R Packages\nIt is possible to add functions to R by writing a package, or by obtaining a package written by someone else. As of this writing, there are over 10,000 packages available on CRAN (the comprehensive R archive network). R and RStudio have functionality for managing packages:\n\nYou can see what packages are installed by typing installed.packages()\nYou can install packages by typing install.packages(\"packagename\"), where packagename is the package name, in quotes.\nYou can update installed packages by typing update.packages()\nYou can remove a package with remove.packages(\"packagename\")\nYou can make a package available for use with library(packagename)\n\nPackages can also be viewed, loaded, and detached in the Packages tab of the lower right panel in RStudio. Clicking on this tab will display all of the installed packages with a checkbox next to them. If the box next to a package name is checked, the package is loaded and if it is empty, the package is not loaded. Click an empty box to load that package and click a checked box to detach that package.\nPackages can be installed and updated from the Package tab with the Install and Update buttons at the top of the tab."
  },
  {
    "objectID": "get-started/basic-intro.html#exercises",
    "href": "get-started/basic-intro.html#exercises",
    "title": "Basic Introduction to R and Rstudio",
    "section": "Exercises",
    "text": "Exercises\n\n\n\n\n\n\nChallenge 2\n\n\n\n\n\nWhat will be the value of each variable after each statement in the following program?\n\nmass &lt;- 47.5\nage &lt;- 122\nmass &lt;- mass * 2.3\nage &lt;- age - 20\n\n\n\n\n\n\n\nSolution to challenge 2\n\n\n\n\n\n\nmass &lt;- 47.5\n\nThis will give a value of 47.5 for the variable mass\n\nage &lt;- 122\n\nThis will give a value of 122 for the variable age\n\nmass &lt;- mass * 2.3\n\nThis will multiply the existing value of 47.5 by 2.3 to give a new value of 109.25 to the variable mass.\n\nage &lt;- age - 20\n\nThis will subtract 20 from the existing value of 122 to give a new value of 102 to the variable age.\n\n\n\n\n\n\n\n\n\n\n\n\nChallenge 3\n\n\n\n\n\nRun the code from the previous challenge, and write a command to compare mass to age. Is mass larger than age?\n\n\n\n\n\n\nSolution to challenge 3\n\n\n\n\n\nOne way of answering this question in R is to use the &gt; to set up the following:\n\nmass &gt; age\n\n[1] TRUE\n\n\nThis should yield a boolean value of TRUE since 109.25 is greater than 102.\n\n\n\n\n\n\n\n\n\n\n\n\nChallenge 4\n\n\n\n\n\nClean up your working environment by deleting the mass and age variables.\n\n\n\n\n\n\nSolution to challenge 4\n\n\n\n\n\nWe can use the rm command to accomplish this task\n\nrm(age, mass)\n\n\n\n\n\n\n\n\n\n\n\n\n\nChallenge 5\n\n\n\n\n\nInstall the following packages: ggplot2, plyr, gapminder\n\n\n\n\n\n\nSolution to challenge 5\n\n\n\n\n\nWe can use the install.packages() command to install the required packages.\n\ninstall.packages(\"ggplot2\")\ninstall.packages(\"plyr\")\ninstall.packages(\"gapminder\")\n\nAn alternate solution, to install multiple packages with a single install.packages() command is:\n\ninstall.packages(c(\"ggplot2\", \"plyr\", \"gapminder\"))\n\n\n\n\n\n\n\nWhen installing ggplot2, it may be required for some users to use the dependencies flag as a result of lazy loading affecting the install. This suggestion is not tied to any known bug discussion, and is advised based off instructor feedback/experience in resolving stochastic occurences of errors identified through delivery of this workshop:\n\ninstall.packages(\"ggplot2\", dependencies = TRUE)\n\n\n\n\n\n\n\nImportant\n\n\n\n\nUse RStudio to write and run R programs.\nR has the usual arithmetic operators and mathematical functions.\nUse &lt;- to assign values to variables.\nUse ls() to list the variables in a program.\nUse rm() to delete objects in a program.\nUse install.packages() to install packages (libraries).\n\n\n\nThis learning material was modified after the one originally created by: Naupaka Zimmerman, Greg Wilson, Raniere Silva, Scott Ritchie, François Michonneau, Jeffrey Oliver, … Yuka Takemon. (2019, July). swcarpentry/r-novice-gapminder: Software Carpentry: R for Reproducible Scientific Analysis, June 2019 (Version v2019.06.1). Zenodo. http://doi.org/10.5281/zenodo.3265164"
  },
  {
    "objectID": "resources/quarto.html",
    "href": "resources/quarto.html",
    "title": "Using Quarto",
    "section": "",
    "text": "Quarto Markdown is regular Markdown with R code and output sprinkled in. You can do everything you can with regular Markdown, but you can incorporate graphs, tables, and other code output directly in your document. You can create HTML, PDF, and Word documents, PowerPoint and HTML presentations, websites, books, and even interactive dashboards with Quarto. This whole course website is created with Quarto.\nQuarto’s predecessor was called R Markdown and worked exclusively with R (though there are ways to use other languages in document). Quarto is essentially “R Markdown 2.0,” but it is designed to be language agnostic. You can use R, Python, Julia, Observable JS, and even Stata code all in the same document. It is magical.\nHere are the most important things you’ll need to know about Quarto in this class:"
  },
  {
    "objectID": "resources/quarto.html#key-terms",
    "href": "resources/quarto.html#key-terms",
    "title": "Using Quarto",
    "section": "Key terms",
    "text": "Key terms\n\nDocument: A Markdown file where you type stuff\nChunk: A piece of R code that is included in your document. It looks like this:\n```{r}\n# Code goes here\n1 + 1\n```\nThere must be an empty line before and after the chunk. The final three backticks must be the only thing on the line—if you add more text, or if you forget to add the backticks, or accidentally delete the backticks, your document will not render correctly.\nRender: When you render a document, R runs each of the chunks sequentially and converts the output of each chunk into Markdown. R then runs the document through pandoc to convert it to HTML or PDF or Word (or whatever output you’ve selected).\nYou can render by clicking on the “Render” button at the top of the editor window, or by pressing ⌘⇧K on macOS or control + shift + K on Windows.\n\n::: {.cell layout-align=“center”} ::: {.cell-output-display}  ::: :::"
  },
  {
    "objectID": "resources/quarto.html#add-chunks",
    "href": "resources/quarto.html#add-chunks",
    "title": "Using Quarto",
    "section": "Add chunks",
    "text": "Add chunks\nThere are three ways to insert chunks:\n\nPress ⌘⌥I on macOS or control + alt + I on Windows\nClick on the “Insert” button at the top of the editor window\n\n::: {.cell layout-align=“center”} ::: {.cell-output-display}  ::: :::\n\nManually type all the backticks and curly braces (don’t do this)"
  },
  {
    "objectID": "resources/quarto.html#chunk-names",
    "href": "resources/quarto.html#chunk-names",
    "title": "Using Quarto",
    "section": "Chunk names",
    "text": "Chunk names\nYou can add names to chunks to make it easier to navigate your document. If you click on the little dropdown menu at the bottom of your editor in RStudio, you can see a table of contents that shows all the headings and chunks. If you name chunks, they’ll appear in the list. If you don’t include a name, the chunk will still show up, but you won’t know what it does.\n\n\n\n\n\n\n\n\n\nThere are two ways to add a chunk name:\n\nAs a special comment called label:, following #| at the top of the chunk (this is the preferred way):\n```{r}\n#| label: name-of-this-chunk\n\n1 + 1\n```\nImmediately after the {r in the first line of the chunk (this is the older way):\n```{r name-of-this-chunk}\n1 + 1\n```\n\nNames cannot contain spaces, but they can contain underscores and dashes. All chunk names in your document must be unique."
  },
  {
    "objectID": "resources/quarto.html#chunk-options",
    "href": "resources/quarto.html#chunk-options",
    "title": "Using Quarto",
    "section": "Chunk options",
    "text": "Chunk options\nThere are a bunch of different options you can set for each chunk. You can see a complete list in the R Markdown Reference Guide or at {knitr}’s website.\nSet chunk options as special comments following #| at the top of the chunk (this is the preferred way):\n```{r}\n#| label: fig-some-plot\n#| fig-cap: \"Here's a caption for this plot\"\n#| fig-width: 6\n#| fig-height: 4\n#| echo: false\n\nggplot(mpg, aes(x = displ, y = hwy, color = drv)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n```\nTechnically you can also set these options inside the {r} section of the chunk—this is the old way to do it, but it gets really gross and long when you have lots of settings:\n{r fig-some-plot, fig.width=6, fig.height=4, echo=FALSE, fig.cap = \"Here's a caption for this plot\"}\nHere are some of the most common chunk options you’ll use in this class:\n\nlabel: fig-whatever: Try to always use chunk labels. If you want things to be cross-referenceable, use a fig- prefix on chunks that make figures and a tbl- prefix on chunks that make tables\ntbl-cap: \"Blah\": Add a caption to your table\nfig-cap: \"Blah\": Add a caption to your figure\nfig-width: 5 and fig-height: 3 (or whatever number you want): Set the dimensions for figures\necho: false: The code is not shown in the final document, but the results are\nmessage: false: Any messages that R generates (like all the notes that appear after you load a package) are omitted\nwarning: false: Any warnings that R generates are omitted\ninclude: false: The chunk still runs, but the code and results are not included in the final document"
  },
  {
    "objectID": "resources/quarto.html#inline-chunks",
    "href": "resources/quarto.html#inline-chunks",
    "title": "Using Quarto",
    "section": "Inline chunks",
    "text": "Inline chunks\nYou can also include R output directly in your text, which is really helpful if you want to report numbers from your analysis. To do this, use `r r_code_here`.\nIt’s generally easiest to calculate numbers in a regular chunk beforehand and then use an inline chunk to display the value in your text. For instance, this document…\n```{{r}}\n#| label: find-avg-mpg\n#| echo: false\n\navg_mpg &lt;- mean(mtcars$mpg)\n```\nThe average fuel efficiency for cars from 1974 was r round(avg_mpg, 1) miles per gallon.\n… would render to this:\n\nThe average fuel efficiency for cars from 1974 was 20.1 miles per gallon."
  },
  {
    "objectID": "resources/quarto.html#output-formats",
    "href": "resources/quarto.html#output-formats",
    "title": "Using Quarto",
    "section": "Output formats",
    "text": "Output formats\nYou can specify what kind of document you create when you render in the YAML front matter.\ntitle: \"My document\"\nformat:\n  html: default\n  pdf: default\n  docx: default\nThe indentation of the YAML section matters, especially when you have settings nested under each output type. Here’s what a typical format section might look like:\n---\ntitle: \"My document\"\nauthor: \"My name\"\ndate: \"June 4, 2024\"\nformat: \n  html_document: \n    toc: yes\n  pdf_document: \n    toc: yes\n  word_document: \n    toc: yes\n---\n\nPage reproduced from: Andrew Heiss All content licensed under a Creative Commons Attribution-NonCommercial 4.0 International license (CC BY-NC 4.0)"
  },
  {
    "objectID": "resources/r.html",
    "href": "resources/r.html",
    "title": "Nice & Free R Courses",
    "section": "",
    "text": "Here is a list of websites and YouTube channels offering free tutorials and resources for learning R, RStudio, and statistics, now with direct links:"
  },
  {
    "objectID": "resources/r.html#free-r-and-rstudio-tutorials-and-statistics-resources",
    "href": "resources/r.html#free-r-and-rstudio-tutorials-and-statistics-resources",
    "title": "Nice & Free R Courses",
    "section": "",
    "text": "Here is a list of websites and YouTube channels offering free tutorials and resources for learning R, RStudio, and statistics, now with direct links:"
  },
  {
    "objectID": "resources/r.html#websites",
    "href": "resources/r.html#websites",
    "title": "Nice & Free R Courses",
    "section": "Websites:",
    "text": "Websites:\n\nR-Project.org: The official website for the R programming language. It contains comprehensive documentation, manuals, and links to various resources. While not structured as a tutorial, it’s an invaluable reference.\nRStudio Education (Posit Education): The official education page from RStudio (now Posit). They offer a wealth of free resources, including webinars, guides, and links to other learning materials.\nQuarto tips: Loads of tips to tweak your Quarto website and workbook."
  },
  {
    "objectID": "resources/r.html#books",
    "href": "resources/r.html#books",
    "title": "Nice & Free R Courses",
    "section": "Books",
    "text": "Books\n\nR for Data Science (r4ds.had.co.nz): A comprehensive free online book by Hadley Wickham and Garrett Grolemund, focusing on using R for data science tasks.\nAdvanced R (adv-r.hadley.nz): Another excellent free online book by Hadley Wickham, delving into more advanced aspects of R programming."
  },
  {
    "objectID": "resources/r.html#free-online-r-courses",
    "href": "resources/r.html#free-online-r-courses",
    "title": "Nice & Free R Courses",
    "section": "Free online R courses",
    "text": "Free online R courses\n\nR and the Tidyverse for working with data: Basics of R and Tidyverse, including ggplot and data wrnagling;\nIntroduction to R: Another simple and straightforward online course of R\nSTAT 545: Data wrangling, exploration, and analysis with R"
  },
  {
    "objectID": "resources/r.html#forums",
    "href": "resources/r.html#forums",
    "title": "Nice & Free R Courses",
    "section": "Forums",
    "text": "Forums\n\nStack Overflow: A question-and-answer website where you can find solutions to specific R and statistics-related problems.\nCross Validated (stats.stackexchange.com): A dedicated Stack Exchange site for statistics questions."
  },
  {
    "objectID": "resources/r.html#youtube-channels",
    "href": "resources/r.html#youtube-channels",
    "title": "Nice & Free R Courses",
    "section": "YouTube Channels:",
    "text": "YouTube Channels:\n\nPosit PBC: Offical site of the Posit company (Rstudio, Quarto and Tidyverse).\nStatQuest with Josh Starmer: While not exclusively focused on R, this channel provides excellent and intuitive explanations of statistical concepts.\nEquitable Equations:Offers a wide range of statistics tutorials, many demonstrating implementation in R.\nRichardOnData: Provides tutorials and explanations on various data science topics, including R programming and statistical analysis.\n\nPlease note that the availability of free content on these platforms may change over time. Always check the specific website or channel for their current offerings."
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "RM&DA Schedule",
    "section": "",
    "text": "Here’s your roadmap for the semester!\n\nGet-started  Here is where you should start your journey. This is a short introduction to R and RStudio.\nContent  All the lessons live here, grouped by weeks.\n\n[Preparation] - Every week starts here with a few steps to set up the basics in terms of packages and readings.\n[Session] - Here you’ll find the slides and recorded videos focused on the core learning outcomes\n[Exercise] - This is your post-sesssion, auto-learning hours of study and must be organized in your Quarto workbook.\n\n\n\n\n\n\ntl;dr: You should follow this general process for each week:\n\nDo everything on the preparation section ()\nWatch the recorded videos and check the slides of the lesson ()\nComplete the exercise () using your quarto workbook () and submit it to the respective NOW Dropbox"
  },
  {
    "objectID": "schedule.html#schedule",
    "href": "schedule.html#schedule",
    "title": "RM&DA Schedule",
    "section": "",
    "text": "Here’s your roadmap for the semester!\n\nGet-started  Here is where you should start your journey. This is a short introduction to R and RStudio.\nContent  All the lessons live here, grouped by weeks.\n\n[Preparation] - Every week starts here with a few steps to set up the basics in terms of packages and readings.\n[Session] - Here you’ll find the slides and recorded videos focused on the core learning outcomes\n[Exercise] - This is your post-sesssion, auto-learning hours of study and must be organized in your Quarto workbook.\n\n\n\n\n\n\ntl;dr: You should follow this general process for each week:\n\nDo everything on the preparation section ()\nWatch the recorded videos and check the slides of the lesson ()\nComplete the exercise () using your quarto workbook () and submit it to the respective NOW Dropbox"
  },
  {
    "objectID": "sessions/index.html",
    "href": "sessions/index.html",
    "title": "Content",
    "section": "",
    "text": "Week 1 - Introduction to RMDA\n\n\n\n\n\n\nFelipe Melo\n\n\nApr 6, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 2 - Data Wrangling & Research Questions\n\n\n\n\n\n\nFelipe Melo\n\n\nApr 20, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 3 - Data Visualisation & Scientific Hypotheses\n\n\n\n\n\n\nFelipe Melo\n\n\nApr 19, 2025\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "sessions/week1/1-intro.html",
    "href": "sessions/week1/1-intro.html",
    "title": "Week 1 - Introduction to RMDA",
    "section": "",
    "text": "Today you are going to understand how this modules works."
  },
  {
    "objectID": "sessions/week1/1-intro.html#slides",
    "href": "sessions/week1/1-intro.html#slides",
    "title": "Week 1 - Introduction to RMDA",
    "section": "Slides",
    "text": "Slides\n    View slides in full screen"
  },
  {
    "objectID": "sessions/week1/1-intro.html#videos",
    "href": "sessions/week1/1-intro.html#videos",
    "title": "Week 1 - Introduction to RMDA",
    "section": "Videos",
    "text": "Videos"
  },
  {
    "objectID": "sessions/week1/1-intro.html#exercise-1---create-your-workbook",
    "href": "sessions/week1/1-intro.html#exercise-1---create-your-workbook",
    "title": "Week 1 - Introduction to RMDA",
    "section": "Exercise 1 - Create your workbook",
    "text": "Exercise 1 - Create your workbook"
  },
  {
    "objectID": "sessions/week1/1-intro.html#introduction",
    "href": "sessions/week1/1-intro.html#introduction",
    "title": "Week 1 - Introduction to RMDA",
    "section": "Introduction",
    "text": "Introduction\nQuarto is a powerful tool for creating dynamic documents and websites. This tutorial will guide you through the process of creating a simple webpage using Quarto."
  },
  {
    "objectID": "sessions/week1/1-intro.html#prerequisites",
    "href": "sessions/week1/1-intro.html#prerequisites",
    "title": "Week 1 - Introduction to RMDA",
    "section": "Prerequisites",
    "text": "Prerequisites\nBefore you begin, make sure you have the following installed:\n\nQuarto: You can download and install Quarto from quarto.org.\nRstudio: However, any text editor will work, such as VS Code, Sublime Text, or Notepad++.\n\n\nStep 1: Create a New Quarto Document\n\nOpen your terminal or command prompt.\nNavigate to the directory where you want to create your webpage.\nRun the following command to create a new Quarto document:\nquarto create webpage.qmd\nThis command creates a file named webpage.qmd.\n\n\n\nStep 2: Edit the Quarto Document\n\nOpen webpage.qmd in your text editor.\nYou’ll see some default content, including a title and some example text.\nModify the content to create your webpage. For example:\n---\ntitle: \"My First Quarto Webpage\"\nformat: html\n---\n\n## Welcome!\n\nThis is my first webpage created with Quarto.\n\nHere's a simple list:\n\n* Item 1\n* Item 2\n* Item 3\n\nYou can also include code blocks:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(\"Hello, Quarto!\")\n\n[1] \"Hello, Quarto!\"\n\n:::\nAnd mathematical equations:\n\\[\nE = mc^2\n\\]\nYou can add images too:\n\nknitr::include_graphics(\"https://quarto.org/quarto.png\")\n\n\n\n\n\n\n\n\n```\n\nExplanation of the code:\n\n---\ntitle: \"My First Quarto Webpage\"\nformat: html\n---\n\nThis is the YAML header, which sets the title of your webpage and specifies the output format (HTML in this case).\n\n## Welcome! : This is a level 2 heading.\n* Item 1 : This creates a bulleted list.\n```{r}: This begins a R code block.\n\n\n\n\n\n\n\nTip\n\n\n\nUse keyborad shrotcut crtl+alt+i to create a R code chunk\n\n\n\n$$E = mc^2$$: This inserts a LaTeX equation.\nknitr::include_graphics(\"https://quarto.org/quarto.png\"): This includes an image from a URL.\n\n\n\nStep 3: Render the Webpage\n\nIn your terminal or command prompt, navigate to the directory containing webpage.qmd.\nRun the following command to render the webpage:\nquarto render webpage.qmd\nThis command will create an HTML file named webpage.html in the same directory.\n\n\n\nStep 4: View the Webpage\n\nOpen webpage.html in your web browser.\nYou should see your webpage with the content you created."
  },
  {
    "objectID": "sessions/week1/1-intro.html#adding-more-content",
    "href": "sessions/week1/1-intro.html#adding-more-content",
    "title": "Week 1 - Introduction to RMDA",
    "section": "Adding more content",
    "text": "Adding more content\nYou can add more content to your webpage by editing webpage.qmd. Quarto supports various types of content, including:\n\nHeadings: Use #, ##, ###, etc. for different heading levels.\nParagraphs: Just type your text.\nLists: Use * or - for unordered lists, and 1., 2., etc. for ordered lists.\nCode Blocks: Use ```{r} to insert code blocks.\nMathematical Equations: Use $$ for LaTeX equations.\nImages: Use ![alt text](path/to/image.png) or {r} knitr::include_graphics(\"path/to/image.png\").\nLinks: Use [link text](url).\nTables: Use Markdown table syntax."
  },
  {
    "objectID": "sessions/week1/1-intro.html#further-exploration",
    "href": "sessions/week1/1-intro.html#further-exploration",
    "title": "Week 1 - Introduction to RMDA",
    "section": "Further Exploration",
    "text": "Further Exploration\n\nExplore the Quarto documentation for more advanced features: quarto.org.\nExperiment with different output formats, such as PDF or Word.\nLearn about Quarto projects for creating multi-page websites.\nLook into adding CSS and Javascript for styling and interactivity."
  },
  {
    "objectID": "sessions/week1/1-intro.html#publishing-to-quarto-pub",
    "href": "sessions/week1/1-intro.html#publishing-to-quarto-pub",
    "title": "Week 1 - Introduction to RMDA",
    "section": "Publishing to Quarto Pub",
    "text": "Publishing to Quarto Pub\nKnow how to publish your Quarto webpage to Quarto Pub, making it accessible online."
  },
  {
    "objectID": "sessions/week1/1-intro.html#prerequisites-1",
    "href": "sessions/week1/1-intro.html#prerequisites-1",
    "title": "Week 1 - Introduction to RMDA",
    "section": "Prerequisites",
    "text": "Prerequisites\n\nAll the prerequisites from the previous tutorial.\nA Quarto Pub account. You can create one at quarto.pub.\n\n\nStep 1: Create a Quarto Webpage (If you haven’t already)\nIf you haven’t already created a Quarto webpage, follow the steps in the previous tutorial to create webpage.qmd and render it into webpage.html.\n\n\nStep 2: Initialize Quarto Pub\n\nOpen your terminal or command prompt.\nNavigate to the directory containing webpage.qmd.\nRun the following command to initialize Quarto Pub:\nquarto publish quarto-pub\nThis command will prompt you to log in to your Quarto Pub account. Follow the instructions to authenticate.\n\n\n\nStep 3: Publish Your Webpage\n\nAfter successful authentication, Quarto will detect the webpage.html file and ask you if you want to publish it.\nConfirm that you want to publish the webpage.\nQuarto will upload your webpage to Quarto Pub.\nYou’ll receive a URL where your webpage is hosted.\n\n\n\nStep 4: View Your Published Webpage\n\nOpen the URL provided by Quarto in your web browser.\nYou should see your webpage hosted on Quarto Pub.\n\n\n\nStep 5: Updating your published page.\nIf you edit the webpage.qmd file, you will need to re-render the html file, and then republish.\n\nEdit webpage.qmd with your text editor.\nRender the html file again.\nquarto render webpage.qmd\nRepublish the webpage.\nquarto publish quarto-pub\nQuarto Pub will update the existing webpage with the new content."
  },
  {
    "objectID": "sessions/week1/1-intro.html#important-considerations",
    "href": "sessions/week1/1-intro.html#important-considerations",
    "title": "Week 1 - Introduction to RMDA",
    "section": "Important Considerations",
    "text": "Important Considerations\n\nFile Organization: For more complex websites, consider creating a Quarto project. This will help you organize your files and manage your website more effectively.\nCustom Domains: Quarto Pub allows you to use custom domains for your websites. Refer to the Quarto Pub documentation for instructions.\nSecurity: Be mindful of the content you publish online. Avoid sharing sensitive information.\nQuarto Pub Limitations: Quarto Pub has some limitations, especially for large or complex websites. For more advanced hosting options, consider using other platforms like Netlify or GitHub Pages.\nFree tier limitations: The free tier of Quarto Pub has some limitations, regarding the number of deployments, and storage. Refer to the Quarto Pub documentation for the most up to date limitations."
  },
  {
    "objectID": "sessions/week1/1-intro.html#further-exploration-1",
    "href": "sessions/week1/1-intro.html#further-exploration-1",
    "title": "Week 1 - Introduction to RMDA",
    "section": "Further Exploration",
    "text": "Further Exploration\n\nExplore the Quarto Pub documentation for more advanced features: quarto.pub.\nLearn about Quarto projects for creating multi-page websites.\nExperiment with different Quarto Pub settings and options."
  },
  {
    "objectID": "sessions/week1/1-intro.html#exercise-1",
    "href": "sessions/week1/1-intro.html#exercise-1",
    "title": "Week 1 - Introduction to RMDA",
    "section": "Exercise",
    "text": "Exercise\nNow create your own quarto workbook:\n1 - Download the zip file of the project\n2- Tweak the *qmd file as you wish\n3 - Publish your workbook\n4 - Submit to the link to NOW dropbox folder"
  }
]